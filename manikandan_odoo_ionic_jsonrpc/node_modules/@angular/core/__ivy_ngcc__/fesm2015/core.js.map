{"version":3,"file":"core.js","sources":["../src/util/property.ts","../src/render3/fields.ts","../src/di/defs.ts","../src/di/injection_token.ts","../src/util/decorators.ts","../src/metadata/di.ts","../src/change_detection/constants.ts","../src/util.ts","../src/di/forward_ref.ts","../src/di/metadata.ts","../src/di/injector.ts","../src/type.ts","../src/reflection/reflection_capabilities.ts","../src/metadata/resource_loading.ts","../src/metadata/view.ts","../src/render3/ng_dev_mode.ts","../src/render3/definition.ts","../src/render3/jit/compiler_facade.ts","../src/render3/assert.ts","../src/render3/interfaces/context.ts","../src/render3/interfaces/view.ts","../src/change_detection/change_detection_util.ts","../src/render3/interfaces/container.ts","../src/render3/util.ts","../src/render3/context_discovery.ts","../src/render3/hooks.ts","../src/render3/errors.ts","../src/render3/interfaces/injector.ts","../src/render3/interfaces/projection.ts","../src/render3/interfaces/renderer.ts","../src/render3/node_assert.ts","../src/render3/node_manipulation.ts","../src/render3/node_selector_matcher.ts","../src/render3/styling/player_factory.ts","../src/render3/styling/core_player_handler.ts","../src/render3/styling/util.ts","../src/render3/styling/class_and_style_bindings.ts","../src/render3/instructions.ts","../src/render3/component.ts","../src/render3/features/inherit_definition_feature.ts","../src/render3/features/ng_onchanges_feature.ts","../src/render3/di.ts","../src/render3/features/public_feature.ts","../src/linker/component_factory.ts","../src/linker/component_factory_resolver.ts","../src/linker/ng_module_factory.ts","../src/render3/view_ref.ts","../src/render3/view_engine_compatibility.ts","../src/ivy_switch/runtime/ivy_switch_on.ts","../src/ivy_switch/runtime/legacy.ts","../src/linker/element_ref.ts","../src/render/api.ts","../src/render3/component_ref.ts","../src/render3/i18n.ts","../src/di/scope.ts","../src/di/r3_injector.ts","../src/render3/ng_module_ref.ts","../src/render3/pure_function.ts","../src/render3/pipe.ts","../src/event_emitter.ts","../src/linker/template_ref.ts","../src/render3/query.ts","../src/render3/view_engine_compatibility_prebound.ts","../src/sanitization/bypass.ts","../src/is_dev_mode.ts","../src/sanitization/inert_body.ts","../src/sanitization/url_sanitizer.ts","../src/sanitization/html_sanitizer.ts","../src/sanitization/security.ts","../src/sanitization/style_sanitizer.ts","../src/sanitization/sanitization.ts","../src/render3/jit/environment.ts","../src/render3/jit/util.ts","../src/render3/jit/module.ts","../src/render3/jit/directive.ts","../src/render3/jit/injectable.ts","../src/render3/jit/pipe.ts","../src/ivy_switch/compiler/ivy_switch_on.ts","../src/ivy_switch/compiler/legacy.ts","../src/metadata/directives.ts","../src/metadata/ng_module.ts","../src/version.ts","../src/di/injectable.ts","../src/errors.ts","../src/error_handler.ts","../src/di/reflective_errors.ts","../src/di/reflective_key.ts","../src/reflection/reflector.ts","../src/reflection/reflection.ts","../src/di/reflective_provider.ts","../src/di/reflective_injector.ts","../src/util/lang.ts","../src/application_init.ts","../src/application_tokens.ts","../src/console.ts","../src/linker/compiler.ts","../src/profile/wtf_impl.ts","../src/profile/profile.ts","../src/zone/ng_zone.ts","../src/testability/testability.ts","../src/application_ref.ts","../src/linker/ng_module_factory_loader.ts","../src/linker/query_list.ts","../src/linker/system_js_ng_module_factory_loader.ts","../src/linker/view_container_ref.ts","../src/change_detection/change_detector_ref.ts","../src/linker/view_ref.ts","../src/debug/debug_node.ts","../src/change_detection/differs/default_iterable_differ.ts","../src/change_detection/differs/default_keyvalue_differ.ts","../src/change_detection/differs/iterable_differs.ts","../src/change_detection/differs/keyvalue_differs.ts","../src/change_detection/change_detection.ts","../src/platform_core_providers.ts","../src/i18n/tokens.ts","../src/application_module.ts","../src/view/types.ts","../src/view/errors.ts","../src/view/util.ts","../src/view/element.ts","../src/view/ng_module.ts","../src/view/view_attach.ts","../src/view/refs.ts","../src/view/provider.ts","../src/view/query.ts","../src/view/ng_content.ts","../src/view/pure_expression.ts","../src/view/text.ts","../src/view/view.ts","../src/view/services.ts","../src/view/entrypoint.ts","../src/render3/discovery_utils.ts","../src/render3/debug.ts","../src/render3/players.ts","../core.ts"],"names":["global","EMPTY","INJECTOR","stringify","CIRCULAR","updateElementClassProp","updateElementStyleProp","projectionNodeStack","getRootContext","container","viewEngine_NgModuleRef","ivyOn.R3_ELEMENT_REF_FACTORY","ivyOn.R3_TEMPLATE_REF_FACTORY","ivyOn.R3_CHANGE_DETECTOR_REF_FACTORY","ivyOn.R3_VIEW_CONTAINER_REF_FACTORY","ivyOn.R3_RENDERER2_FACTORY","R3_ELEMENT_REF_FACTORY","R3_TEMPLATE_REF_FACTORY","R3_CHANGE_DETECTOR_REF_FACTORY","R3_VIEW_CONTAINER_REF_FACTORY","R3_RENDERER2_FACTORY","ComponentFactoryResolver","viewEngine_ComponentFactoryResolver","ComponentFactory","viewEngine_ComponentFactory","projection","ComponentRef","viewEngine_ElementRef","viewEngine_ComponentRef","EMPTY_ARRAY","NULL_INJECTOR","NgModuleRef","NgModuleFactory","viewEngine_NgModuleFactory","getPipeDef","insertView","removeView","ViewEngine_ElementRef","ViewEngine_TemplateRef","merge","r3.defineBase","r3.defineComponent","r3.defineDirective","r3.defineNgModule","r3.definePipe","r3.directiveInject","r3.getFactoryOf","r3.getInheritedFactory","r3.injectAttribute","r3.templateRefExtractor","r3.NgOnChangesFeature","r3.PublicFeature","r3.InheritDefinitionFeature","r3.elementAttribute","r3.bind","r3.container","r3.nextContext","r3.containerRefreshStart","r3.containerRefreshEnd","r3.loadQueryList","r3.namespaceHTML","r3.namespaceMathML","r3.namespaceSVG","r3.enableBindings","r3.disableBindings","r3.elementStart","r3.elementEnd","r3.element","r3.elementContainerStart","r3.elementContainerEnd","r3.pureFunction0","r3.pureFunction1","r3.pureFunction2","r3.pureFunction3","r3.pureFunction4","r3.pureFunction5","r3.pureFunction6","r3.pureFunction7","r3.pureFunction8","r3.pureFunctionV","r3.getCurrentView","r3.restoreView","r3.interpolation1","r3.interpolation2","r3.interpolation3","r3.interpolation4","r3.interpolation5","r3.interpolation6","r3.interpolation7","r3.interpolation8","r3.interpolationV","r3.elementClassProp","r3.listener","r3.load","r3.projection","r3.elementProperty","r3.pipeBind1","r3.pipeBind2","r3.pipeBind3","r3.pipeBind4","r3.pipeBindV","r3.projectionDef","r3.pipe","r3.query","r3.queryRefresh","r3.registerContentQuery","r3.reference","r3.elementStyling","r3.elementStylingMap","r3.elementStyleProp","r3.elementStylingApply","r3.template","r3.text","r3.textBinding","r3.embeddedViewStart","r3.embeddedViewEnd","r3.i18nAttribute","r3.i18nExp","r3.i18nStart","r3.i18nEnd","r3.i18nApply","sanitization.sanitizeHtml","sanitization.sanitizeStyle","sanitization.defaultStyleSanitizer","sanitization.sanitizeResourceUrl","sanitization.sanitizeScript","sanitization.sanitizeUrl","flatten","EMPTY_OBJ","USE_VALUE","ivyOn.R3_COMPILE_COMPONENT","ivyOn.R3_COMPILE_DIRECTIVE","ivyOn.R3_COMPILE_INJECTABLE","ivyOn.R3_COMPILE_NGMODULE","ivyOn.R3_COMPILE_PIPE","ivyOn.ivyEnabled","ivyEnabled","R3_COMPILE_COMPONENT","R3_COMPILE_DIRECTIVE","R3_COMPILE_INJECTABLE","R3_COMPILE_NGMODULE","R3_COMPILE_PIPE","ResolvedReflectiveFactory","noop","R3NgModuleFactory","QueryList","ViewRef","_renderCompCount","renderNode","tokenKey","createInjector","RendererV1","InjectorRefTokenKey","INJECTORRefTokenKey","_createProviderInstance","createQuery","anchorDef","viewDef","getRootView","element"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function getClosureSafeProperty<T>(objWithPropertyToExtract: T): string {\n  for (let key in objWithPropertyToExtract) {\n    if (objWithPropertyToExtract[key] === getClosureSafeProperty as any) {\n      return key;\n    }\n  }\n  throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nexport function fillProperties(target: {[key: string]: string}, source: {[key: string]: string}) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getClosureSafeProperty} from '../util/property';\n\nexport const NG_COMPONENT_DEF = getClosureSafeProperty({ngComponentDef: getClosureSafeProperty});\nexport const NG_DIRECTIVE_DEF = getClosureSafeProperty({ngDirectiveDef: getClosureSafeProperty});\nexport const NG_INJECTABLE_DEF = getClosureSafeProperty({ngInjectableDef: getClosureSafeProperty});\nexport const NG_INJECTOR_DEF = getClosureSafeProperty({ngInjectorDef: getClosureSafeProperty});\nexport const NG_PIPE_DEF = getClosureSafeProperty({ngPipeDef: getClosureSafeProperty});\nexport const NG_MODULE_DEF = getClosureSafeProperty({ngModuleDef: getClosureSafeProperty});\nexport const NG_BASE_DEF = getClosureSafeProperty({ngBaseDef: getClosureSafeProperty});\n\n/**\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nexport const NG_ELEMENT_ID = getClosureSafeProperty({__NG_ELEMENT_ID__: getClosureSafeProperty});\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NG_INJECTABLE_DEF, NG_INJECTOR_DEF} from '../render3/fields';\nimport {Type} from '../type';\n\nimport {ClassProvider, ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from './provider';\n\n/**\n * Information about how a type or `InjectionToken` interfaces with the DI system.\n *\n * At a minimum, this includes a `factory` which defines how to create the given type `T`, possibly\n * requesting injection of other types if necessary.\n *\n * Optionally, a `providedIn` parameter specifies that the given type belongs to a particular\n * `InjectorDef`, `NgModule`, or a special scope (e.g. `'root'`). A value of `null` indicates\n * that the injectable does not belong to any scope.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectableDef<T> {\n  /**\n   * Specifies that the given type belongs to a particular injector:\n   * - `InjectorType` such as `NgModule`,\n   * - `'root'` the root injector\n   * - `'any'` all injectors.\n   * - `null`, does not belong to any injector. Must be explicitly listed in the injector\n   *   `providers`.\n   */\n  providedIn: InjectorType<any>|'root'|'any'|null;\n\n  /**\n   * Factory method to execute to create an instance of the injectable.\n   */\n  factory: () => T;\n\n  /**\n   * In a case of no explicit injector, a location where the instance of the injectable is stored.\n   */\n  value: T|undefined;\n}\n\n/**\n * Information about the providers to be included in an `Injector` as well as how the given type\n * which carries the information should be created by the DI system.\n *\n * An `InjectorDef` can import other types which have `InjectorDefs`, forming a deep nested\n * structure of providers with a defined priority (identically to how `NgModule`s also have\n * an import/dependency structure).\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorDef<T> {\n  factory: () => T;\n\n  // TODO(alxhub): Narrow down the type here once decorators properly change the return type of the\n  // class they are decorating (to add the ngInjectableDef property for example).\n  providers: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n              StaticClassProvider|ClassProvider|any[])[];\n\n  imports: (InjectorType<any>|InjectorTypeWithProviders<any>)[];\n}\n\n/**\n * A `Type` which has an `InjectableDef` static field.\n *\n * `InjectableDefType`s contain their own Dependency Injection metadata and are usable in an\n * `InjectorDef`-based `StaticInjector.\n *\n * @publicApi\n */\nexport interface InjectableType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ngInjectableDef: never;\n}\n\n/**\n * A type which has an `InjectorDef` static field.\n *\n * `InjectorDefTypes` can be used to configure a `StaticInjector`.\n *\n * @publicApi\n */\nexport interface InjectorType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ngInjectorDef: never;\n}\n\n/**\n * Describes the `InjectorDef` equivalent of a `ModuleWithProviders`, an `InjectorDefType` with an\n * associated array of providers.\n *\n * Objects of this type can be listed in the imports section of an `InjectorDef`.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorTypeWithProviders<T> {\n  ngModule: InjectorType<T>;\n  providers?: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n               StaticClassProvider|ClassProvider|any[])[];\n}\n\n\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @publicApi\n */\nexport function defineInjectable<T>(opts: {\n  providedIn?: Type<any>| 'root' | 'any' | null,\n  factory: () => T,\n}): never {\n  return ({\n    providedIn: opts.providedIn as any || null, factory: opts.factory, value: undefined,\n  } as InjectableDef<T>) as never;\n}\n\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @publicApi\n */\nexport function defineInjector(options: {factory: () => any, providers?: any[], imports?: any[]}):\n    never {\n  return ({\n    factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n  } as InjectorDef<any>) as never;\n}\n\n/**\n * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectableDef`\n */\nexport function getInjectableDef<T>(type: any): InjectableDef<T>|null {\n  return type.hasOwnProperty(NG_INJECTABLE_DEF) ? (type as any)[NG_INJECTABLE_DEF] : null;\n}\n\n/**\n * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectorDef`\n */\nexport function getInjectorDef<T>(type: any): InjectorDef<T>|null {\n  return type.hasOwnProperty(NG_INJECTOR_DEF) ? (type as any)[NG_INJECTOR_DEF] : null;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\nimport {defineInjectable} from './defs';\n\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * @publicApi\n */\nexport class InjectionToken<T> {\n  /** @internal */\n  readonly ngMetadataName = 'InjectionToken';\n\n  readonly ngInjectableDef: never|undefined;\n\n  constructor(protected _desc: string, options?: {\n    providedIn?: Type<any>| 'root' | null,\n    factory: () => T\n  }) {\n    if (options !== undefined) {\n      this.ngInjectableDef = defineInjectable({\n        providedIn: options.providedIn || 'root',\n        factory: options.factory,\n      });\n    } else {\n      this.ngInjectableDef = undefined;\n    }\n  }\n\n  toString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nexport interface InjectableDefToken<T> extends InjectionToken<T> { ngInjectableDef: never; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n *\n * @publicApi\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n}\n\nexport const ANNOTATIONS = '__annotations__';\nexport const PARAMETERS = '__parameters__';\nexport const PROP_METADATA = '__prop__metadata__';\n\n/**\n * @suppress {globalThis}\n */\nexport function makeDecorator<T>(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (type: Type<T>) => void,\n    typeFn?: (type: Type<T>, ...args: any[]) => void):\n    {new (...args: any[]): any; (...args: any[]): any; (...args: any[]): (cls: any) => any;} {\n  const metaCtor = makeMetadataCtor(props);\n\n  function DecoratorFactory(...args: any[]): (cls: Type<T>) => any {\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, ...args);\n      return this;\n    }\n\n    const annotationInstance = new (DecoratorFactory as any)(...args);\n    return function TypeDecorator(cls: Type<T>) {\n      if (typeFn) typeFn(cls, ...args);\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n          (cls as any)[ANNOTATIONS] :\n          Object.defineProperty(cls, ANNOTATIONS, {value: []})[ANNOTATIONS];\n      annotations.push(annotationInstance);\n\n\n      if (additionalProcessing) additionalProcessing(cls);\n\n      return cls;\n    };\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.ngMetadataName = name;\n  (DecoratorFactory as any).annotationCls = DecoratorFactory;\n  return DecoratorFactory as any;\n}\n\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(...args: any[]) {\n    if (props) {\n      const values = props(...args);\n      for (const propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n  function ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const annotationInstance = new (<any>ParamDecoratorFactory)(...args);\n\n    (<any>ParamDecorator).annotation = annotationInstance;\n    return ParamDecorator;\n\n    function ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const parameters = cls.hasOwnProperty(PARAMETERS) ?\n          (cls as any)[PARAMETERS] :\n          Object.defineProperty(cls, PARAMETERS, {value: []})[PARAMETERS];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      (parameters[index] = parameters[index] || []).push(annotationInstance);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>ParamDecoratorFactory).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (target: any, name: string, ...args: any[]) => void): any {\n  const metaCtor = makeMetadataCtor(props);\n\n  function PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const decoratorInstance = new (<any>PropDecoratorFactory)(...args);\n\n    function PropDecorator(target: any, name: string) {\n      const constructor = target.constructor;\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const meta = constructor.hasOwnProperty(PROP_METADATA) ?\n          (constructor as any)[PROP_METADATA] :\n          Object.defineProperty(constructor, PROP_METADATA, {value: {}})[PROP_METADATA];\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n\n      if (additionalProcessing) additionalProcessing(target, name, ...args);\n    }\n\n    return PropDecorator;\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>PropDecoratorFactory).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * @usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @publicApi\n */\nexport const ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n *\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` like so:\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * ### Example as TypeScript Decorator\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   * ### Example as ES5 annotation\n   *\n   * ```\n   * var MyComponent = function(title) {\n   *   ...\n   * };\n   *\n   * MyComponent.annotations = [\n   *   new ng.Component({...})\n   * ]\n   * MyComponent.parameters = [\n   *   [new ng.Attribute('title')]\n   * ]\n   * ```\n   *\n   *\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n */\nexport interface Attribute { attributeName?: string; }\n\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', (attributeName?: string) => ({attributeName}));\n\n/**\n * Type of the Query metadata.\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * @publicApi\n */\nexport abstract class Query {}\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * @see `ContentChildren`.\n * @publicApi\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * Configures a content query.\n   *\n   * You can use ContentChildren to get the `QueryList` of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated, and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   * ### Basic Example\n   *\n   * Here is a simple demonstration of how the `ContentChildren` decorator can be used.\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * ### Tab-pane Example\n   *\n   * Here is a slightly more realistic example that shows how `ContentChildren` decorators\n   * can be used to implement a tab pane component.\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n *\n * @Annotation\n */\nexport type ContentChildren = Query;\n\n/**\n * ContentChildren decorator and metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nexport const ContentChildren: ContentChildrenDecorator = makePropDecorator(\n    'ContentChildren',\n    (selector?: any, data: any = {}) =>\n        ({selector, first: false, isViewQuery: false, descendants: false, ...data}),\n    Query);\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n * @publicApi\n */\nexport interface ContentChildDecorator {\n  /**\n   * Configures a content query.\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * @see `ContentChild`.\n *\n *\n */\nexport type ContentChild = Query;\n\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nexport const ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild', (selector?: any, data: any = {}) =>\n                        ({selector, first: true, isViewQuery: false, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * @see `ViewChildren`.\n *\n * @publicApi\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * Configures a view query.\n   *\n   * You can use ViewChildren to get the `QueryList` of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n */\nexport type ViewChildren = Query;\n\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren', (selector?: any, data: any = {}) =>\n                        ({selector, first: false, isViewQuery: true, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * @see `ViewChild`.\n * @publicApi\n */\nexport interface ViewChildDecorator {\n  /**\n   * @description\n   * Property decorator that configures a view query.\n   * The change detector looks for the first element or the directive matching the selector\n   * in the view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property is updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Supported selectors include:\n   *   * any class with the `@Component` or `@Directive` decorator\n   *   * a template reference variable as a string (e.g. query `<my-component #cmp></my-component>\n   * with `@ViewChild('cmp')`)\n   *   * any provider defined in the child component tree of the current component (e.g.\n   * `@ViewChild(SomeService) someService: SomeService`)\n   *   * any provider defined through a string token (e.g. `@ViewChild('someToken') someTokenVal:\n   * any`)\n   *   * a `TemplateRef` (e.g. query `<ng-template></ng-template>` with `@ViewChild(TemplateRef)\n   * template;`)\n   *\n   * @usageNotes\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n */\nexport type ViewChild = Query;\n\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild', (selector: any, data: any) =>\n                     ({selector, first: true, isViewQuery: true, descendants: true, ...data}),\n    Query);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * The strategy that the default change detector uses to detect changes.\n * When set, takes effect the next time change detection is triggered.\n *\n * @publicApi\n */\nexport enum ChangeDetectionStrategy {\n  /**\n   * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n   * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n   * Change detection can still be explictly invoked.\n   */\n  OnPush = 0,\n\n  /**\n   * Use the default `CheckAlways` strategy, in which change detection is automatic until\n   * explicitly deactivated.\n   */\n  Default = 1,\n}\n\n/**\n * Defines the possible states of the default change detector.\n * @see `ChangeDetectorRef`\n */\nexport enum ChangeDetectorStatus {\n  /**\n   * A state in which, after calling `detectChanges()`, the change detector\n   * state becomes `Checked`, and must be explicitly invoked or reactivated.\n   */\n  CheckOnce,\n\n  /**\n   * A state in which change detection is skipped until the change detector mode\n   * becomes `CheckOnce`.\n   */\n  Checked,\n\n  /**\n   * A state in which change detection continues automatically until explictly\n   * deactivated.\n   */\n  CheckAlways,\n\n  /**\n   * A state in which a change detector sub tree is not a part of the main tree and\n   * should be skipped.\n   */\n  Detached,\n\n  /**\n   * Indicates that the change detector encountered an error checking a binding\n   * or calling a directive lifecycle method and is now in an inconsistent state. Change\n   * detectors in this state do not detect changes.\n   */\n  Errored,\n\n  /**\n   * Indicates that the change detector has been destroyed.\n   */\n  Destroyed,\n}\n\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @param changeDetectionStrategy The strategy to check.\n * @returns True if the given strategy is the current default, false otherwise.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return changeDetectionStrategy == null ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nconst _global: {[name: string]: any} = __global || __window || __self;\n\nconst promise: Promise<any> = Promise.resolve(0);\n/**\n * Attention: whenever providing a new value, be sure to add an\n * entry into the corresponding `....externs.js` file,\n * so that closure won't use that global for its purposes.\n */\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet _symbolIterator: any = null;\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            (Map as any).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n\nexport function scheduleMicroTask(fn: Function) {\n  if (typeof Zone === 'undefined') {\n    // use promise to schedule microTask instead of use Zone\n    promise.then(() => { fn && fn.apply(null, null); });\n  } else {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n  }\n}\n\n// JS has NaN !== NaN\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token instanceof Array) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * Convince closure compiler that the wrapped function has no side-effects.\n *\n * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n * It is important that the return value for the `noSideEffects` function be assigned\n * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n * compiler.\n */\nexport function noSideEffects(fn: () => void): string {\n  return '' + {toString: fn};\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @publicApi\n */\nexport interface ForwardRefFn { (): any; }\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @publicApi\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  (<any>forwardRefFn).__forward_ref__ = forwardRef;\n  (<any>forwardRefFn).toString = function() { return stringify(this()); };\n  return (<Type<any>><any>forwardRefFn);\n}\n\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @publicApi\n */\nexport function resolveForwardRef(type: any): any {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n      type.__forward_ref__ === forwardRef) {\n    return (<ForwardRefFn>type)();\n  } else {\n    return type;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from '../di/provider';\nimport {ReflectionCapabilities} from '../reflection/reflection_capabilities';\nimport {Type} from '../type';\nimport {makeDecorator, makeParamDecorator} from '../util/decorators';\nimport {EMPTY_ARRAY} from '../view/util';\n\n\n/**\n * Type of the Inject decorator / constructor function.\n *\n * @publicApi\n */\nexport interface InjectDecorator {\n  /**\n   * A constructor parameter decorator that specifies a\n   * custom provider of a dependency.\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * The following example shows a class constructor that specifies a\n   * custom provider of a dependency using the parameter decorator.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Inject'}\n   *\n   * When `@Inject()` is not present, the `Injector` uses the type annotation of the\n   * parameter as the provider.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectWithoutDecorator'}\n   */\n  (token: any): any;\n  new (token: any): Inject;\n}\n\n/**\n * Type of the Inject metadata.\n *\n * @publicApi\n */\nexport interface Inject {\n  /**\n   * Injector token that maps to the dependency to be injected.\n   */\n  token: any;\n}\n\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Inject: InjectDecorator = makeParamDecorator('Inject', (token: any) => ({token}));\n\n\n/**\n * Type of the Optional decorator / constructor function.\n *\n * @publicApi\n */\nexport interface OptionalDecorator {\n  /**\n   * A constructor parameter decorator that marks a dependency as optional.\n   *\n   * The DI framework provides null if the dependency is not found.\n   * For example, the following code allows the possibility of a null result:\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Optional'}\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   */\n  (): any;\n  new (): Optional;\n}\n\n/**\n * Type of the Optional metadata.\n *\n * @publicApi\n */\nexport interface Optional {}\n\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Optional: OptionalDecorator = makeParamDecorator('Optional');\n\n/**\n * Type of the Self decorator / constructor function.\n *\n * @publicApi\n */\nexport interface SelfDecorator {\n  /**\n   * A constructor parameter decorator that tells the DI framework\n   * to retrieve a dependency only from the local injector.\n   *\n   * In the following example, the dependency can be resolved\n   * by the local injector when instantiating the class itself, but not\n   * when instantiating a child.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Self'}\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   *\n   */\n  (): any;\n  new (): Self;\n}\n\n/**\n * Type of the Self metadata.\n *\n * @publicApi\n */\nexport interface Self {}\n\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Self: SelfDecorator = makeParamDecorator('Self');\n\n\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * @publicApi\n */\nexport interface SkipSelfDecorator {\n  /**\n   * A constructor parameter decorator that tells the DI framework\n   * that dependency resolution should start from the parent injector.\n   *\n   * In the following example, the dependency can be resolved when\n   * instantiating a child, but not when instantiating the class itself.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='SkipSelf'}\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   *\n   */\n  (): any;\n  new (): SkipSelf;\n}\n\n/**\n * Type of the SkipSelf metadata.\n *\n * @publicApi\n */\nexport interface SkipSelf {}\n\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const SkipSelf: SkipSelfDecorator = makeParamDecorator('SkipSelf');\n\n/**\n * Type of the Host decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostDecorator {\n  /**\n   * A constructor parameter decorator that tells the DI framework\n   * to retrieve a dependency from any injector until\n   * reaching the host element of the current component.\n   *\n   * @see [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Host'}\n   */\n  (): any;\n  new (): Host;\n}\n\n/**\n * Type of the Host metadata.\n *\n * @publicApi\n */\nexport interface Host {}\n\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Host: HostDecorator = makeParamDecorator('Host');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {getClosureSafeProperty} from '../util/property';\n\nimport {InjectableDef, defineInjectable, getInjectableDef} from './defs';\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ConstructorProvider, ExistingProvider, FactoryProvider, StaticClassProvider, StaticProvider, ValueProvider} from './provider';\n\nexport const SOURCE = '__source';\nconst _THROW_IF_NOT_FOUND = new Object();\nexport const THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @publicApi\n */\nexport const INJECTOR = new InjectionToken<Injector>('INJECTOR');\n\nexport class NullInjector implements Injector {\n  get(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n      // reason why correctly written application should cause this exception.\n      // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n      // if(ngDevMode) debugger;\n      throw new Error(`NullInjectorError: No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * @publicApi\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new NullInjector();\n\n  /**\n   * Retrieves an instance from the injector based on the provided token.\n   * @returns The instance from the injector if defined, otherwise the `notFoundValue`.\n   * @throws When the `notFoundValue` is `undefined` or `Injector.THROW_IF_NOT_FOUND`.\n   */\n  abstract get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  /**\n   * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n   * @suppress {duplicate}\n   */\n  abstract get(token: any, notFoundValue?: any): any;\n\n  /**\n   * @deprecated from v5 use the new signature Injector.create(options)\n   */\n  static create(providers: StaticProvider[], parent?: Injector): Injector;\n\n  static create(options: {providers: StaticProvider[], parent?: Injector, name?: string}): Injector;\n\n  /**\n   * Create a new Injector which is configure using `StaticProvider`s.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n   */\n  static create(\n      options: StaticProvider[]|{providers: StaticProvider[], parent?: Injector, name?: string},\n      parent?: Injector): Injector {\n    if (Array.isArray(options)) {\n      return new StaticInjector(options, parent);\n    } else {\n      return new StaticInjector(options.providers, options.parent, options.name || null);\n    }\n  }\n\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'any' as any,\n    factory: () => inject(INJECTOR),\n  });\n}\n\n\n\nconst IDENT = function<T>(value: T): T {\n  return value;\n};\nconst EMPTY = <any[]>[];\nconst CIRCULAR = IDENT;\nconst MULTI_PROVIDER_FN = function(): any[] {\n  return Array.prototype.slice.call(arguments);\n};\nexport const USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\nconst NG_TOKEN_PATH = 'ngTokenPath';\nconst NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nconst enum OptionFlags {\n  Optional = 1 << 0,\n  CheckSelf = 1 << 1,\n  CheckParent = 1 << 2,\n  Default = CheckSelf | CheckParent\n}\nconst NULL_INJECTOR = Injector.NULL;\nconst NEW_LINE = /\\n/gm;\nconst NO_NEW_LINE = 'Éµ';\n\nexport class StaticInjector implements Injector {\n  readonly parent: Injector;\n  readonly source: string|null;\n\n  private _records: Map<any, Record>;\n\n  constructor(\n      providers: StaticProvider[], parent: Injector = NULL_INJECTOR, source: string|null = null) {\n    this.parent = parent;\n    this.source = source;\n    const records = this._records = new Map<any, Record>();\n    records.set(\n        Injector, <Record>{token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false});\n    records.set(\n        INJECTOR, <Record>{token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false});\n    recursivelyProcessProviders(records, providers);\n  }\n\n  get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any): any;\n  get(token: any, notFoundValue?: any, flags: InjectFlags = InjectFlags.Default): any {\n    const record = this._records.get(token);\n    try {\n      return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n    } catch (e) {\n      const tokenPath: any[] = e[NG_TEMP_TOKEN_PATH];\n      if (token[SOURCE]) {\n        tokenPath.unshift(token[SOURCE]);\n      }\n      e.message = formatError('\\n' + e.message, tokenPath, this.source);\n      e[NG_TOKEN_PATH] = tokenPath;\n      e[NG_TEMP_TOKEN_PATH] = null;\n      throw e;\n    }\n  }\n\n  toString() {\n    const tokens = <string[]>[], records = this._records;\n    records.forEach((v, token) => tokens.push(stringify(token)));\n    return `StaticInjector[${tokens.join(', ')}]`;\n  }\n}\n\ntype SupportedProvider =\n    ValueProvider | ExistingProvider | StaticClassProvider | ConstructorProvider | FactoryProvider;\n\ninterface Record {\n  fn: Function;\n  useNew: boolean;\n  deps: DependencyRecord[];\n  value: any;\n}\n\ninterface DependencyRecord {\n  token: any;\n  options: number;\n}\n\ntype TokenPath = Array<any>;\n\nfunction resolveProvider(provider: SupportedProvider): Record {\n  const deps = computeDeps(provider);\n  let fn: Function = IDENT;\n  let value: any = EMPTY;\n  let useNew: boolean = false;\n  let provide = resolveForwardRef(provider.provide);\n  if (USE_VALUE in provider) {\n    // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n    value = (provider as ValueProvider).useValue;\n  } else if ((provider as FactoryProvider).useFactory) {\n    fn = (provider as FactoryProvider).useFactory;\n  } else if ((provider as ExistingProvider).useExisting) {\n    // Just use IDENT\n  } else if ((provider as StaticClassProvider).useClass) {\n    useNew = true;\n    fn = resolveForwardRef((provider as StaticClassProvider).useClass);\n  } else if (typeof provide == 'function') {\n    useNew = true;\n    fn = provide;\n  } else {\n    throw staticError(\n        'StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable',\n        provider);\n  }\n  return {deps, fn, useNew, value};\n}\n\nfunction multiProviderMixError(token: any) {\n  return staticError('Cannot mix multi providers and regular providers', token);\n}\n\nfunction recursivelyProcessProviders(records: Map<any, Record>, provider: StaticProvider) {\n  if (provider) {\n    provider = resolveForwardRef(provider);\n    if (provider instanceof Array) {\n      // if we have an array recurse into the array\n      for (let i = 0; i < provider.length; i++) {\n        recursivelyProcessProviders(records, provider[i]);\n      }\n    } else if (typeof provider === 'function') {\n      // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n      // error messages\n      throw staticError('Function/Class not supported', provider);\n    } else if (provider && typeof provider === 'object' && provider.provide) {\n      // At this point we have what looks like a provider: {provide: ?, ....}\n      let token = resolveForwardRef(provider.provide);\n      const resolvedProvider = resolveProvider(provider);\n      if (provider.multi === true) {\n        // This is a multi provider.\n        let multiProvider: Record|undefined = records.get(token);\n        if (multiProvider) {\n          if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n            throw multiProviderMixError(token);\n          }\n        } else {\n          // Create a placeholder factory which will look up the constituents of the multi provider.\n          records.set(token, multiProvider = <Record>{\n            token: provider.provide,\n            deps: [],\n            useNew: false,\n            fn: MULTI_PROVIDER_FN,\n            value: EMPTY\n          });\n        }\n        // Treat the provider as the token.\n        token = provider;\n        multiProvider.deps.push({token, options: OptionFlags.Default});\n      }\n      const record = records.get(token);\n      if (record && record.fn == MULTI_PROVIDER_FN) {\n        throw multiProviderMixError(token);\n      }\n      records.set(token, resolvedProvider);\n    } else {\n      throw staticError('Unexpected provider', provider);\n    }\n  }\n}\n\nfunction tryResolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any, flags: InjectFlags): any {\n  try {\n    return resolveToken(token, record, records, parent, notFoundValue, flags);\n  } catch (e) {\n    // ensure that 'e' is of type Error.\n    if (!(e instanceof Error)) {\n      e = new Error(e);\n    }\n    const path: any[] = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n    path.unshift(token);\n    if (record && record.value == CIRCULAR) {\n      // Reset the Circular flag.\n      record.value = EMPTY;\n    }\n    throw e;\n  }\n}\n\nfunction resolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any, flags: InjectFlags): any {\n  let value;\n  if (record && !(flags & InjectFlags.SkipSelf)) {\n    // If we don't have a record, this implies that we don't own the provider hence don't know how\n    // to resolve it.\n    value = record.value;\n    if (value == CIRCULAR) {\n      throw Error(NO_NEW_LINE + 'Circular dependency');\n    } else if (value === EMPTY) {\n      record.value = CIRCULAR;\n      let obj = undefined;\n      let useNew = record.useNew;\n      let fn = record.fn;\n      let depRecords = record.deps;\n      let deps = EMPTY;\n      if (depRecords.length) {\n        deps = [];\n        for (let i = 0; i < depRecords.length; i++) {\n          const depRecord: DependencyRecord = depRecords[i];\n          const options = depRecord.options;\n          const childRecord =\n              options & OptionFlags.CheckSelf ? records.get(depRecord.token) : undefined;\n          deps.push(tryResolveToken(\n              // Current Token to resolve\n              depRecord.token,\n              // A record which describes how to resolve the token.\n              // If undefined, this means we don't have such a record\n              childRecord,\n              // Other records we know about.\n              records,\n              // If we don't know how to resolve dependency and we should not check parent for it,\n              // than pass in Null injector.\n              !childRecord && !(options & OptionFlags.CheckParent) ? NULL_INJECTOR : parent,\n              options & OptionFlags.Optional ? null : Injector.THROW_IF_NOT_FOUND,\n              InjectFlags.Default));\n        }\n      }\n      record.value = value = useNew ? new (fn as any)(...deps) : fn.apply(obj, deps);\n    }\n  } else if (!(flags & InjectFlags.Self)) {\n    value = parent.get(token, notFoundValue, InjectFlags.Default);\n  }\n  return value;\n}\n\n\nfunction computeDeps(provider: StaticProvider): DependencyRecord[] {\n  let deps: DependencyRecord[] = EMPTY;\n  const providerDeps: any[] =\n      (provider as ExistingProvider & StaticClassProvider & ConstructorProvider).deps;\n  if (providerDeps && providerDeps.length) {\n    deps = [];\n    for (let i = 0; i < providerDeps.length; i++) {\n      let options = OptionFlags.Default;\n      let token = resolveForwardRef(providerDeps[i]);\n      if (token instanceof Array) {\n        for (let j = 0, annotations = token; j < annotations.length; j++) {\n          const annotation = annotations[j];\n          if (annotation instanceof Optional || annotation == Optional) {\n            options = options | OptionFlags.Optional;\n          } else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n            options = options & ~OptionFlags.CheckSelf;\n          } else if (annotation instanceof Self || annotation == Self) {\n            options = options & ~OptionFlags.CheckParent;\n          } else if (annotation instanceof Inject) {\n            token = (annotation as Inject).token;\n          } else {\n            token = resolveForwardRef(annotation);\n          }\n        }\n      }\n      deps.push({token, options});\n    }\n  } else if ((provider as ExistingProvider).useExisting) {\n    const token = resolveForwardRef((provider as ExistingProvider).useExisting);\n    deps = [{token, options: OptionFlags.Default}];\n  } else if (!providerDeps && !(USE_VALUE in provider)) {\n    // useValue & useExisting are the only ones which are exempt from deps all others need it.\n    throw staticError('\\'deps\\' required', provider);\n  }\n  return deps;\n}\n\nfunction formatError(text: string, obj: any, source: string | null = null): string {\n  text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n  let context = stringify(obj);\n  if (obj instanceof Array) {\n    context = obj.map(stringify).join(' -> ');\n  } else if (typeof obj === 'object') {\n    let parts = <string[]>[];\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let value = obj[key];\n        parts.push(\n            key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n      }\n    }\n    context = `{${parts.join(', ')}}`;\n  }\n  return `StaticInjectorError${source ? '(' + source + ')' : ''}[${context}]: ${text.replace(NEW_LINE, '\\n  ')}`;\n}\n\nfunction staticError(text: string, obj: any): Error {\n  return new Error(formatError(text, obj));\n}\n\n/**\n * Injection flags for DI.\n *\n * @publicApi\n */\nexport const enum InjectFlags {\n  Default = 0b0000,\n\n  /**\n   * Specifies that an injector should retrieve a dependency from any injector until reaching the\n   * host element of the current component. (Only used with Element Injector)\n   */\n  Host = 0b0001,\n  /** Don't descend into ancestors of the node requesting injection. */\n  Self = 0b0010,\n  /** Skip the node that is requesting injection. */\n  SkipSelf = 0b0100,\n  /** Inject `defaultValue` instead if token not found. */\n  Optional = 0b1000,\n}\n\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nlet _currentInjector: Injector|undefined|null = undefined;\n\nexport function setCurrentInjector(injector: Injector | null | undefined): Injector|undefined|null {\n  const former = _currentInjector;\n  _currentInjector = injector;\n  return former;\n}\n\n/**\n * Injects a token from the currently active injector.\n *\n * This function must be used in the context of a factory function such as one defined for an\n * `InjectionToken`, and will throw an error if not called from such a context.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n * Within such a factory function `inject` is utilized to request injection of a dependency, instead\n * of providing an additional array of dependencies as was common to do with `useFactory` providers.\n * `inject` is faster and more type-safe.\n *\n * @publicApi\n */\nexport function inject<T>(token: Type<T>| InjectionToken<T>): T;\nexport function inject<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags): T|null;\nexport function inject<T>(token: Type<T>| InjectionToken<T>, flags = InjectFlags.Default): T|null {\n  if (_currentInjector === undefined) {\n    throw new Error(`inject() must be called from an injection context`);\n  } else if (_currentInjector === null) {\n    const injectableDef: InjectableDef<T>|null = getInjectableDef(token);\n    if (injectableDef && injectableDef.providedIn == 'root') {\n      return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                                                 injectableDef.value;\n    }\n    if (flags & InjectFlags.Optional) return null;\n    throw new Error(`Injector: NOT_FOUND [${stringify(token)}]`);\n  } else {\n    return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n  }\n}\n\nexport function injectArgs(types: (Type<any>| InjectionToken<any>| any[])[]): any[] {\n  const args: any[] = [];\n  for (let i = 0; i < types.length; i++) {\n    const arg = types[i];\n    if (Array.isArray(arg)) {\n      if (arg.length === 0) {\n        throw new Error('Arguments array must have arguments.');\n      }\n      let type: Type<any>|undefined = undefined;\n      let flags: InjectFlags = InjectFlags.Default;\n\n      for (let j = 0; j < arg.length; j++) {\n        const meta = arg[j];\n        if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n          flags |= InjectFlags.Optional;\n        } else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n          flags |= InjectFlags.SkipSelf;\n        } else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n          flags |= InjectFlags.Self;\n        } else if (meta instanceof Inject) {\n          type = meta.token;\n        } else {\n          type = meta;\n        }\n      }\n\n      args.push(inject(type !, flags));\n    } else {\n      args.push(inject(arg));\n    }\n  }\n  return args;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @publicApi\n */\nexport const Type = Function;\n\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n\nexport type Mutable<T extends{[x: string]: any}, K extends string> = {\n  [P in K]: T[P];\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {ANNOTATIONS, PARAMETERS, PROP_METADATA} from '../util/decorators';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\n\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nexport const DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport const INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\nexport const INHERITED_CLASS_WITH_CTOR =\n    /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\n  private _reflect: any;\n\n  constructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n\n  isReflectionEnabled(): boolean { return true; }\n\n  factory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n\n  /** @internal */\n  _zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n\n  private _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    const typeStr = type.toString();\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(typeStr) ||\n        (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if ((<any>type).parameters && (<any>type).parameters !== parentCtor.parameters) {\n      return (<any>type).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const tsickleCtorParams = (<any>type).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    const paramAnnotations = type.hasOwnProperty(PARAMETERS) && (type as any)[PARAMETERS];\n    const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n        this._reflect.getOwnMetadata('design:paramtypes', type);\n    if (paramTypes || paramAnnotations) {\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array((<any>type.length)).fill(undefined);\n  }\n\n  parameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(type);\n    let parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n\n  private _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).annotations && (<any>typeOrFunc).annotations !== parentCtor.annotations) {\n      let annotations = (<any>typeOrFunc).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).decorators && (<any>typeOrFunc).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata((<any>typeOrFunc).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n      return (typeOrFunc as any)[ANNOTATIONS];\n    }\n    return null;\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n\n  private _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).propMetadata &&\n        (<any>typeOrFunc).propMetadata !== parentCtor.propMetadata) {\n      let propMetadata = (<any>typeOrFunc).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).propDecorators &&\n        (<any>typeOrFunc).propDecorators !== parentCtor.propDecorators) {\n      const propDecorators = (<any>typeOrFunc).propDecorators;\n      const propMetadata = <{[key: string]: any[]}>{};\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n      return (typeOrFunc as any)[PROP_METADATA];\n    }\n    return null;\n  }\n\n  propMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n\n  guards(type: any): {[key: string]: any} { return {}; }\n\n  getter(name: string): GetterFn { return <GetterFn>new Function('o', 'return o.' + name + ';'); }\n\n  setter(name: string): SetterFn {\n    return <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;');\n  }\n\n  method(name: string): MethodFn {\n    const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return <MethodFn>new Function('o', 'args', functionBody);\n  }\n\n  // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n  importUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n\n  resourceUri(type: any): string { return `./${stringify(type)}`; }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n  resolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const decoratorType = decoratorInvocation.type;\n    const annotationCls = decoratorType.annotationCls;\n    const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n\nfunction getParentCtor(ctor: Function): Type<any> {\n  const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n  const parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component} from './directives';\n\n\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponnent{\n * }\n *\n * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n * // needs to be resolved because `renderComponent` is synchronous process.\n * // renderComponent(MyComponent);\n *\n * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n * // Use browser's `fetch` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n * URL. Browser's `fetch` method is a good default implementation.\n */\nexport function resolveComponentResources(\n    resourceResolver: (url: string) => (Promise<string|{text(): Promise<string>}>)): Promise<null> {\n  // Store all promises which are fetching the resources.\n  const urlFetches: Promise<string>[] = [];\n\n  // Cache so that we don't fetch the same resource more than once.\n  const urlMap = new Map<string, Promise<string>>();\n  function cachedResourceResolve(url: string): Promise<string> {\n    let promise = urlMap.get(url);\n    if (!promise) {\n      const resp = resourceResolver(url);\n      urlMap.set(url, promise = resp.then(unwrapResponse));\n      urlFetches.push(promise);\n    }\n    return promise;\n  }\n\n  componentResourceResolutionQueue.forEach((component: Component) => {\n    if (component.templateUrl) {\n      cachedResourceResolve(component.templateUrl).then((template) => {\n        component.template = template;\n        component.templateUrl = undefined;\n      });\n    }\n    const styleUrls = component.styleUrls;\n    const styles = component.styles || (component.styles = []);\n    const styleOffset = component.styles.length;\n    styleUrls && styleUrls.forEach((styleUrl, index) => {\n      styles.push('');  // pre-allocate array.\n      cachedResourceResolve(styleUrl).then((style) => {\n        styles[styleOffset + index] = style;\n        styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n        if (styleUrls.length == 0) {\n          component.styleUrls = undefined;\n        }\n      });\n    });\n  });\n  componentResourceResolutionQueue.clear();\n  return Promise.all(urlFetches).then(() => null);\n}\n\nconst componentResourceResolutionQueue: Set<Component> = new Set();\n\nexport function maybeQueueResolutionOfComponentResources(metadata: Component) {\n  if (componentNeedsResolution(metadata)) {\n    componentResourceResolutionQueue.add(metadata);\n  }\n}\n\nexport function componentNeedsResolution(component: Component) {\n  return component.templateUrl || component.styleUrls && component.styleUrls.length;\n}\nexport function clearResolutionOfComponentResourcesQueue() {\n  componentResourceResolutionQueue.clear();\n}\n\nfunction unwrapResponse(response: string | {text(): Promise<string>}): string|Promise<string> {\n  return typeof response == 'string' ? response : response.text();\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/ts/metadata/encapsulation.ts region='longform'}\n *\n * @publicApi\n */\nexport enum ViewEncapsulation {\n  /**\n   * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n   * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n   * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n   * selectors.\n   *\n   * This is the default option.\n   */\n  Emulated = 0,\n  /**\n   * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n   * Use the native encapsulation mechanism of the renderer.\n   *\n   * For the DOM this means using the deprecated [Shadow DOM\n   * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * creating a ShadowRoot for Component's Host Element.\n   */\n  Native = 1,\n  /**\n   * Don't provide any template or style encapsulation.\n   */\n  None = 2,\n\n  /**\n   * Use Shadow DOM to encapsulate styles.\n   *\n   * For the DOM this means using modern [Shadow\n   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * creating a ShadowRoot for Component's Host Element.\n   */\n  ShadowDom = 3\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare global {\n  const ngDevMode: null|NgDevModePerfCounters;\n  interface NgDevModePerfCounters {\n    firstTemplatePass: number;\n    tNode: number;\n    tView: number;\n    rendererCreateTextNode: number;\n    rendererSetText: number;\n    rendererCreateElement: number;\n    rendererAddEventListener: number;\n    rendererSetAttribute: number;\n    rendererRemoveAttribute: number;\n    rendererSetProperty: number;\n    rendererSetClassName: number;\n    rendererAddClass: number;\n    rendererRemoveClass: number;\n    rendererSetStyle: number;\n    rendererRemoveStyle: number;\n    rendererDestroy: number;\n    rendererDestroyNode: number;\n    rendererMoveNode: number;\n    rendererRemoveNode: number;\n    rendererCreateComment: number;\n  }\n}\n\ndeclare let global: any;\n\nexport function ngDevModeResetPerfCounters(): NgDevModePerfCounters {\n  const newCounters: NgDevModePerfCounters = {\n    firstTemplatePass: 0,\n    tNode: 0,\n    tView: 0,\n    rendererCreateTextNode: 0,\n    rendererSetText: 0,\n    rendererCreateElement: 0,\n    rendererAddEventListener: 0,\n    rendererSetAttribute: 0,\n    rendererRemoveAttribute: 0,\n    rendererSetProperty: 0,\n    rendererSetClassName: 0,\n    rendererAddClass: 0,\n    rendererRemoveClass: 0,\n    rendererSetStyle: 0,\n    rendererRemoveStyle: 0,\n    rendererDestroy: 0,\n    rendererDestroyNode: 0,\n    rendererMoveNode: 0,\n    rendererRemoveNode: 0,\n    rendererCreateComment: 0,\n  };\n  // NOTE: Under Ivy we may have both window & global defined in the Node\n  //    environment since ensureDocument() in render3.ts sets global.window.\n  if (typeof window != 'undefined') {\n    // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n    (window as any)['ngDevMode'] = newCounters;\n  }\n  if (typeof global != 'undefined') {\n    // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n    (global as any)['ngDevMode'] = newCounters;\n  }\n  if (typeof self != 'undefined') {\n    // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n    (self as any)['ngDevMode'] = newCounters;\n  }\n  return newCounters;\n}\n\n/**\n * This checks to see if the `ngDevMode` has been set. If yes,\n * than we honor it, otherwise we default to dev mode with additional checks.\n *\n * The idea is that unless we are doing production build where we explicitly\n * set `ngDevMode == false` we should be helping the developer by providing\n * as much early warning and errors as possible.\n */\nif (typeof ngDevMode === 'undefined' || ngDevMode) {\n  ngDevModeResetPerfCounters();\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport './ng_dev_mode';\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di/provider';\nimport {NgModuleDef} from '../metadata/ng_module';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {Mutable, Type} from '../type';\nimport {noSideEffects} from '../util';\n\nimport {NG_COMPONENT_DEF, NG_DIRECTIVE_DEF, NG_MODULE_DEF, NG_PIPE_DEF} from './fields';\nimport {BaseDef, ComponentDef, ComponentDefFeature, ComponentQuery, ComponentTemplate, ComponentType, DirectiveDef, DirectiveDefFeature, DirectiveType, DirectiveTypesOrFactory, PipeDef, PipeType, PipeTypesOrFactory} from './interfaces/definition';\nimport {CssSelectorList, SelectorFlags} from './interfaces/projection';\n\nexport const EMPTY: {} = {};\nexport const EMPTY_ARRAY: any[] = [];\nif (typeof ngDevMode !== 'undefined' && ngDevMode) {\n  Object.freeze(EMPTY);\n  Object.freeze(EMPTY_ARRAY);\n}\nlet _renderCompCount = 0;\n\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nexport function defineComponent<T>(componentDefinition: {\n  /**\n   * Directive type, needed to configure the injector.\n   */\n  type: Type<T>;\n\n  /** The selectors that will be used to match nodes to this component. */\n  selectors: CssSelectorList;\n\n  /**\n   * Factory method used to create an instance of directive.\n   */\n  factory: () => T;\n\n  /**\n   * The number of nodes, local refs, and pipes in this component template.\n   *\n   * Used to calculate the length of this component's LViewData array, so we\n   * can pre-fill the array and set the binding start index.\n   */\n  // TODO(kara): remove queries from this count\n  consts: number;\n\n  /**\n   * The number of bindings in this component template (including pure fn bindings).\n   *\n   * Used to calculate the length of this component's LViewData array, so we\n   * can pre-fill the array and set the host binding start index.\n   */\n  vars: number;\n\n  /**\n   * The number of host bindings (including pure fn bindings) in this component.\n   *\n   * Used to calculate the length of the LViewData array for the *parent* component\n   * of this component.\n   */\n  hostVars?: number;\n\n  /**\n   * Static attributes to set on host element.\n   *\n   * Even indices: attribute name\n   * Odd indices: attribute value\n   */\n  attributes?: string[];\n\n  /**\n   * A map of input names.\n   *\n   * The format is in: `{[actualPropertyName: string]:(string|[string, string])}`.\n   *\n   * Given:\n   * ```\n   * class MyComponent {\n   *   @Input()\n   *   publicInput1: string;\n   *\n   *   @Input('publicInput2')\n   *   declaredInput2: string;\n   * }\n   * ```\n   *\n   * is described as:\n   * ```\n   * {\n   *   publicInput1: 'publicInput1',\n   *   declaredInput2: ['declaredInput2', 'publicInput2'],\n   * }\n   * ```\n   *\n   * Which the minifier may translate to:\n   * ```\n   * {\n   *   minifiedPublicInput1: 'publicInput1',\n   *   minifiedDeclaredInput2: [ 'publicInput2', 'declaredInput2'],\n   * }\n   * ```\n   *\n   * This allows the render to re-construct the minified, public, and declared names\n   * of properties.\n   *\n   * NOTE:\n   *  - Because declared and public name are usually same we only generate the array\n   *    `['declared', 'public']` format when they differ.\n   *  - The reason why this API and `outputs` API is not the same is that `NgOnChanges` has\n   *    inconsistent behavior in that it uses declared names rather than minified or public. For\n   *    this reason `NgOnChanges` will be deprecated and removed in future version and this\n   *    API will be simplified to be consistent with `output`.\n   */\n  inputs?: {[P in keyof T]?: string | [string, string]};\n\n  /**\n   * A map of output names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  outputs?: {[P in keyof T]?: string};\n\n  /**\n   * Function executed by the parent template to allow child directive to apply host bindings.\n   */\n  hostBindings?: (directiveIndex: number, elementIndex: number) => void;\n\n  /**\n   * Function to create instances of content queries associated with a given directive.\n   */\n  contentQueries?: (() => void);\n\n  /** Refreshes content queries associated with directives in a given view */\n  contentQueriesRefresh?: ((directiveIndex: number, queryIndex: number) => void);\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * See: {@link Directive.exportAs}\n   */\n  exportAs?: string;\n\n  /**\n   * Template function use for rendering DOM.\n   *\n   * This function has following structure.\n   *\n   * ```\n   * function Template<T>(ctx:T, creationMode: boolean) {\n   *   if (creationMode) {\n   *     // Contains creation mode instructions.\n   *   }\n   *   // Contains binding update instructions\n   * }\n   * ```\n   *\n   * Common instructions are:\n   * Creation mode instructions:\n   *  - `elementStart`, `elementEnd`\n   *  - `text`\n   *  - `container`\n   *  - `listener`\n   *\n   * Binding update instructions:\n   * - `bind`\n   * - `elementAttribute`\n   * - `elementProperty`\n   * - `elementClass`\n   * - `elementStyle`\n   *\n   */\n  template: ComponentTemplate<T>;\n\n  /**\n   * Additional set of instructions specific to view query processing. This could be seen as a\n   * set of instruction to be inserted into the template function.\n   *\n   * Query-related instructions need to be pulled out to a specific function as a timing of\n   * execution is different as compared to all other instructions (after change detection hooks but\n   * before view hooks).\n   */\n  viewQuery?: ComponentQuery<T>| null;\n\n  /**\n   * A list of optional features to apply.\n   *\n   * See: {@link NgOnChangesFeature}, {@link PublicFeature}\n   */\n  features?: ComponentDefFeature[];\n\n  /**\n   * Defines template and style encapsulation options available for Component's {@link Component}.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Defines arbitrary developer-defined data to be stored on a renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   *\n   * see: animation\n   */\n  data?: {[kind: string]: any};\n\n  /**\n   * A set of styles that the component needs to be present for component to render correctly.\n   */\n  styles?: string[];\n\n  /**\n   * The strategy that the default change detector uses to detect changes.\n   * When set, takes effect the next time change detection is triggered.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to a Directive and its light DOM\n   * children.\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * Registry of directives and components that may be found in this component's view.\n   *\n   * The property is either an array of `DirectiveDef`s or a function which returns the array of\n   * `DirectiveDef`s. The function is necessary to be able to support forward declarations.\n   */\n  directives?: DirectiveTypesOrFactory | null;\n\n  /**\n   * Registry of pipes that may be found in this component's view.\n   *\n   * The property is either an array of `PipeDefs`s or a function which returns the array of\n   * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n   */\n  pipes?: PipeTypesOrFactory | null;\n}): never {\n  const type = componentDefinition.type;\n  const typePrototype = type.prototype;\n  const declaredInputs: {[key: string]: string} = {} as any;\n  const def: Mutable<ComponentDef<any>, keyof ComponentDef<any>> = {\n    type: type,\n    diPublic: null,\n    consts: componentDefinition.consts,\n    vars: componentDefinition.vars,\n    hostVars: componentDefinition.hostVars || 0,\n    factory: componentDefinition.factory,\n    template: componentDefinition.template || null !,\n    hostBindings: componentDefinition.hostBindings || null,\n    contentQueries: componentDefinition.contentQueries || null,\n    contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n    attributes: componentDefinition.attributes || null,\n    declaredInputs: declaredInputs,\n    inputs: null !,   // assigned in noSideEffects\n    outputs: null !,  // assigned in noSideEffects\n    exportAs: componentDefinition.exportAs || null,\n    onInit: typePrototype.ngOnInit || null,\n    doCheck: typePrototype.ngDoCheck || null,\n    afterContentInit: typePrototype.ngAfterContentInit || null,\n    afterContentChecked: typePrototype.ngAfterContentChecked || null,\n    afterViewInit: typePrototype.ngAfterViewInit || null,\n    afterViewChecked: typePrototype.ngAfterViewChecked || null,\n    onDestroy: typePrototype.ngOnDestroy || null,\n    onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n    directiveDefs: null !,  // assigned in noSideEffects\n    pipeDefs: null !,       // assigned in noSideEffects\n    selectors: componentDefinition.selectors,\n    viewQuery: componentDefinition.viewQuery || null,\n    features: componentDefinition.features || null,\n    data: componentDefinition.data || {},\n    // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n    // next line. Also `None` should be 0 not 2.\n    encapsulation: componentDefinition.encapsulation || ViewEncapsulation.Emulated,\n    providers: EMPTY_ARRAY,\n    viewProviders: EMPTY_ARRAY,\n    id: 'c',\n    styles: componentDefinition.styles || EMPTY_ARRAY,\n    _: null as never,\n  };\n  def._ = noSideEffects(() => {\n    const directiveTypes = componentDefinition.directives !;\n    const feature = componentDefinition.features;\n    const pipeTypes = componentDefinition.pipes !;\n    def.id += _renderCompCount++;\n    def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n    def.outputs = invertObject(componentDefinition.outputs),\n    feature && feature.forEach((fn) => fn(def));\n    def.directiveDefs = directiveTypes ?\n        () => (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                  .map(extractDirectiveDef) :\n        null;\n    def.pipeDefs = pipeTypes ?\n        () => (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef) :\n        null;\n  }) as never;\n  return def as never;\n}\n\nexport function extractDirectiveDef(type: DirectiveType<any>& ComponentType<any>):\n    DirectiveDef<any>|ComponentDef<any> {\n  const def = getComponentDef(type) || getDirectiveDef(type);\n  if (ngDevMode && !def) {\n    throw new Error(`'${type.name}' is neither 'ComponentType' or 'DirectiveType'.`);\n  }\n  return def !;\n}\n\nexport function extractPipeDef(type: PipeType<any>): PipeDef<any> {\n  const def = getPipeDef(type);\n  if (ngDevMode && !def) {\n    throw new Error(`'${type.name}' is not a 'PipeType'.`);\n  }\n  return def !;\n}\n\nexport function defineNgModule<T>(def: {type: T} & Partial<NgModuleDef<T>>): never {\n  const res: NgModuleDef<T> = {\n    type: def.type,\n    bootstrap: def.bootstrap || EMPTY_ARRAY,\n    declarations: def.declarations || EMPTY_ARRAY,\n    imports: def.imports || EMPTY_ARRAY,\n    exports: def.exports || EMPTY_ARRAY,\n    transitiveCompileScopes: null,\n  };\n  return res as never;\n}\n\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n *   @Input()\n *   propName1: string;\n *\n *   @Input('publicName')\n *   propName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   a0: 'propName1',\n *   b1: ['publicName', 'propName2'],\n * }\n * ```\n *\n * becomes\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'publicName': 'b1'\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in:\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'propName2': 'b1'\n * }\n * ```\n *\n\n */\nfunction invertObject(obj: any, secondary?: any): any {\n  if (obj == null) return EMPTY;\n  const newLookup: any = {};\n  for (const minifiedKey in obj) {\n    if (obj.hasOwnProperty(minifiedKey)) {\n      let publicName = obj[minifiedKey];\n      let declaredName = publicName;\n      if (Array.isArray(publicName)) {\n        declaredName = publicName[1];\n        publicName = publicName[0];\n      }\n      newLookup[publicName] = minifiedKey;\n      if (secondary) {\n        (secondary[declaredName] = minifiedKey);\n      }\n    }\n  }\n  return newLookup;\n}\n\n/**\n * Create a base definition\n *\n * # Example\n * ```\n * class ShouldBeInherited {\n *   static ngBaseDef = defineBase({\n *      ...\n *   })\n * }\n * @param baseDefinition The base definition parameters\n */\nexport function defineBase<T>(baseDefinition: {\n  /**\n   * A map of input names.\n   *\n   * The format is in: `{[actualPropertyName: string]:(string|[string, string])}`.\n   *\n   * Given:\n   * ```\n   * class MyComponent {\n   *   @Input()\n   *   publicInput1: string;\n   *\n   *   @Input('publicInput2')\n   *   declaredInput2: string;\n   * }\n   * ```\n   *\n   * is described as:\n   * ```\n   * {\n   *   publicInput1: 'publicInput1',\n   *   declaredInput2: ['declaredInput2', 'publicInput2'],\n   * }\n   * ```\n   *\n   * Which the minifier may translate to:\n   * ```\n   * {\n   *   minifiedPublicInput1: 'publicInput1',\n   *   minifiedDeclaredInput2: [ 'declaredInput2', 'publicInput2'],\n   * }\n   * ```\n   *\n   * This allows the render to re-construct the minified, public, and declared names\n   * of properties.\n   *\n   * NOTE:\n   *  - Because declared and public name are usually same we only generate the array\n   *    `['declared', 'public']` format when they differ.\n   *  - The reason why this API and `outputs` API is not the same is that `NgOnChanges` has\n   *    inconsistent behavior in that it uses declared names rather than minified or public. For\n   *    this reason `NgOnChanges` will be deprecated and removed in future version and this\n   *    API will be simplified to be consistent with `outputs`.\n   */\n  inputs?: {[P in keyof T]?: string | [string, string]};\n\n  /**\n   * A map of output names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  outputs?: {[P in keyof T]?: string};\n}): BaseDef<T> {\n  const declaredInputs: {[P in keyof T]: P} = {} as any;\n  return {\n    inputs: invertObject(baseDefinition.inputs, declaredInputs),\n    declaredInputs: declaredInputs,\n    outputs: invertObject(baseDefinition.outputs),\n  };\n}\n\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nexport const defineDirective = defineComponent as any as<T>(directiveDefinition: {\n  /**\n   * Directive type, needed to configure the injector.\n   */\n  type: Type<T>;\n\n  /** The selectors that will be used to match nodes to this directive. */\n  selectors: CssSelectorList;\n\n  /**\n   * Factory method used to create an instance of directive.\n   */\n  factory: () => T;\n\n  /**\n   * Static attributes to set on host element.\n   *\n   * Even indices: attribute name\n   * Odd indices: attribute value\n   */\n  attributes?: string[];\n\n  /**\n   * A map of input names.\n   *\n   * The format is in: `{[actualPropertyName: string]:(string|[string, string])}`.\n   *\n   * Given:\n   * ```\n   * class MyComponent {\n   *   @Input()\n   *   publicInput1: string;\n   *\n   *   @Input('publicInput2')\n   *   declaredInput2: string;\n   * }\n   * ```\n   *\n   * is described as:\n   * ```\n   * {\n   *   publicInput1: 'publicInput1',\n   *   declaredInput2: ['declaredInput2', 'publicInput2'],\n   * }\n   * ```\n   *\n   * Which the minifier may translate to:\n   * ```\n   * {\n   *   minifiedPublicInput1: 'publicInput1',\n   *   minifiedDeclaredInput2: [ 'publicInput2', 'declaredInput2'],\n   * }\n   * ```\n   *\n   * This allows the render to re-construct the minified, public, and declared names\n   * of properties.\n   *\n   * NOTE:\n   *  - Because declared and public name are usually same we only generate the array\n   *    `['declared', 'public']` format when they differ.\n   *  - The reason why this API and `outputs` API is not the same is that `NgOnChanges` has\n   *    inconsistent behavior in that it uses declared names rather than minified or public. For\n   *    this reason `NgOnChanges` will be deprecated and removed in future version and this\n   *    API will be simplified to be consistent with `output`.\n   */\n  inputs?: {[P in keyof T]?: string | [string, string]};\n\n  /**\n   * A map of output names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  outputs?: {[P in keyof T]?: string};\n\n  /**\n   * A list of optional features to apply.\n   *\n   * See: {@link NgOnChangesFeature}, {@link PublicFeature}, {@link InheritDefinitionFeature}\n   */\n  features?: DirectiveDefFeature[];\n\n  /**\n   * The number of host bindings (including pure fn bindings) in this directive.\n   *\n   * Used to calculate the length of the LViewData array for the *parent* component\n   * of this directive.\n   */\n  hostVars?: number;\n\n  /**\n   * Function executed by the parent template to allow child directive to apply host bindings.\n   */\n  hostBindings?: (directiveIndex: number, elementIndex: number) => void;\n\n  /**\n   * Function to create instances of content queries associated with a given directive.\n   */\n  contentQueries?: (() => void);\n\n  /** Refreshes content queries associated with directives in a given view */\n  contentQueriesRefresh?: ((directiveIndex: number, queryIndex: number) => void);\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * See: {@link Directive.exportAs}\n   */\n  exportAs?: string;\n}) => never;\n\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nexport function definePipe<T>(pipeDef: {\n  /** Name of the pipe. Used for matching pipes in template to pipe defs. */\n  name: string,\n\n  /** Pipe class reference. Needed to extract pipe lifecycle hooks. */\n  type: Type<T>,\n\n  /** A factory for creating a pipe instance. */\n  factory: () => T,\n\n  /** Whether the pipe is pure. */\n  pure?: boolean\n}): never {\n  return (<PipeDef<T>>{\n    name: pipeDef.name,\n    factory: pipeDef.factory,\n    pure: pipeDef.pure !== false,\n    onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n  }) as never;\n}\n\n/**\n * The following getter methods retrieve the definition form the type. Currently the retrieval\n * honors inheritance, but in the future we may change the rule to require that definitions are\n * explicit. This would require some sort of migration strategy.\n */\n\nexport function getComponentDef<T>(type: any): ComponentDef<T>|null {\n  return (type as any)[NG_COMPONENT_DEF] || null;\n}\n\nexport function getDirectiveDef<T>(type: any): DirectiveDef<T>|null {\n  return (type as any)[NG_DIRECTIVE_DEF] || null;\n}\n\nexport function getPipeDef<T>(type: any): PipeDef<T>|null {\n  return (type as any)[NG_PIPE_DEF] || null;\n}\n\nexport function getNgModuleDef<T>(type: any): NgModuleDef<T>|null {\n  return (type as any)[NG_MODULE_DEF] || null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {global} from '../../util';\nimport {CompilerFacade, ExportedCompilerFacade} from './compiler_facade_interface';\nexport * from './compiler_facade_interface';\n\nexport function getCompilerFacade(): CompilerFacade {\n  const globalNg: ExportedCompilerFacade = global.ng;\n  if (!globalNg || !globalNg.ÉµcompilerFacade) {\n    throw new Error(\n        `Angular JIT compilation failed: '@angular/compiler' not loaded!\\n` +\n        `  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n` +\n        `  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n` +\n        `  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.`);\n  }\n  return globalNg.ÉµcompilerFacade;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getComponentDef, getNgModuleDef} from './definition';\n\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nexport function assertNumber(actual: any, msg: string) {\n  if (typeof actual != 'number') {\n    throwError(msg);\n  }\n}\n\nexport function assertEqual<T>(actual: T, expected: T, msg: string) {\n  if (actual != expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertNotEqual<T>(actual: T, expected: T, msg: string) {\n  if (actual == expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertSame<T>(actual: T, expected: T, msg: string) {\n  if (actual !== expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertLessThan<T>(actual: T, expected: T, msg: string) {\n  if (actual >= expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertGreaterThan<T>(actual: T, expected: T, msg: string) {\n  if (actual <= expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertNotDefined<T>(actual: T, msg: string) {\n  if (actual != null) {\n    throwError(msg);\n  }\n}\n\nexport function assertDefined<T>(actual: T, msg: string) {\n  if (actual == null) {\n    throwError(msg);\n  }\n}\n\nexport function assertComponentType(\n    actual: any,\n    msg: string =\n        'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.') {\n  if (!getComponentDef(actual)) {\n    throwError(msg);\n  }\n}\n\nexport function assertNgModuleType(\n    actual: any,\n    msg: string =\n        'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.') {\n  if (!getNgModuleDef(actual)) {\n    throwError(msg);\n  }\n}\n\nfunction throwError(msg: string): never {\n  // tslint:disable-next-line\n  debugger;  // Left intentionally for better debugger experience.\n  throw new Error(`ASSERTION ERROR: ${msg}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {RElement} from './renderer';\nimport {LViewData} from './view';\n\n/**\n * This property will be monkey-patched on elements, components and directives\n */\nexport const MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n/**\n * The internal view context which is specific to a given DOM element, directive or\n * component instance. Each value in here (besides the LViewData and element node details)\n * can be present, null or undefined. If undefined then it implies the value has not been\n * looked up yet, otherwise, if null, then a lookup was executed and nothing was found.\n *\n * Each value will get filled when the respective value is examined within the getContext\n * function. The component, element and each directive instance will share the same instance\n * of the context.\n */\nexport interface LContext {\n  /**\n   * The component's parent view data.\n   */\n  lViewData: LViewData;\n\n  /**\n   * The index instance of the node.\n   */\n  nodeIndex: number;\n\n  /**\n   * The instance of the DOM node that is attached to the lNode.\n   */\n  native: RElement;\n\n  /**\n   * The instance of the Component node.\n   */\n  component: {}|null|undefined;\n\n  /**\n   * The list of active directives that exist on this element.\n   */\n  directives: any[]|null|undefined;\n\n  /**\n   * The map of local references (local reference name => element or directive instance) that exist\n   * on this element.\n   */\n  localRefs: {[key: string]: any}|null|undefined;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../../di/injector';\nimport {QueryList} from '../../linker';\nimport {Sanitizer} from '../../sanitization/security';\n\nimport {LContainer} from './container';\nimport {ComponentDef, ComponentQuery, ComponentTemplate, DirectiveDef, DirectiveDefList, HostBindingsFunction, PipeDef, PipeDefList} from './definition';\nimport {TElementNode, TNode, TViewNode} from './node';\nimport {PlayerHandler} from './player';\nimport {LQueries} from './query';\nimport {RElement, Renderer3} from './renderer';\nimport {StylingContext} from './styling';\n\n\n/** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\nexport const HEADER_OFFSET = 17;\n\n// Below are constants for LViewData indices to help us look up LViewData members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nexport const TVIEW = 0;\nexport const FLAGS = 1;\nexport const PARENT = 2;\nexport const NEXT = 3;\nexport const QUERIES = 4;\nexport const HOST = 5;\nexport const HOST_NODE = 6;\nexport const BINDING_INDEX = 7;\nexport const CLEANUP = 8;\nexport const CONTEXT = 9;\nexport const INJECTOR = 10;\nexport const RENDERER = 11;\nexport const SANITIZER = 12;\nexport const TAIL = 13;\nexport const CONTAINER_INDEX = 14;\nexport const CONTENT_QUERIES = 15;\nexport const DECLARATION_VIEW = 16;\n\n// This interface replaces the real LViewData interface if it is an arg or a\n// return value of a public instruction. This ensures we don't need to expose\n// the actual interface, which should be kept private.\nexport interface OpaqueViewState {\n  '__brand__': 'Brand for OpaqueViewState that nothing will match';\n}\n\n\n/**\n * `LViewData` stores all of the information needed to process the instructions as\n * they are invoked from the template. Each embedded view and component view has its\n * own `LViewData`. When processing a particular view, we set the `viewData` to that\n * `LViewData`. When that view is done processing, the `viewData` is set back to\n * whatever the original `viewData` was before (the parent `LViewData`).\n *\n * Keeping separate state for each view facilities view insertion / deletion, so we\n * don't have to edit the data array based on which views are present.\n */\nexport interface LViewData extends Array<any> {\n  /**\n   * The static data for this view. We need a reference to this so we can easily walk up the\n   * node tree in DI and get the TView.data array associated with a node (where the\n   * directive defs are stored).\n   */\n  [TVIEW]: TView;\n\n  /** Flags for this view. See LViewFlags for more info. */\n  [FLAGS]: LViewFlags;\n\n  /**\n   * The parent view is needed when we exit the view and must restore the previous\n   * `LViewData`. Without this, the render method would have to keep a stack of\n   * views as it is recursively rendering templates.\n   *\n   * This is the \"insertion\" view for embedded views. This allows us to properly\n   * destroy embedded views.\n   */\n  [PARENT]: LViewData|null;\n\n  /**\n   *\n   * The next sibling LViewData or LContainer.\n   *\n   * Allows us to propagate between sibling view states that aren't in the same\n   * container. Embedded views already have a node.next, but it is only set for\n   * views in the same container. We need a way to link component views and views\n   * across containers as well.\n   */\n  [NEXT]: LViewData|LContainer|null;\n\n  /** Queries active for this view - nodes from a view are reported to those queries. */\n  [QUERIES]: LQueries|null;\n\n  /**\n   * The host node for this LViewData instance, if this is a component view.\n   *\n   * If this is an embedded view, HOST will be null.\n   */\n  [HOST]: RElement|StylingContext|null;\n\n  /**\n   * Pointer to the `TViewNode` or `TElementNode` which represents the root of the view.\n   *\n   * If `TViewNode`, this is an embedded view of a container. We need this to be able to\n   * efficiently find the `LViewNode` when inserting the view into an anchor.\n   *\n   * If `TElementNode`, this is the LView of a component.\n   *\n   * If null, this is the root view of an application (root component is in this view).\n   */\n  [HOST_NODE]: TViewNode|TElementNode|null;\n\n  /**\n   * The binding index we should access next.\n   *\n   * This is stored so that bindings can continue where they left off\n   * if a view is left midway through processing bindings (e.g. if there is\n   * a setter that creates an embedded view, like in ngIf).\n   */\n  [BINDING_INDEX]: number;\n\n  /**\n   * When a view is destroyed, listeners need to be released and outputs need to be\n   * unsubscribed. This context array stores both listener functions wrapped with\n   * their context and output subscription instances for a particular view.\n   *\n   * These change per LView instance, so they cannot be stored on TView. Instead,\n   * TView.cleanup saves an index to the necessary context in this array.\n   */\n  // TODO: flatten into LViewData[]\n  [CLEANUP]: any[]|null;\n\n  /**\n   * - For dynamic views, this is the context with which to render the template (e.g.\n   *   `NgForContext`), or `{}` if not defined explicitly.\n   * - For root view of the root component the context contains change detection data.\n   * - For non-root components, the context is the component instance,\n   * - For inline views, the context is null.\n   */\n  [CONTEXT]: {}|RootContext|null;\n\n  /** An optional Module Injector to be used as fall back after Element Injectors are consulted. */\n  [INJECTOR]: Injector|null;\n\n  /** Renderer to be used for this view. */\n  [RENDERER]: Renderer3;\n\n  /** An optional custom sanitizer. */\n  [SANITIZER]: Sanitizer|null;\n\n  /**\n   * The last LViewData or LContainer beneath this LViewData in the hierarchy.\n   *\n   * The tail allows us to quickly add a new state to the end of the view list\n   * without having to propagate starting from the first child.\n   */\n  [TAIL]: LViewData|LContainer|null;\n\n  /**\n   * The index of the parent container's host node. Applicable only to embedded views that\n   * have been inserted dynamically. Will be -1 for component views and inline views.\n   *\n   * This is necessary to jump from dynamically created embedded views to their parent\n   * containers because their parent cannot be stored on the TViewNode (views may be inserted\n   * in multiple containers, so the parent cannot be shared between view instances).\n   */\n  [CONTAINER_INDEX]: number;\n\n  /**\n   * Stores QueryLists associated with content queries of a directive. This data structure is\n   * filled-in as part of a directive creation process and is later used to retrieve a QueryList to\n   * be refreshed.\n   */\n  [CONTENT_QUERIES]: QueryList<any>[]|null;\n\n  /**\n   * View where this view's template was declared.\n   *\n   * Only applicable for dynamically created views. Will be null for inline/component views.\n   *\n   * The template for a dynamically created view may be declared in a different view than\n   * it is inserted. We already track the \"insertion view\" (view where the template was\n   * inserted) in LViewData[PARENT], but we also need access to the \"declaration view\"\n   * (view where the template was declared). Otherwise, we wouldn't be able to call the\n   * view's template function with the proper contexts. Context should be inherited from\n   * the declaration view tree, not the insertion view tree.\n   *\n   * Example (AppComponent template):\n   *\n   * <ng-template #foo></ng-template>       <-- declared here -->\n   * <some-comp [tpl]=\"foo\"></some-comp>    <-- inserted inside this component -->\n   *\n   * The <ng-template> above is declared in the AppComponent template, but it will be passed into\n   * SomeComp and inserted there. In this case, the declaration view would be the AppComponent,\n   * but the insertion view would be SomeComp. When we are removing views, we would want to\n   * traverse through the insertion view to clean up listeners. When we are calling the\n   * template function during change detection, we need the declaration view to get inherited\n   * context.\n   */\n  [DECLARATION_VIEW]: LViewData|null;\n}\n\n/** Flags associated with an LView (saved in LViewData[FLAGS]) */\nexport const enum LViewFlags {\n  /**\n   * Whether or not the view is in creationMode.\n   *\n   * This must be stored in the view rather than using `data` as a marker so that\n   * we can properly support embedded views. Otherwise, when exiting a child view\n   * back into the parent view, `data` will be defined and `creationMode` will be\n   * improperly reported as false.\n   */\n  CreationMode = 0b0000001,\n\n  /** Whether this view has default change detection strategy (checks always) or onPush */\n  CheckAlways = 0b0000010,\n\n  /** Whether or not this view is currently dirty (needing check) */\n  Dirty = 0b0000100,\n\n  /** Whether or not this view is currently attached to change detection tree. */\n  Attached = 0b0001000,\n\n  /**\n   *  Whether or not the init hooks have run.\n   *\n   * If on, the init hooks haven't yet been run and should be executed by the first component that\n   * runs OR the first cR() instruction that runs (so inits are run for the top level view before\n   * any embedded views).\n   */\n  RunInit = 0b0010000,\n\n  /** Whether or not this view is destroyed. */\n  Destroyed = 0b0100000,\n\n  /** Whether or not this view is the root view */\n  IsRoot = 0b1000000,\n}\n\n/**\n * The static data for an LView (shared between all templates of a\n * given type).\n *\n * Stored on the template function as ngPrivateData.\n */\nexport interface TView {\n  /**\n   * ID for inline views to determine whether a view is the same as the previous view\n   * in a certain position. If it's not, we know the new view needs to be inserted\n   * and the one that exists needs to be removed (e.g. if/else statements)\n   *\n   * If this is -1, then this is a component view or a dynamically created view.\n   */\n  readonly id: number;\n\n  /**\n   * This is a blueprint used to generate LViewData instances for this TView. Copying this\n   * blueprint is faster than creating a new LViewData from scratch.\n   */\n  blueprint: LViewData;\n\n  /**\n   * The template function used to refresh the view of dynamically created views\n   * and components. Will be null for inline views.\n   */\n  template: ComponentTemplate<{}>|null;\n\n  /**\n   * A function containing query-related instructions.\n   */\n  viewQuery: ComponentQuery<{}>|null;\n\n  /**\n   * Pointer to the `TNode` that represents the root of the view.\n   *\n   * If this is a `TNode` for an `LViewNode`, this is an embedded view of a container.\n   * We need this pointer to be able to efficiently find this node when inserting the view\n   * into an anchor.\n   *\n   * If this is a `TElementNode`, this is the view of a root component. It has exactly one\n   * root TNode.\n   *\n   * If this is null, this is the view of a component that is not at root. We do not store\n   * the host TNodes for child component views because they can potentially have several\n   * different host TNodes, depending on where the component is being used. These host\n   * TNodes cannot be shared (due to different indices, etc).\n   */\n  node: TViewNode|TElementNode|null;\n\n  /** Whether or not this template has been processed. */\n  firstTemplatePass: boolean;\n\n  /** Static data equivalent of LView.data[]. Contains TNodes. */\n  data: TData;\n\n  /**\n   * The binding start index is the index at which the data array\n   * starts to store bindings only. Saving this value ensures that we\n   * will begin reading bindings at the correct point in the array when\n   * we are in update mode.\n   */\n  bindingStartIndex: number;\n\n  /**\n   * The index where the \"expando\" section of `LViewData` begins. The expando\n   * section contains injectors, directive instances, and host binding values.\n   * Unlike the \"consts\" and \"vars\" sections of `LViewData`, the length of this\n   * section cannot be calculated at compile-time because directives are matched\n   * at runtime to preserve locality.\n   *\n   * We store this start index so we know where to start checking host bindings\n   * in `setHostBindings`.\n   */\n  expandoStartIndex: number;\n\n  /**\n   * Index of the host node of the first LView or LContainer beneath this LView in\n   * the hierarchy.\n   *\n   * Necessary to store this so views can traverse through their nested views\n   * to remove listeners and call onDestroy callbacks.\n   *\n   * For embedded views, we store the index of an LContainer's host rather than the first\n   * LView to avoid managing splicing when views are added/removed.\n   */\n  childIndex: number;\n\n  /**\n   * A reference to the first child node located in the view.\n   */\n  firstChild: TNode|null;\n\n  /**\n   * Selector matches for a node are temporarily cached on the TView so the\n   * DI system can eagerly instantiate directives on the same node if they are\n   * created out of order. They are overwritten after each node.\n   *\n   * <div dirA dirB></div>\n   *\n   * e.g. DirA injects DirB, but DirA is created first. DI should instantiate\n   * DirB when it finds that it's on the same node, but not yet created.\n   *\n   * Even indices: Directive defs\n   * Odd indices:\n   *   - Null if the associated directive hasn't been instantiated yet\n   *   - Directive index, if associated directive has been created\n   *   - String, temporary 'CIRCULAR' token set while dependencies are being resolved\n   */\n  currentMatches: CurrentMatchesList|null;\n\n  /**\n   * Set of instructions used to process host bindings efficiently.\n   *\n   * See VIEW_DATA.md for more information.\n   */\n  expandoInstructions: (number|HostBindingsFunction)[]|null;\n\n  /**\n   * Full registry of directives and components that may be found in this view.\n   *\n   * It's necessary to keep a copy of the full def list on the TView so it's possible\n   * to render template functions without a host component.\n   */\n  directiveRegistry: DirectiveDefList|null;\n\n  /**\n   * Full registry of pipes that may be found in this view.\n   *\n   * The property is either an array of `PipeDefs`s or a function which returns the array of\n   * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n   *\n   * It's necessary to keep a copy of the full def list on the TView so it's possible\n   * to render template functions without a host component.\n   */\n  pipeRegistry: PipeDefList|null;\n\n  /**\n   * Array of ngOnInit and ngDoCheck hooks that should be executed for this view in\n   * creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  initHooks: HookData|null;\n\n  /**\n   * Array of ngDoCheck hooks that should be executed for this view in update mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  checkHooks: HookData|null;\n\n  /**\n   * Array of ngAfterContentInit and ngAfterContentChecked hooks that should be executed\n   * for this view in creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  contentHooks: HookData|null;\n\n  /**\n   * Array of ngAfterContentChecked hooks that should be executed for this view in update\n   * mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  contentCheckHooks: HookData|null;\n\n  /**\n   * Array of ngAfterViewInit and ngAfterViewChecked hooks that should be executed for\n   * this view in creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  viewHooks: HookData|null;\n\n  /**\n   * Array of ngAfterViewChecked hooks that should be executed for this view in\n   * update mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  viewCheckHooks: HookData|null;\n\n  /**\n   * Array of ngOnDestroy hooks that should be executed when this view is destroyed.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  destroyHooks: HookData|null;\n\n  /**\n   * Array of pipe ngOnDestroy hooks that should be executed when this view is destroyed.\n   *\n   * Even indices: Index of pipe in data\n   * Odd indices: Hook function\n   *\n   * These must be stored separately from directive destroy hooks because their contexts\n   * are stored in data.\n   */\n  pipeDestroyHooks: HookData|null;\n\n  /**\n   * When a view is destroyed, listeners need to be released and outputs need to be\n   * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n   * and output data (in chunks of 2) for a particular view. Combining the arrays\n   * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n   * separate for loops).\n   *\n   * If it's a native DOM listener being stored:\n   * 1st index is: event name to remove\n   * 2nd index is: index of native element in LView.data[]\n   * 3rd index is: index of wrapped listener function in LView.cleanupInstances[]\n   * 4th index is: useCapture boolean\n   *\n   * If it's a renderer2 style listener or ViewRef destroy hook being stored:\n   * 1st index is: index of the cleanup function in LView.cleanupInstances[]\n   * 2nd index is: null\n   *\n   * If it's an output subscription or query list destroy hook:\n   * 1st index is: output unsubscribe function / query list destroy function\n   * 2nd index is: index of function context in LView.cleanupInstances[]\n   */\n  cleanup: any[]|null;\n\n  /**\n   * A list of element indices for child components that will need to be\n   * refreshed when the current view has finished its check. These indices have\n   * already been adjusted for the HEADER_OFFSET.\n   *\n   */\n  components: number[]|null;\n\n  /**\n   * A list of indices for child directives that have content queries.\n   *\n   * Even indices: Directive indices\n   * Odd indices: Starting index of content queries (stored in CONTENT_QUERIES) for this directive\n   */\n  contentQueries: number[]|null;\n}\n\nexport const enum RootContextFlags {Empty = 0b00, DetectChanges = 0b01, FlushPlayers = 0b10}\n\n\n/**\n * RootContext contains information which is shared for all components which\n * were bootstrapped with {@link renderComponent}.\n */\nexport interface RootContext {\n  /**\n   * A function used for scheduling change detection in the future. Usually\n   * this is `requestAnimationFrame`.\n   */\n  scheduler: (workFn: () => void) => void;\n\n  /**\n   * A promise which is resolved when all components are considered clean (not dirty).\n   *\n   * This promise is overwritten every time a first call to {@link markDirty} is invoked.\n   */\n  clean: Promise<null>;\n\n  /**\n   * RootComponents - The components that were instantiated by the call to\n   * {@link renderComponent}.\n   */\n  components: {}[];\n\n  /**\n   * The player flushing handler to kick off all animations\n   */\n  playerHandler: PlayerHandler|null;\n\n  /**\n   * What render-related operations to run once a scheduler has been set\n   */\n  flags: RootContextFlags;\n}\n\n/**\n * Array of hooks that should be executed for a view and their directive indices.\n *\n * Even indices: Directive index\n * Odd indices: Hook function\n */\nexport type HookData = (number | (() => void))[];\n\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array.  Any nodes that do not have static data store a null value in\n * tData to avoid a sparse array.\n *\n * Each pipe's definition is stored here at the same index as its pipe instance in\n * the data array.\n *\n * Injector bloom filters are also stored here.\n */\nexport type TData = (TNode | PipeDef<any>| DirectiveDef<any>| ComponentDef<any>| number | null)[];\n\n/** Type for TView.currentMatches */\nexport type CurrentMatchesList = [DirectiveDef<any>, (string | number | null)];\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n\nexport function devModeEqual(a: any, b: any): boolean {\n  const isListLikeIterableA = isListLikeIterable(a);\n  const isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * @publicApi\n */\nexport class WrappedValue {\n  /** @deprecated from 5.3, use `unwrap()` instead - will switch to protected */\n  wrapped: any;\n\n  constructor(value: any) { this.wrapped = value; }\n\n  /** Creates a wrapped value. */\n  static wrap(value: any): WrappedValue { return new WrappedValue(value); }\n\n  /**\n   * Returns the underlying value of a wrapped value.\n   * Returns the given `value` when it is not wrapped.\n   **/\n  static unwrap(value: any): any { return WrappedValue.isWrapped(value) ? value.wrapped : value; }\n\n  /** Returns true if `value` is a wrapped value. */\n  static isWrapped(value: any): value is WrappedValue { return value instanceof WrappedValue; }\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n *\n * @publicApi\n */\nexport class SimpleChange {\n  constructor(public previousValue: any, public currentValue: any, public firstChange: boolean) {}\n\n  /**\n   * Check whether the new value is the first value assigned.\n   */\n  isFirstChange(): boolean { return this.firstChange; }\n}\n\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const iterator1 = a[getSymbolIterator()]();\n  const iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const item1 = iterator1.next();\n    const item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const iterator = obj[getSymbolIterator()]();\n    let item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LQueries} from './query';\nimport {RComment, RElement} from './renderer';\nimport {StylingContext} from './styling';\nimport {HOST, LViewData, NEXT, PARENT, QUERIES} from './view';\n\n\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\nexport const ACTIVE_INDEX = 0;\nexport const VIEWS = 1;\n// PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n// As we already have these constants in LViewData, we don't need to re-create them.\nexport const NATIVE = 6;\nexport const RENDER_PARENT = 7;\n\n/**\n * The state associated with a container.\n *\n * This is an array so that its structure is closer to LViewData. This helps\n * when traversing the view tree (which is a mix of containers and component\n * views), so we can jump to viewOrContainer[NEXT] in the same way regardless\n * of type.\n */\nexport interface LContainer extends Array<any> {\n  /**\n   * The next active index in the views array to read or write to. This helps us\n   * keep track of where we are in the views array.\n   * In the case the LContainer is created for a ViewContainerRef,\n   * it is set to null to identify this scenario, as indices are \"absolute\" in that case,\n   * i.e. provided directly by the user of the ViewContainerRef API.\n   */\n  [ACTIVE_INDEX]: number;\n\n  /**\n   * A list of the container's currently active child views. Views will be inserted\n   * here as they are added and spliced from here when they are removed. We need\n   * to keep a record of current views so we know which views are already in the DOM\n   * (and don't need to be re-added) and so we can remove views from the DOM when they\n   * are no longer required.\n   */\n  [VIEWS]: LViewData[];\n\n  /**\n   * Access to the parent view is necessary so we can propagate back\n   * up from inside a container to parent[NEXT].\n   */\n  [PARENT]: LViewData|null;\n\n  /**\n   * This allows us to jump from a container to a sibling container or component\n   * view with the same parent, so we can remove listeners efficiently.\n   */\n  [NEXT]: LViewData|LContainer|null;\n\n  /**\n   * Queries active for this container - all the views inserted to / removed from\n   * this container are reported to queries referenced here.\n   */\n  [QUERIES]: LQueries|null;\n\n  /**\n   * The host element of this LContainer.\n   *\n   * The host could be an LViewData if this container is on a component node.\n   * In that case, the component LViewData is its HOST.\n   *\n   * It could also be a styling context if this is a node with a style/class\n   * binding.\n   */\n  [HOST]: RElement|RComment|StylingContext|LViewData;\n\n  /** The comment element that serves as an anchor for this LContainer. */\n  [NATIVE]: RComment;\n\n  /**\n   * Parent Element which will contain the location where all of the views will be\n   * inserted into to.\n   *\n   * If `renderParent` is `null` it is headless. This means that it is contained\n   * in another view which in turn is contained in another container and\n   * therefore it does not yet have its own parent.\n   *\n   * If `renderParent` is not `null` then it may be:\n   * - same as `tContainerNode.parent` in which case it is just a normal container.\n   * - different from `tContainerNode.parent` in which case it has been re-projected.\n   *   In other words `tContainerNode.parent` is logical parent where as\n   *   `tContainerNode.projectedParent` is render parent.\n   *\n   * When views are inserted into `LContainer` then `renderParent` is:\n   * - `null`, we are in a view, keep going up a hierarchy until actual\n   *   `renderParent` is found.\n   * - not `null`, then use the `projectedParent.native` as the `RElement` to insert\n   * views into.\n   */\n  [RENDER_PARENT]: RElement|null;\n}\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {devModeEqual} from '../change_detection/change_detection_util';\n\nimport {assertDefined, assertLessThan} from './assert';\nimport {ACTIVE_INDEX, LContainer} from './interfaces/container';\nimport {LContext, MONKEY_PATCH_KEY_NAME} from './interfaces/context';\nimport {TNode, TNodeFlags} from './interfaces/node';\nimport {RComment, RElement, RText} from './interfaces/renderer';\nimport {StylingContext} from './interfaces/styling';\nimport {CONTEXT, FLAGS, HEADER_OFFSET, HOST, LViewData, LViewFlags, PARENT, RootContext, TData, TVIEW} from './interfaces/view';\n\n\n/**\n * Returns whether the values are different from a change detection stand point.\n *\n * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n */\nexport function isDifferent(a: any, b: any, checkNoChangesMode: boolean): boolean {\n  if (ngDevMode && checkNoChangesMode) {\n    return !devModeEqual(a, b);\n  }\n  // NaN is the only value that is not equal to itself so the first\n  // test checks if both a and b are not NaN\n  return !(a !== a && b !== b) && a !== b;\n}\n\nexport function stringify(value: any): string {\n  if (typeof value == 'function') return value.name || value;\n  if (typeof value == 'string') return value;\n  if (value == null) return '';\n  return '' + value;\n}\n\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nexport function flatten(list: any[]): any[] {\n  const result: any[] = [];\n  let i = 0;\n\n  while (i < list.length) {\n    const item = list[i];\n    if (Array.isArray(item)) {\n      if (item.length > 0) {\n        list = item.concat(list.slice(i + 1));\n        i = 0;\n      } else {\n        i++;\n      }\n    } else {\n      result.push(item);\n      i++;\n    }\n  }\n\n  return result;\n}\n\n/** Retrieves a value from any `LViewData` or `TData`. */\nexport function loadInternal<T>(index: number, arr: LViewData | TData): T {\n  ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n  return arr[index + HEADER_OFFSET];\n}\n\nexport function assertDataInRangeInternal(index: number, arr: any[]) {\n  assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\n\n/**\n * Takes the value of a slot in `LViewData` and returns the element node.\n *\n * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n * it might be wrapped in a styling context. Or if that node has a directive that injects\n * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n * it will be wrapped in LViewData. It could even have all three, so we keep looping\n * until we find something that isn't an array.\n *\n * @param value The initial value in `LViewData`\n */\nexport function readElementValue(value: RElement | StylingContext | LContainer | LViewData):\n    RElement {\n  while (Array.isArray(value)) {\n    value = value[HOST] as any;\n  }\n  return value;\n}\n\n/**\n * Retrieves an element value from the provided `viewData`, by unwrapping\n * from any containers, component views, or style contexts.\n */\nexport function getNativeByIndex(index: number, arr: LViewData): RElement {\n  return readElementValue(arr[index + HEADER_OFFSET]);\n}\n\nexport function getNativeByTNode(tNode: TNode, hostView: LViewData): RElement|RText|RComment {\n  return readElementValue(hostView[tNode.index]);\n}\n\nexport function getTNode(index: number, view: LViewData): TNode {\n  return view[TVIEW].data[index + HEADER_OFFSET] as TNode;\n}\n\nexport function getComponentViewByIndex(nodeIndex: number, hostView: LViewData): LViewData {\n  // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n  const slotValue = hostView[nodeIndex];\n  return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n}\n\nexport function isContentQueryHost(tNode: TNode): boolean {\n  return (tNode.flags & TNodeFlags.hasContentQuery) !== 0;\n}\n\nexport function isComponent(tNode: TNode): boolean {\n  return (tNode.flags & TNodeFlags.isComponent) === TNodeFlags.isComponent;\n}\n\nexport function isLContainer(value: RElement | RComment | LContainer | StylingContext): boolean {\n  // Styling contexts are also arrays, but their first index contains an element node\n  return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n}\n\n/**\n * Retrieve the root view from any component by walking the parent `LViewData` until\n * reaching the root `LViewData`.\n *\n * @param component any component\n */\nexport function getRootView(target: LViewData | {}): LViewData {\n  ngDevMode && assertDefined(target, 'component');\n  let lViewData = Array.isArray(target) ? (target as LViewData) : readPatchedLViewData(target) !;\n  while (lViewData && !(lViewData[FLAGS] & LViewFlags.IsRoot)) {\n    lViewData = lViewData[PARENT] !;\n  }\n  return lViewData;\n}\n\nexport function getRootContext(viewOrComponent: LViewData | {}): RootContext {\n  return getRootView(viewOrComponent)[CONTEXT] as RootContext;\n}\n\n/**\n * Returns the monkey-patch value data present on the target (which could be\n * a component, directive or a DOM node).\n */\nexport function readPatchedData(target: any): LViewData|LContext|null {\n  return target[MONKEY_PATCH_KEY_NAME];\n}\n\nexport function readPatchedLViewData(target: any): LViewData|null {\n  const value = readPatchedData(target);\n  if (value) {\n    return Array.isArray(value) ? value : (value as LContext).lViewData;\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport './ng_dev_mode';\n\nimport {assertEqual} from './assert';\nimport {LContext, MONKEY_PATCH_KEY_NAME} from './interfaces/context';\nimport {TNode, TNodeFlags} from './interfaces/node';\nimport {RElement} from './interfaces/renderer';\nimport {CONTEXT, HEADER_OFFSET, HOST, LViewData, TVIEW} from './interfaces/view';\nimport {getComponentViewByIndex, getNativeByTNode, readElementValue, readPatchedData} from './util';\n\n\n/** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n *\n * This function will examine the provided DOM element, component, or directive instance\\'s\n * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n * value will be that of the newly created `LContext`.\n *\n * If the monkey-patched value is the `LViewData` instance then the context value for that\n * target will be created and the monkey-patch reference will be updated. Therefore when this\n * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n * directive\\'s monkey-patch values.\n *\n * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n * is found which contains a monkey-patch reference. When that occurs then the provided element\n * will be updated with a new context (which is then returned). If the monkey-patch value is not\n * detected for a component/directive instance then it will throw an error (all components and\n * directives should be automatically monkey-patched by ivy).\n */\nexport function getContext(target: any): LContext|null {\n  let mpValue = readPatchedData(target);\n  if (mpValue) {\n    // only when it's an array is it considered an LViewData instance\n    // ... otherwise it's an already constructed LContext instance\n    if (Array.isArray(mpValue)) {\n      const lViewData: LViewData = mpValue !;\n      let nodeIndex: number;\n      let component: any = undefined;\n      let directives: any[]|null|undefined = undefined;\n\n      if (isComponentInstance(target)) {\n        nodeIndex = findViaComponent(lViewData, target);\n        if (nodeIndex == -1) {\n          throw new Error('The provided component was not found in the application');\n        }\n        component = target;\n      } else if (isDirectiveInstance(target)) {\n        nodeIndex = findViaDirective(lViewData, target);\n        if (nodeIndex == -1) {\n          throw new Error('The provided directive was not found in the application');\n        }\n        directives = discoverDirectives(nodeIndex, lViewData, false);\n      } else {\n        nodeIndex = findViaNativeElement(lViewData, target as RElement);\n        if (nodeIndex == -1) {\n          return null;\n        }\n      }\n\n      // the goal is not to fill the entire context full of data because the lookups\n      // are expensive. Instead, only the target data (the element, compontent or\n      // directive details) are filled into the context. If called multiple times\n      // with different target values then the missing target data will be filled in.\n      const native = readElementValue(lViewData[nodeIndex]);\n      const existingCtx = readPatchedData(native);\n      const context: LContext = (existingCtx && !Array.isArray(existingCtx)) ?\n          existingCtx :\n          createLContext(lViewData, nodeIndex, native);\n\n      // only when the component has been discovered then update the monkey-patch\n      if (component && context.component === undefined) {\n        context.component = component;\n        attachPatchData(context.component, context);\n      }\n\n      // only when the directives have been discovered then update the monkey-patch\n      if (directives && context.directives === undefined) {\n        context.directives = directives;\n        for (let i = 0; i < directives.length; i++) {\n          attachPatchData(directives[i], context);\n        }\n      }\n\n      attachPatchData(context.native, context);\n      mpValue = context;\n    }\n  } else {\n    const rElement = target as RElement;\n    ngDevMode && assertDomElement(rElement);\n\n    // if the context is not found then we need to traverse upwards up the DOM\n    // to find the nearest element that has already been monkey patched with data\n    let parent = rElement as any;\n    while (parent = parent.parentNode) {\n      const parentContext = readPatchedData(parent);\n      if (parentContext) {\n        let lViewData: LViewData|null;\n        if (Array.isArray(parentContext)) {\n          lViewData = parentContext as LViewData;\n        } else {\n          lViewData = parentContext.lViewData;\n        }\n\n        // the edge of the app was also reached here through another means\n        // (maybe because the DOM was changed manually).\n        if (!lViewData) {\n          return null;\n        }\n\n        const index = findViaNativeElement(lViewData, rElement);\n        if (index >= 0) {\n          const native = readElementValue(lViewData[index]);\n          const context = createLContext(lViewData, index, native);\n          attachPatchData(native, context);\n          mpValue = context;\n          break;\n        }\n      }\n    }\n  }\n  return (mpValue as LContext) || null;\n}\n\n/**\n * Creates an empty instance of a `LContext` context\n */\nfunction createLContext(lViewData: LViewData, nodeIndex: number, native: RElement): LContext {\n  return {\n    lViewData,\n    nodeIndex: nodeIndex, native,\n    component: undefined,\n    directives: undefined,\n    localRefs: undefined,\n  };\n}\n\n/**\n * Takes a component instance and returns the view for that component.\n *\n * @param componentInstance\n * @returns The component's view\n */\nexport function getComponentViewByInstance(componentInstance: {}): LViewData {\n  let lViewData = readPatchedData(componentInstance);\n  let view: LViewData;\n\n  if (Array.isArray(lViewData)) {\n    const nodeIndex = findViaComponent(lViewData, componentInstance);\n    view = getComponentViewByIndex(nodeIndex, lViewData);\n    const context = createLContext(lViewData, nodeIndex, view[HOST] as RElement);\n    context.component = componentInstance;\n    attachPatchData(componentInstance, context);\n    attachPatchData(context.native, context);\n  } else {\n    const context = lViewData as any as LContext;\n    view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n  }\n  return view;\n}\n\n/**\n * Assigns the given data to the given target (which could be a component,\n * directive or DOM node instance) using monkey-patching.\n */\nexport function attachPatchData(target: any, data: LViewData | LContext) {\n  target[MONKEY_PATCH_KEY_NAME] = data;\n}\n\nexport function isComponentInstance(instance: any): boolean {\n  return instance && instance.constructor && instance.constructor.ngComponentDef;\n}\n\nexport function isDirectiveInstance(instance: any): boolean {\n  return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n}\n\n/**\n * Locates the element within the given LViewData and returns the matching index\n */\nfunction findViaNativeElement(lViewData: LViewData, target: RElement): number {\n  let tNode = lViewData[TVIEW].firstChild;\n  while (tNode) {\n    const native = getNativeByTNode(tNode, lViewData) !;\n    if (native === target) {\n      return tNode.index;\n    }\n    tNode = traverseNextElement(tNode);\n  }\n\n  return -1;\n}\n\n/**\n * Locates the next tNode (child, sibling or parent).\n */\nfunction traverseNextElement(tNode: TNode): TNode|null {\n  if (tNode.child) {\n    return tNode.child;\n  } else if (tNode.next) {\n    return tNode.next;\n  } else if (tNode.parent) {\n    return tNode.parent.next || null;\n  }\n  return null;\n}\n\n/**\n * Locates the component within the given LViewData and returns the matching index\n */\nfunction findViaComponent(lViewData: LViewData, componentInstance: {}): number {\n  const componentIndices = lViewData[TVIEW].components;\n  if (componentIndices) {\n    for (let i = 0; i < componentIndices.length; i++) {\n      const elementComponentIndex = componentIndices[i];\n      const componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n      if (componentView[CONTEXT] === componentInstance) {\n        return elementComponentIndex;\n      }\n    }\n  } else {\n    const rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n    const rootComponent = rootComponentView[CONTEXT];\n    if (rootComponent === componentInstance) {\n      // we are dealing with the root element here therefore we know that the\n      // element is the very first element after the HEADER data in the lView\n      return HEADER_OFFSET;\n    }\n  }\n  return -1;\n}\n\n/**\n * Locates the directive within the given LViewData and returns the matching index\n */\nfunction findViaDirective(lViewData: LViewData, directiveInstance: {}): number {\n  // if a directive is monkey patched then it will (by default)\n  // have a reference to the LViewData of the current view. The\n  // element bound to the directive being search lives somewhere\n  // in the view data. We loop through the nodes and check their\n  // list of directives for the instance.\n  let tNode = lViewData[TVIEW].firstChild;\n  while (tNode) {\n    const directiveIndexStart = getDirectiveStartIndex(tNode);\n    const directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n    for (let i = directiveIndexStart; i < directiveIndexEnd; i++) {\n      if (lViewData[i] === directiveInstance) {\n        return tNode.index;\n      }\n    }\n    tNode = traverseNextElement(tNode);\n  }\n  return -1;\n}\n\nfunction assertDomElement(element: any) {\n  assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n}\n\n/**\n * Returns a list of directives extracted from the given view based on the\n * provided list of directive index values.\n *\n * @param nodeIndex The node index\n * @param lViewData The target view data\n * @param includeComponents Whether or not to include components in returned directives\n */\nexport function discoverDirectives(\n    nodeIndex: number, lViewData: LViewData, includeComponents: boolean): any[]|null {\n  const tNode = lViewData[TVIEW].data[nodeIndex] as TNode;\n  let directiveStartIndex = getDirectiveStartIndex(tNode);\n  const directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n  if (!includeComponents && tNode.flags & TNodeFlags.isComponent) directiveStartIndex++;\n  return lViewData.slice(directiveStartIndex, directiveEndIndex);\n}\n\n/**\n * Returns a map of local references (local reference name => element or directive instance) that\n * exist on a given element.\n */\nexport function discoverLocalRefs(lViewData: LViewData, nodeIndex: number): {[key: string]: any}|\n    null {\n  const tNode = lViewData[TVIEW].data[nodeIndex] as TNode;\n  if (tNode && tNode.localNames) {\n    const result: {[key: string]: any} = {};\n    for (let i = 0; i < tNode.localNames.length; i += 2) {\n      const localRefName = tNode.localNames[i];\n      const directiveIndex = tNode.localNames[i + 1] as number;\n      result[localRefName] =\n          directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) ! : lViewData[directiveIndex];\n    }\n    return result;\n  }\n\n  return null;\n}\n\nfunction getDirectiveStartIndex(tNode: TNode): number {\n  // the tNode instances store a flag value which then has a\n  // pointer which tells the starting index of where all the\n  // active directives are in the master directive array\n  return tNode.flags >> TNodeFlags.DirectiveStartingIndexShift;\n}\n\nfunction getDirectiveEndIndex(tNode: TNode, startIndex: number): number {\n  // The end value is also a part of the same flag\n  // (see `TNodeFlags` to see how the flag bit shifting\n  // values are used).\n  const count = tNode.flags & TNodeFlags.DirectiveCountMask;\n  return count ? (startIndex + count) : -1;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertEqual} from './assert';\nimport {DirectiveDef} from './interfaces/definition';\nimport {TNodeFlags} from './interfaces/node';\nimport {FLAGS, HookData, LViewData, LViewFlags, TView} from './interfaces/view';\n\n\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LViewData\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nexport function queueInitHooks(\n    index: number, onInit: (() => void) | null, doCheck: (() => void) | null, tView: TView): void {\n  ngDevMode &&\n      assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n  if (onInit) {\n    (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n  }\n\n  if (doCheck) {\n    (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n    (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n  }\n}\n\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nexport function queueLifecycleHooks(flags: number, tView: TView): void {\n  if (tView.firstTemplatePass) {\n    const start = flags >> TNodeFlags.DirectiveStartingIndexShift;\n    const count = flags & TNodeFlags.DirectiveCountMask;\n    const end = start + count;\n\n    // It's necessary to loop through the directives at elementEnd() (rather than processing in\n    // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n    // hooks for projected components and directives must be called *before* their hosts.\n    for (let i = start; i < end; i++) {\n      const def = tView.data[i] as DirectiveDef<any>;\n      queueContentHooks(def, tView, i);\n      queueViewHooks(def, tView, i);\n      queueDestroyHooks(def, tView, i);\n    }\n  }\n}\n\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def: DirectiveDef<any>, tView: TView, i: number): void {\n  if (def.afterContentInit) {\n    (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n  }\n\n  if (def.afterContentChecked) {\n    (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n  }\n}\n\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def: DirectiveDef<any>, tView: TView, i: number): void {\n  if (def.afterViewInit) {\n    (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n  }\n\n  if (def.afterViewChecked) {\n    (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n  }\n}\n\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def: DirectiveDef<any>, tView: TView, i: number): void {\n  if (def.onDestroy != null) {\n    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n  }\n}\n\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nexport function executeInitHooks(\n    currentView: LViewData, tView: TView, creationMode: boolean): void {\n  if (currentView[FLAGS] & LViewFlags.RunInit) {\n    executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n    currentView[FLAGS] &= ~LViewFlags.RunInit;\n  }\n}\n\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nexport function executeHooks(\n    data: LViewData, allHooks: HookData | null, checkHooks: HookData | null,\n    creationMode: boolean): void {\n  const hooksToCall = creationMode ? allHooks : checkHooks;\n  if (hooksToCall) {\n    callHooks(data, hooksToCall);\n  }\n}\n\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nexport function callHooks(currentView: any[], arr: HookData): void {\n  for (let i = 0; i < arr.length; i += 2) {\n    (arr[i + 1] as() => void).call(currentView[arr[i] as number]);\n  }\n}\n","\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {TNode} from './interfaces/node';\n\n/** Called when directives inject each other (creating a circular dependency) */\nexport function throwCyclicDependencyError(token: any): never {\n  throw new Error(`Cannot instantiate cyclic dependency! ${token}`);\n}\n\n/** Called when there are multiple component selectors that match a given node */\nexport function throwMultipleComponentError(tNode: TNode): never {\n  throw new Error(`Multiple components match node with tagname ${tNode.tagName}`);\n}\n\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nexport function throwErrorIfNoChangesMode(\n    creationMode: boolean, checkNoChangesMode: boolean, oldValue: any, currValue: any): never|void {\n  if (checkNoChangesMode) {\n    let msg =\n        `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n    if (creationMode) {\n      msg +=\n          ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n          ` Has it been created in a change detection hook ?`;\n    }\n    // TODO: include debug context\n    throw new Error(msg);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {TContainerNode, TElementContainerNode, TElementNode,} from './node';\n\nexport const TNODE = 8;\nexport const PARENT_INJECTOR = 8;\nexport const INJECTOR_SIZE = 9;\n\nexport const enum InjectorLocationFlags {\n  InjectorIndexMask = 0b111111111111111,\n  ViewOffsetShift = 15\n}\n\n/**\n * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n * `TView.data`. This allows us to store information about the current node's tokens (which\n * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n * shared, so they live in `LViewData`).\n *\n * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n * determines whether a directive is available on the associated node or not. This prevents us\n * from searching the directives array at this level unless it's probable the directive is in it.\n *\n * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n *\n * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n * will differ based on where it is flattened into the main array, so it's not possible to know\n * the indices ahead of time and save their types here. The interfaces are still included here\n * for documentation purposes.\n *\n * export interface LInjector extends Array<any> {\n *\n *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Cumulative bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Cumulative bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Cumulative bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Cumulative bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Cumulative bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Cumulative bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Cumulative bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // We need to store a reference to the injector's parent so DI can keep looking up\n *    // the injector tree until it finds the dependency it's looking for.\n *    [PARENT_INJECTOR]: number;\n * }\n *\n * export interface TInjector extends Array<any> {\n *\n *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Shared node bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Shared node bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Shared node bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Shared node bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Shared node bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Shared node bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Shared node bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // Necessary to find directive indices for a particular node.\n *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n *  }\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * Expresses a single CSS Selector.\n *\n * Beginning of array\n * - First index: element name\n * - Subsequent odd indices: attr keys\n * - Subsequent even indices: attr values\n *\n * After SelectorFlags.CLASS flag\n * - Class name values\n *\n * SelectorFlags.NOT flag\n * - Changes the mode to NOT\n * - Can be combined with other flags to set the element / attr / class mode\n *\n * e.g. SelectorFlags.NOT | SelectorFlags.ELEMENT\n *\n * Example:\n * Original: `div.foo.bar[attr1=val1][attr2]`\n * Parsed: ['div', 'attr1', 'val1', 'attr2', '', SelectorFlags.CLASS, 'foo', 'bar']\n *\n * Original: 'div[attr1]:not(.foo[attr2])\n * Parsed: [\n *  'div', 'attr1', '',\n *  SelectorFlags.NOT | SelectorFlags.ATTRIBUTE 'attr2', '', SelectorFlags.CLASS, 'foo'\n * ]\n *\n * See more examples in node_selector_matcher_spec.ts\n */\nexport type CssSelector = (string | SelectorFlags)[];\n\n/**\n * A list of CssSelectors.\n *\n * A directive or component can have multiple selectors. This type is used for\n * directive defs so any of the selectors in the list will match that directive.\n *\n * Original: 'form, [ngForm]'\n * Parsed: [['form'], ['', 'ngForm', '']]\n */\nexport type CssSelectorList = CssSelector[];\n\n/** Flags used to build up CssSelectors */\nexport const enum SelectorFlags {\n  /** Indicates this is the beginning of a new negative selector */\n  NOT = 0b0001,\n\n  /** Mode for matching attributes */\n  ATTRIBUTE = 0b0010,\n\n  /** Mode for matching tag names */\n  ELEMENT = 0b0100,\n\n  /** Mode for matching class names */\n  CLASS = 0b1000,\n}\n\nexport const NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The goal here is to make sure that the browser DOM API is the Renderer.\n * We do this by defining a subset of DOM API to be the renderer and than\n * use that time for rendering.\n *\n * At runtime we can than use the DOM api directly, in server or web-worker\n * it will be easy to implement such API.\n */\n\nimport {RendererStyleFlags2, RendererType2} from '../../render/api';\n\n\n// TODO: cleanup once the code is merged in angular/angular\nexport enum RendererStyleFlags3 {\n  Important = 1 << 0,\n  DashCase = 1 << 1\n}\n\nexport type Renderer3 = ObjectOrientedRenderer3 | ProceduralRenderer3;\n\n/**\n * Object Oriented style of API needed to create elements and text nodes.\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade\n * (reducing payload size).\n * */\nexport interface ObjectOrientedRenderer3 {\n  createComment(data: string): RComment;\n  createElement(tagName: string): RElement;\n  createElementNS(namespace: string, tagName: string): RElement;\n  createTextNode(data: string): RText;\n\n  querySelector(selectors: string): RElement|null;\n}\n\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nexport function isProceduralRenderer(renderer: ProceduralRenderer3 | ObjectOrientedRenderer3):\n    renderer is ProceduralRenderer3 {\n  return !!((renderer as any).listen);\n}\n\n/**\n * Procedural style of API needed to create elements and text nodes.\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the\n * facade that enables element manipulation. This also facilitates backwards compatibility\n * with Renderer2.\n */\nexport interface ProceduralRenderer3 {\n  destroy(): void;\n  createComment(value: string): RComment;\n  createElement(name: string, namespace?: string|null): RElement;\n  createText(value: string): RText;\n  /**\n   * This property is allowed to be null / undefined,\n   * in which case the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  destroyNode?: ((node: RNode) => void)|null;\n  appendChild(parent: RElement, newChild: RNode): void;\n  insertBefore(parent: RNode, newChild: RNode, refChild: RNode|null): void;\n  removeChild(parent: RElement, oldChild: RNode): void;\n  selectRootElement(selectorOrNode: string|any): RElement;\n\n  setAttribute(el: RElement, name: string, value: string, namespace?: string|null): void;\n  removeAttribute(el: RElement, name: string, namespace?: string|null): void;\n  addClass(el: RElement, name: string): void;\n  removeClass(el: RElement, name: string): void;\n  setStyle(\n      el: RElement, style: string, value: any,\n      flags?: RendererStyleFlags2|RendererStyleFlags3): void;\n  removeStyle(el: RElement, style: string, flags?: RendererStyleFlags2|RendererStyleFlags3): void;\n  setProperty(el: RElement, name: string, value: any): void;\n  setValue(node: RText, value: string): void;\n\n  // TODO(misko): Deprecate in favor of addEventListener/removeEventListener\n  listen(target: RNode, eventName: string, callback: (event: any) => boolean | void): () => void;\n}\n\nexport interface RendererFactory3 {\n  createRenderer(hostElement: RElement|null, rendererType: RendererType2|null): Renderer3;\n  begin?(): void;\n  end?(): void;\n}\n\nexport const domRendererFactory3: RendererFactory3 = {\n  createRenderer: (hostElement: RElement | null, rendererType: RendererType2 | null):\n                      Renderer3 => { return document;}\n};\n\n/** Subset of API needed for appending elements and text nodes. */\nexport interface RNode {\n  removeChild(oldChild: RNode): void;\n\n  /**\n   * Insert a child node.\n   *\n   * Used exclusively for adding View root nodes into ViewAnchor location.\n   */\n  insertBefore(newChild: RNode, refChild: RNode|null, isViewRoot: boolean): void;\n\n  /**\n   * Append a child node.\n   *\n   * Used exclusively for building up DOM which are static (ie not View roots)\n   */\n  appendChild(newChild: RNode): RNode;\n}\n\n/**\n * Subset of API needed for writing attributes, properties, and setting up\n * listeners on Element.\n */\nexport interface RElement extends RNode {\n  style: RCssStyleDeclaration;\n  classList: RDomTokenList;\n  className: string;\n  setAttribute(name: string, value: string): void;\n  removeAttribute(name: string): void;\n  setAttributeNS(namespaceURI: string, qualifiedName: string, value: string): void;\n  addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\n  removeEventListener(type: string, listener?: EventListener, options?: boolean): void;\n\n  setProperty?(name: string, value: any): void;\n}\n\nexport interface RCssStyleDeclaration {\n  removeProperty(propertyName: string): string;\n  setProperty(propertyName: string, value: string|null, priority?: string): void;\n}\n\nexport interface RDomTokenList {\n  add(token: string): void;\n  remove(token: string): void;\n}\n\nexport interface RText extends RNode { textContent: string|null; }\n\nexport interface RComment extends RNode {}\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertDefined, assertEqual} from './assert';\nimport {TNode, TNodeType} from './interfaces/node';\n\nexport function assertNodeType(tNode: TNode, type: TNodeType) {\n  assertDefined(tNode, 'should be called with a TNode');\n  assertEqual(tNode.type, type, `should be a ${typeName(type)}`);\n}\n\nexport function assertNodeOfPossibleTypes(tNode: TNode, ...types: TNodeType[]) {\n  assertDefined(tNode, 'should be called with a TNode');\n  const found = types.some(type => tNode.type === type);\n  assertEqual(\n      found, true,\n      `Should be one of ${types.map(typeName).join(', ')} but got ${typeName(tNode.type)}`);\n}\n\nfunction typeName(type: TNodeType): string {\n  if (type == TNodeType.Projection) return 'Projection';\n  if (type == TNodeType.Container) return 'Container';\n  if (type == TNodeType.View) return 'View';\n  if (type == TNodeType.Element) return 'Element';\n  if (type == TNodeType.ElementContainer) return 'ElementContainer';\n  return '<unknown>';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertDefined} from './assert';\nimport {attachPatchData} from './context_discovery';\nimport {callHooks} from './hooks';\nimport {LContainer, NATIVE, RENDER_PARENT, VIEWS, unusedValueExportToPlacateAjd as unused1} from './interfaces/container';\nimport {TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeFlags, TNodeType, TViewNode, unusedValueExportToPlacateAjd as unused2} from './interfaces/node';\nimport {unusedValueExportToPlacateAjd as unused3} from './interfaces/projection';\nimport {ProceduralRenderer3, RComment, RElement, RNode, RText, Renderer3, isProceduralRenderer, unusedValueExportToPlacateAjd as unused4} from './interfaces/renderer';\nimport {CLEANUP, CONTAINER_INDEX, FLAGS, HEADER_OFFSET, HOST_NODE, HookData, LViewData, LViewFlags, NEXT, PARENT, QUERIES, RENDERER, TVIEW, unusedValueExportToPlacateAjd as unused5} from './interfaces/view';\nimport {assertNodeType} from './node_assert';\nimport {getNativeByTNode, isLContainer, readElementValue, stringify} from './util';\n\nconst unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4 + unused5;\n\n/** Retrieves the parent element of a given node. */\nexport function getParentNative(tNode: TNode, currentView: LViewData): RElement|RComment|null {\n  return tNode.parent == null ? getHostNative(currentView) :\n                                getNativeByTNode(tNode.parent, currentView);\n}\n\n/**\n * Gets the host element given a view. Will return null if the current view is an embedded view,\n * which does not have a host element.\n */\nexport function getHostNative(currentView: LViewData): RElement|null {\n  const hostTNode = currentView[HOST_NODE] as TElementNode;\n  return hostTNode && hostTNode.type !== TNodeType.View ?\n      (getNativeByTNode(hostTNode, currentView[PARENT] !) as RElement) :\n      null;\n}\n\nexport function getLContainer(tNode: TViewNode, embeddedView: LViewData): LContainer|null {\n  if (tNode.index === -1) {\n    // This is a dynamically created view inside a dynamic container.\n    // If the host index is -1, the view has not yet been inserted, so it has no parent.\n    const containerHostIndex = embeddedView[CONTAINER_INDEX];\n    return containerHostIndex > -1 ? embeddedView[PARENT] ![containerHostIndex] : null;\n  } else {\n    // This is a inline view node (e.g. embeddedViewStart)\n    return embeddedView[PARENT] ![tNode.parent !.index] as LContainer;\n  }\n}\n\n\n/**\n * Retrieves render parent for a given view.\n * Might be null if a view is not yet attached to any container.\n */\nexport function getContainerRenderParent(tViewNode: TViewNode, view: LViewData): RElement|null {\n  const container = getLContainer(tViewNode, view);\n  return container ? container[RENDER_PARENT] : null;\n}\n\nconst enum WalkTNodeTreeAction {\n  /** node insert in the native environment */\n  Insert = 0,\n\n  /** node detach from the native environment */\n  Detach = 1,\n\n  /** node destruction using the renderer's API */\n  Destroy = 2,\n}\n\n\n/**\n * Stack used to keep track of projection nodes in walkTNodeTree.\n *\n * This is deliberately created outside of walkTNodeTree to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n */\nconst projectionNodeStack: (LViewData | TNode)[] = [];\n\n/**\n * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n * one found, or on all of them.\n *\n * @param viewToWalk the view to walk\n * @param action identifies the action to be performed on the elements\n * @param renderer the current renderer.\n * @param renderParent Optional the render parent node to be set in all LContainers found,\n * required for action modes Insert and Destroy.\n * @param beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n */\nfunction walkTNodeTree(\n    viewToWalk: LViewData, action: WalkTNodeTreeAction, renderer: Renderer3,\n    renderParent: RElement | null, beforeNode?: RNode | null) {\n  const rootTNode = viewToWalk[TVIEW].node as TViewNode;\n  let projectionNodeIndex = -1;\n  let currentView = viewToWalk;\n  let tNode: TNode|null = rootTNode.child as TNode;\n  while (tNode) {\n    let nextTNode: TNode|null = null;\n    if (tNode.type === TNodeType.Element) {\n      executeNodeAction(\n          action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n      const nodeOrContainer = currentView[tNode.index];\n      if (isLContainer(nodeOrContainer)) {\n        // This element has an LContainer, and its comment needs to be handled\n        executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n      }\n    } else if (tNode.type === TNodeType.Container) {\n      const lContainer = currentView ![tNode.index] as LContainer;\n      executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n\n      if (renderParent) lContainer[RENDER_PARENT] = renderParent;\n\n      if (lContainer[VIEWS].length) {\n        currentView = lContainer[VIEWS][0];\n        nextTNode = currentView[TVIEW].node;\n\n        // When the walker enters a container, then the beforeNode has to become the local native\n        // comment node.\n        beforeNode = lContainer[NATIVE];\n      }\n    } else if (tNode.type === TNodeType.Projection) {\n      const componentView = findComponentView(currentView !);\n      const componentHost = componentView[HOST_NODE] as TElementNode;\n      const head: TNode|null =\n          (componentHost.projection as(TNode | null)[])[tNode.projection as number];\n\n      // Must store both the TNode and the view because this projection node could be nested\n      // deeply inside embedded views, and we need to get back down to this particular nested view.\n      projectionNodeStack[++projectionNodeIndex] = tNode;\n      projectionNodeStack[++projectionNodeIndex] = currentView !;\n      if (head) {\n        currentView = componentView[PARENT] !;\n        nextTNode = currentView[TVIEW].data[head.index] as TNode;\n      }\n    } else {\n      // Otherwise, this is a View or an ElementContainer\n      nextTNode = tNode.child;\n    }\n\n    if (nextTNode === null) {\n      // this last node was projected, we need to get back down to its projection node\n      if (tNode.next === null && (tNode.flags & TNodeFlags.isProjected)) {\n        currentView = projectionNodeStack[projectionNodeIndex--] as LViewData;\n        tNode = projectionNodeStack[projectionNodeIndex--] as TNode;\n      }\n      nextTNode = tNode.next;\n\n      /**\n       * Find the next node in the TNode tree, taking into account the place where a node is\n       * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n       *\n       * If there is no sibling node, then it goes to the next sibling of the parent node...\n       * until it reaches rootNode (at which point null is returned).\n       */\n      while (!nextTNode) {\n        // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n        tNode = tNode.parent || currentView[TVIEW].node;\n\n        if (tNode === null || tNode === rootTNode) return null;\n\n        // When exiting a container, the beforeNode must be restored to the previous value\n        if (tNode.type === TNodeType.Container) {\n          currentView = currentView[PARENT] !;\n          beforeNode = currentView[tNode.index][NATIVE];\n        }\n\n        if (tNode.type === TNodeType.View && currentView[NEXT]) {\n          currentView = currentView[NEXT] as LViewData;\n          nextTNode = currentView[TVIEW].node;\n        } else {\n          nextTNode = tNode.next;\n        }\n      }\n    }\n    tNode = nextTNode;\n  }\n}\n\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lViewData LViewData for which we want a host element node\n * @returns The host node\n */\nexport function findComponentView(lViewData: LViewData): LViewData {\n  let rootTNode = lViewData[HOST_NODE];\n\n  while (rootTNode && rootTNode.type === TNodeType.View) {\n    ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n    lViewData = lViewData[PARENT] !;\n    rootTNode = lViewData[HOST_NODE];\n  }\n\n  return lViewData;\n}\n\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction executeNodeAction(\n    action: WalkTNodeTreeAction, renderer: Renderer3, parent: RElement | null,\n    node: RComment | RElement | RText, beforeNode?: RNode | null) {\n  if (action === WalkTNodeTreeAction.Insert) {\n    isProceduralRenderer(renderer !) ?\n        (renderer as ProceduralRenderer3).insertBefore(parent !, node, beforeNode as RNode | null) :\n        parent !.insertBefore(node, beforeNode as RNode | null, true);\n  } else if (action === WalkTNodeTreeAction.Detach) {\n    isProceduralRenderer(renderer !) ?\n        (renderer as ProceduralRenderer3).removeChild(parent !, node) :\n        parent !.removeChild(node);\n  } else if (action === WalkTNodeTreeAction.Destroy) {\n    ngDevMode && ngDevMode.rendererDestroyNode++;\n    (renderer as ProceduralRenderer3).destroyNode !(node);\n  }\n}\n\nexport function createTextNode(value: any, renderer: Renderer3): RText {\n  return isProceduralRenderer(renderer) ? renderer.createText(stringify(value)) :\n                                          renderer.createTextNode(stringify(value));\n}\n\n/**\n * Adds or removes all DOM elements associated with a view.\n *\n * Because some root nodes of the view may be containers, we sometimes need\n * to propagate deeply into the nested containers to remove all elements in the\n * views beneath it.\n *\n * @param viewToWalk The view from which elements should be added or removed\n * @param insertMode Whether or not elements should be added (if false, removing)\n * @param beforeNode The node before which elements should be added, if insert mode\n */\nexport function addRemoveViewFromContainer(\n    viewToWalk: LViewData, insertMode: true, beforeNode: RNode | null): void;\nexport function addRemoveViewFromContainer(viewToWalk: LViewData, insertMode: false): void;\nexport function addRemoveViewFromContainer(\n    viewToWalk: LViewData, insertMode: boolean, beforeNode?: RNode | null): void {\n  const renderParent = getContainerRenderParent(viewToWalk[TVIEW].node as TViewNode, viewToWalk);\n  ngDevMode && assertNodeType(viewToWalk[TVIEW].node as TNode, TNodeType.View);\n  if (renderParent) {\n    const renderer = viewToWalk[RENDERER];\n    walkTNodeTree(\n        viewToWalk, insertMode ? WalkTNodeTreeAction.Insert : WalkTNodeTreeAction.Detach, renderer,\n        renderParent, beforeNode);\n  }\n}\n\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nexport function destroyViewTree(rootView: LViewData): void {\n  // If the view has no children, we can clean it up and return early.\n  if (rootView[TVIEW].childIndex === -1) {\n    return cleanUpView(rootView);\n  }\n  let viewOrContainer: LViewData|LContainer|null = getLViewChild(rootView);\n\n  while (viewOrContainer) {\n    let next: LViewData|LContainer|null = null;\n\n    if (viewOrContainer.length >= HEADER_OFFSET) {\n      // If LViewData, traverse down to child.\n      const view = viewOrContainer as LViewData;\n      if (view[TVIEW].childIndex > -1) next = getLViewChild(view);\n    } else {\n      // If container, traverse down to its first LViewData.\n      const container = viewOrContainer as LContainer;\n      if (container[VIEWS].length) next = container[VIEWS][0];\n    }\n\n    if (next == null) {\n      // Only clean up view when moving to the side or up, as destroy hooks\n      // should be called in order from the bottom up.\n      while (viewOrContainer && !viewOrContainer ![NEXT] && viewOrContainer !== rootView) {\n        cleanUpView(viewOrContainer);\n        viewOrContainer = getParentState(viewOrContainer, rootView);\n      }\n      cleanUpView(viewOrContainer || rootView);\n      next = viewOrContainer && viewOrContainer ![NEXT];\n    }\n    viewOrContainer = next;\n  }\n}\n\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param lView The view to insert\n * @param lContainer The container into which the view should be inserted\n * @param parentView The new parent of the inserted view\n * @param index The index at which to insert the view\n * @param containerIndex The index of the container node, if dynamic\n */\nexport function insertView(\n    lView: LViewData, lContainer: LContainer, parentView: LViewData, index: number,\n    containerIndex: number) {\n  const views = lContainer[VIEWS];\n\n  if (index > 0) {\n    // This is a new view, we need to add it to the children.\n    views[index - 1][NEXT] = lView;\n  }\n\n  if (index < views.length) {\n    lView[NEXT] = views[index];\n    views.splice(index, 0, lView);\n  } else {\n    views.push(lView);\n    lView[NEXT] = null;\n  }\n\n  // Dynamically inserted views need a reference to their parent container's host so it's\n  // possible to jump from a view to its container's next when walking the node tree.\n  if (containerIndex > -1) {\n    lView[CONTAINER_INDEX] = containerIndex;\n    lView[PARENT] = parentView;\n  }\n\n  // Notify query that a new view has been added\n  if (lView[QUERIES]) {\n    lView[QUERIES] !.insertView(index);\n  }\n\n  // Sets the attached flag\n  lView[FLAGS] |= LViewFlags.Attached;\n}\n\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param lContainer The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @param detached Whether or not this view is already detached.\n */\nexport function detachView(lContainer: LContainer, removeIndex: number, detached: boolean) {\n  const views = lContainer[VIEWS];\n  const viewToDetach = views[removeIndex];\n  if (removeIndex > 0) {\n    views[removeIndex - 1][NEXT] = viewToDetach[NEXT] as LViewData;\n  }\n  views.splice(removeIndex, 1);\n  if (!detached) {\n    addRemoveViewFromContainer(viewToDetach, false);\n  }\n\n  if (viewToDetach[QUERIES]) {\n    viewToDetach[QUERIES] !.removeView();\n  }\n  viewToDetach[CONTAINER_INDEX] = -1;\n  viewToDetach[PARENT] = null;\n  // Unsets the attached flag\n  viewToDetach[FLAGS] &= ~LViewFlags.Attached;\n}\n\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param lContainer The container from which to remove a view\n * @param tContainer The TContainer node associated with the LContainer\n * @param removeIndex The index of the view to remove\n */\nexport function removeView(\n    lContainer: LContainer, containerHost: TElementNode | TContainerNode | TElementContainerNode,\n    removeIndex: number) {\n  const view = lContainer[VIEWS][removeIndex];\n  detachView(lContainer, removeIndex, !!containerHost.detached);\n  destroyLView(view);\n}\n\n/** Gets the child of the given LViewData */\nexport function getLViewChild(viewData: LViewData): LViewData|LContainer|null {\n  const childIndex = viewData[TVIEW].childIndex;\n  return childIndex === -1 ? null : viewData[childIndex];\n}\n\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param view The view to be destroyed.\n */\nexport function destroyLView(view: LViewData) {\n  const renderer = view[RENDERER];\n  if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n    walkTNodeTree(view, WalkTNodeTreeAction.Destroy, renderer, null);\n  }\n  destroyViewTree(view);\n  // Sets the destroyed flag\n  view[FLAGS] |= LViewFlags.Destroyed;\n}\n\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nexport function getParentState(state: LViewData | LContainer, rootView: LViewData): LViewData|\n    LContainer|null {\n  let tNode;\n  if (state.length >= HEADER_OFFSET && (tNode = (state as LViewData) ![HOST_NODE]) &&\n      tNode.type === TNodeType.View) {\n    // if it's an embedded view, the state needs to go up to the container, in case the\n    // container has a next\n    return getLContainer(tNode as TViewNode, state as LViewData) as LContainer;\n  } else {\n    // otherwise, use parent view for containers or component views\n    return state[PARENT] === rootView ? null : state[PARENT];\n  }\n}\n\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param view The LViewData to clean up\n */\nfunction cleanUpView(viewOrContainer: LViewData | LContainer): void {\n  if ((viewOrContainer as LViewData).length >= HEADER_OFFSET) {\n    const view = viewOrContainer as LViewData;\n    removeListeners(view);\n    executeOnDestroys(view);\n    executePipeOnDestroys(view);\n    // For component views only, the local renderer is destroyed as clean up time.\n    if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n      ngDevMode && ngDevMode.rendererDestroy++;\n      (view[RENDERER] as ProceduralRenderer3).destroy();\n    }\n  }\n}\n\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(viewData: LViewData): void {\n  const cleanup = viewData[TVIEW].cleanup !;\n  if (cleanup != null) {\n    for (let i = 0; i < cleanup.length - 1; i += 2) {\n      if (typeof cleanup[i] === 'string') {\n        // This is a listener with the native renderer\n        const native = readElementValue(viewData[cleanup[i + 1]]);\n        const listener = viewData[CLEANUP] ![cleanup[i + 2]];\n        native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n        i += 2;\n      } else if (typeof cleanup[i] === 'number') {\n        // This is a listener with renderer2 (cleanup fn can be found by index)\n        const cleanupFn = viewData[CLEANUP] ![cleanup[i]];\n        cleanupFn();\n      } else {\n        // This is a cleanup function that is grouped with the index of its context\n        const context = viewData[CLEANUP] ![cleanup[i + 1]];\n        cleanup[i].call(context);\n      }\n    }\n    viewData[CLEANUP] = null;\n  }\n}\n\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view: LViewData): void {\n  const tView = view[TVIEW];\n  let destroyHooks: HookData|null;\n  if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n    callHooks(view, destroyHooks);\n  }\n}\n\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(viewData: LViewData): void {\n  const pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n  if (pipeDestroyHooks) {\n    callHooks(viewData !, pipeDestroyHooks);\n  }\n}\n\nexport function getRenderParent(tNode: TNode, currentView: LViewData): RElement|null {\n  if (canInsertNativeNode(tNode, currentView)) {\n    const hostTNode = currentView[HOST_NODE];\n    return tNode.parent == null && hostTNode !.type === TNodeType.View ?\n        getContainerRenderParent(hostTNode as TViewNode, currentView) :\n        getParentNative(tNode, currentView) as RElement;\n  }\n  return null;\n}\n\nfunction canInsertNativeChildOfElement(tNode: TNode): boolean {\n  // If the parent is null, then we are inserting across views. This happens when we\n  // insert a root element of the component view into the component host element and it\n  // should always be eager.\n  if (tNode.parent == null ||\n      // We should also eagerly insert if the parent is a regular, non-component element\n      // since we know that this relationship will never be broken.\n      tNode.parent.type === TNodeType.Element && !(tNode.parent.flags & TNodeFlags.isComponent)) {\n    return true;\n  }\n\n  // Parent is a Component. Component's content nodes are not inserted immediately\n  // because they will be projected, and so doing insert at this point would be wasteful.\n  // Since the projection would than move it to its final destination.\n  return false;\n}\n\n/**\n * We might delay insertion of children for a given view if it is disconnected.\n * This might happen for 2 main reasons:\n * - view is not inserted into any container (view was created but not inserted yet)\n * - view is inserted into a container but the container itself is not inserted into the DOM\n * (container might be part of projection or child of a view that is not inserted yet).\n *\n * In other words we can insert children of a given view if this view was inserted into a container\n * and\n * the container itself has its render parent determined.\n */\nfunction canInsertNativeChildOfView(viewTNode: TViewNode, view: LViewData): boolean {\n  // Because we are inserting into a `View` the `View` may be disconnected.\n  const container = getLContainer(viewTNode, view) !;\n  if (container == null || container[RENDER_PARENT] == null) {\n    // The `View` is not inserted into a `Container` or the parent `Container`\n    // itself is disconnected. So we have to delay.\n    return false;\n  }\n\n  // The parent `Container` is in inserted state, so we can eagerly insert into\n  // this location.\n  return true;\n}\n\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n\n *\n * @param parent The parent where the child will be inserted into.\n * @param currentView Current LView being processed.\n * @return boolean Whether the child should be inserted now (or delayed until later).\n */\nexport function canInsertNativeNode(tNode: TNode, currentView: LViewData): boolean {\n  let currentNode = tNode;\n  let parent: TNode|null = tNode.parent;\n\n  if (tNode.parent && tNode.parent.type === TNodeType.ElementContainer) {\n    currentNode = getHighestElementContainer(tNode);\n    parent = currentNode.parent;\n  }\n  if (parent === null) parent = currentView[HOST_NODE];\n\n  if (parent && parent.type === TNodeType.View) {\n    return canInsertNativeChildOfView(parent as TViewNode, currentView);\n  } else {\n    // Parent is a regular element or a component\n    return canInsertNativeChildOfElement(currentNode);\n  }\n}\n\n/**\n * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n * This is a utility function that can be used when native nodes were determined - it abstracts an\n * actual renderer being used.\n */\nfunction nativeInsertBefore(\n    renderer: Renderer3, parent: RElement, child: RNode, beforeNode: RNode | null): void {\n  if (isProceduralRenderer(renderer)) {\n    renderer.insertBefore(parent, child, beforeNode);\n  } else {\n    parent.insertBefore(child, beforeNode, true);\n  }\n}\n\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}.\n *\n * @param childEl The child that should be appended\n * @param childTNode The TNode of the child element\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nexport function appendChild(\n    childEl: RNode | null, childTNode: TNode, currentView: LViewData): boolean {\n  if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n    const renderer = currentView[RENDERER];\n    const parentEl = getParentNative(childTNode, currentView);\n    const parentTNode: TNode = childTNode.parent || currentView[HOST_NODE] !;\n\n    if (parentTNode.type === TNodeType.View) {\n      const lContainer = getLContainer(parentTNode as TViewNode, currentView) as LContainer;\n      const views = lContainer[VIEWS];\n      const index = views.indexOf(currentView);\n      nativeInsertBefore(\n          renderer, lContainer[RENDER_PARENT] !, childEl,\n          getBeforeNodeForView(index, views, lContainer[NATIVE]));\n    } else if (parentTNode.type === TNodeType.ElementContainer) {\n      let elementContainer = getHighestElementContainer(childTNode);\n      let renderParent: RElement = getRenderParent(elementContainer, currentView) !;\n      nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n    } else {\n      isProceduralRenderer(renderer) ? renderer.appendChild(parentEl !as RElement, childEl) :\n                                       parentEl !.appendChild(childEl);\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * Gets the top-level ng-container if ng-containers are nested.\n *\n * @param ngContainer The TNode of the starting ng-container\n * @returns tNode The TNode of the highest level ng-container\n */\nfunction getHighestElementContainer(ngContainer: TNode): TNode {\n  while (ngContainer.parent != null && ngContainer.parent.type === TNodeType.ElementContainer) {\n    ngContainer = ngContainer.parent;\n  }\n  return ngContainer;\n}\n\nexport function getBeforeNodeForView(index: number, views: LViewData[], containerNative: RComment) {\n  if (index + 1 < views.length) {\n    const view = views[index + 1] as LViewData;\n    const viewTNode = view[HOST_NODE] as TViewNode;\n    return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n  } else {\n    return containerNative;\n  }\n}\n\n/**\n * Removes the `child` element from the DOM if not in view and not projected.\n *\n * @param childTNode The TNode of the child to remove\n * @param childEl The child that should be removed\n * @param currentView The current LView\n * @returns Whether or not the child was removed\n */\nexport function removeChild(\n    childTNode: TNode, childEl: RNode | null, currentView: LViewData): boolean {\n  // We only remove the element if not in View or not projected.\n  if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n    const parentNative = getParentNative(childTNode, currentView) !as RElement;\n    const renderer = currentView[RENDERER];\n    isProceduralRenderer(renderer) ? renderer.removeChild(parentNative as RElement, childEl) :\n                                     parentNative !.removeChild(childEl);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param projectedTNode The TNode to be projected\n * @param tProjectionNode The projection (ng-content) TNode\n * @param currentView Current LView\n * @param projectionView Projection view (view above current)\n */\nexport function appendProjectedNode(\n    projectedTNode: TNode, tProjectionNode: TNode, currentView: LViewData,\n    projectionView: LViewData): void {\n  const native = getNativeByTNode(projectedTNode, projectionView);\n  appendChild(native, tProjectionNode, currentView);\n\n  // the projected contents are processed while in the shadow view (which is the currentView)\n  // therefore we need to extract the view where the host element lives since it's the\n  // logical container of the content projected views\n  attachPatchData(native, projectionView);\n\n  const renderParent = getRenderParent(tProjectionNode, currentView);\n\n  const nodeOrContainer = projectionView[projectedTNode.index];\n  if (projectedTNode.type === TNodeType.Container) {\n    // The node we are adding is a container and we are adding it to an element which\n    // is not a component (no more re-projection).\n    // Alternatively a container is projected at the root of a component's template\n    // and can't be re-projected (as not content of any component).\n    // Assign the final projection location in those cases.\n    nodeOrContainer[RENDER_PARENT] = renderParent;\n    const views = nodeOrContainer[VIEWS];\n    for (let i = 0; i < views.length; i++) {\n      addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n    }\n  } else {\n    if (projectedTNode.type === TNodeType.ElementContainer) {\n      let ngContainerChildTNode: TNode|null = projectedTNode.child as TNode;\n      while (ngContainerChildTNode) {\n        appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n        ngContainerChildTNode = ngContainerChildTNode.next;\n      }\n    }\n\n    if (isLContainer(nodeOrContainer)) {\n      nodeOrContainer[RENDER_PARENT] = renderParent;\n      appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport './ng_dev_mode';\n\nimport {assertDefined, assertNotEqual} from './assert';\nimport {AttributeMarker, TAttributes, TNode, unusedValueExportToPlacateAjd as unused1} from './interfaces/node';\nimport {CssSelector, CssSelectorList, NG_PROJECT_AS_ATTR_NAME, SelectorFlags, unusedValueExportToPlacateAjd as unused2} from './interfaces/projection';\n\nconst unusedValueToPlacateAjd = unused1 + unused2;\n\nfunction isCssClassMatching(nodeClassAttrVal: string, cssClassToMatch: string): boolean {\n  const nodeClassesLen = nodeClassAttrVal.length;\n  const matchIndex = nodeClassAttrVal !.indexOf(cssClassToMatch);\n  const matchEndIdx = matchIndex + cssClassToMatch.length;\n  if (matchIndex === -1                                                  // no match\n      || (matchIndex > 0 && nodeClassAttrVal ![matchIndex - 1] !== ' ')  // no space before\n      ||\n      (matchEndIdx < nodeClassesLen && nodeClassAttrVal ![matchEndIdx] !== ' '))  // no space after\n  {\n    return false;\n  }\n  return true;\n}\n\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nexport function isNodeMatchingSelector(tNode: TNode, selector: CssSelector): boolean {\n  ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n\n  let mode: SelectorFlags = SelectorFlags.ELEMENT;\n  const nodeAttrs = tNode.attrs !;\n  const selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(AttributeMarker.SelectOnly) : -1;\n\n  // When processing \":not\" selectors, we skip to the next \":not\" if the\n  // current one doesn't match\n  let skipToNextSelector = false;\n\n  for (let i = 0; i < selector.length; i++) {\n    const current = selector[i];\n    if (typeof current === 'number') {\n      // If we finish processing a :not selector and it hasn't failed, return false\n      if (!skipToNextSelector && !isPositive(mode) && !isPositive(current as number)) {\n        return false;\n      }\n      // If we are skipping to the next :not() and this mode flag is positive,\n      // it's a part of the current :not() selector, and we should keep skipping\n      if (skipToNextSelector && isPositive(current)) continue;\n      skipToNextSelector = false;\n      mode = (current as number) | (mode & SelectorFlags.NOT);\n      continue;\n    }\n\n    if (skipToNextSelector) continue;\n\n    if (mode & SelectorFlags.ELEMENT) {\n      mode = SelectorFlags.ATTRIBUTE | mode & SelectorFlags.NOT;\n      if (current !== '' && current !== tNode.tagName) {\n        if (isPositive(mode)) return false;\n        skipToNextSelector = true;\n      }\n    } else {\n      const attrName = mode & SelectorFlags.CLASS ? 'class' : current;\n      const attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n\n      if (attrIndexInNode === -1) {\n        if (isPositive(mode)) return false;\n        skipToNextSelector = true;\n        continue;\n      }\n\n      const selectorAttrValue = mode & SelectorFlags.CLASS ? current : selector[++i];\n      if (selectorAttrValue !== '') {\n        let nodeAttrValue: string;\n        const maybeAttrName = nodeAttrs[attrIndexInNode];\n        if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n          nodeAttrValue = '';\n        } else {\n          ngDevMode && assertNotEqual(\n                           maybeAttrName, AttributeMarker.NamespaceURI,\n                           'We do not match directives on namespaced attributes');\n          nodeAttrValue = nodeAttrs[attrIndexInNode + 1] as string;\n        }\n        if (mode & SelectorFlags.CLASS &&\n                !isCssClassMatching(nodeAttrValue as string, selectorAttrValue as string) ||\n            mode & SelectorFlags.ATTRIBUTE && selectorAttrValue !== nodeAttrValue) {\n          if (isPositive(mode)) return false;\n          skipToNextSelector = true;\n        }\n      }\n    }\n  }\n\n  return isPositive(mode) || skipToNextSelector;\n}\n\nfunction isPositive(mode: SelectorFlags): boolean {\n  return (mode & SelectorFlags.NOT) === 0;\n}\n\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n */\nfunction findAttrIndexInNode(name: string, attrs: TAttributes | null): number {\n  if (attrs === null) return -1;\n  let selectOnlyMode = false;\n  let i = 0;\n  while (i < attrs.length) {\n    const maybeAttrName = attrs[i];\n    if (maybeAttrName === name) {\n      return i;\n    } else if (maybeAttrName === AttributeMarker.NamespaceURI) {\n      // NOTE(benlesh): will not find namespaced attributes. This is by design.\n      i += 4;\n    } else {\n      if (maybeAttrName === AttributeMarker.SelectOnly) {\n        selectOnlyMode = true;\n      }\n      i += selectOnlyMode ? 1 : 2;\n    }\n  }\n\n  return -1;\n}\n\nexport function isNodeMatchingSelectorList(tNode: TNode, selector: CssSelectorList): boolean {\n  for (let i = 0; i < selector.length; i++) {\n    if (isNodeMatchingSelector(tNode, selector[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function getProjectAsAttrValue(tNode: TNode): string|null {\n  const nodeAttrs = tNode.attrs;\n  if (nodeAttrs != null) {\n    const ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n    // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n    // (attribute names are stored at even indexes)\n    if ((ngProjectAsAttrIdx & 1) === 0) {\n      return nodeAttrs[ngProjectAsAttrIdx + 1] as string;\n    }\n  }\n  return null;\n}\n\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nexport function matchingSelectorIndex(\n    tNode: TNode, selectors: CssSelectorList[], textSelectors: string[]): number {\n  const ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n  for (let i = 0; i < selectors.length; i++) {\n    // if a node has the ngProjectAs attribute match it against unparsed selector\n    // match a node against a parsed selector only if ngProjectAs attribute is not present\n    if (ngProjectAsAttrVal === textSelectors[i] ||\n        ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n      return i + 1;  // first matching selector \"captures\" a given node\n    }\n  }\n  return 0;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {PlayerFactory, PlayerFactoryBuildFn} from '../interfaces/player';\n\n/**\n * Combines the binding value and a factory for an animation player.\n *\n * Used to bind a player to an element template binding (currently only\n * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n * supported). The provided `factoryFn` function will be run once all\n * the associated bindings have been evaluated on the element and is\n * designed to return a player which will then be placed on the element.\n *\n * @param factoryFn The function that is used to create a player\n *   once all the rendering-related (styling values) have been\n *   processed for the element binding.\n * @param value The raw value that will be exposed to the binding\n *   so that the binding can update its internal values when\n *   any changes are evaluated.\n */\nexport function bindPlayerFactory<T>(factoryFn: PlayerFactoryBuildFn, value: T): PlayerFactory {\n  return new BoundPlayerFactory(factoryFn, value) as any;\n}\n\nexport class BoundPlayerFactory<T> {\n  '__brand__': 'Brand for PlayerFactory that nothing will match';\n  constructor(public fn: PlayerFactoryBuildFn, public value: T) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {PlayState, Player, PlayerHandler} from '../interfaces/player';\n\nexport class CorePlayerHandler implements PlayerHandler {\n  private _players: Player[] = [];\n\n  flushPlayers() {\n    for (let i = 0; i < this._players.length; i++) {\n      const player = this._players[i];\n      if (!player.parent && player.state === PlayState.Pending) {\n        player.play();\n      }\n    }\n    this._players.length = 0;\n  }\n\n  queuePlayer(player: Player) { this._players.push(player); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '../ng_dev_mode';\n\nimport {StyleSanitizeFn} from '../../sanitization/style_sanitizer';\nimport {getContext} from '../context_discovery';\nimport {ACTIVE_INDEX, LContainer} from '../interfaces/container';\nimport {LContext} from '../interfaces/context';\nimport {PlayState, Player, PlayerContext, PlayerIndex} from '../interfaces/player';\nimport {RElement} from '../interfaces/renderer';\nimport {InitialStyles, StylingContext, StylingIndex} from '../interfaces/styling';\nimport {FLAGS, HEADER_OFFSET, HOST, LViewData, RootContext} from '../interfaces/view';\nimport {getTNode} from '../util';\n\nimport {CorePlayerHandler} from './core_player_handler';\n\nexport function createEmptyStylingContext(\n    element?: RElement | null, sanitizer?: StyleSanitizeFn | null,\n    initialStylingValues?: InitialStyles): StylingContext {\n  return [\n    null,                            // PlayerContext\n    sanitizer || null,               // StyleSanitizer\n    initialStylingValues || [null],  // InitialStyles\n    0,                               // MasterFlags\n    0,                               // ClassOffset\n    element || null,                 // Element\n    null,                            // PreviousMultiClassValue\n    null                             // PreviousMultiStyleValue\n  ];\n}\n\n/**\n * Used clone a copy of a pre-computed template of a styling context.\n *\n * A pre-computed template is designed to be computed once for a given element\n * (instructions.ts has logic for caching this).\n */\nexport function allocStylingContext(\n    element: RElement | null, templateStyleContext: StylingContext): StylingContext {\n  // each instance gets a copy\n  const context = templateStyleContext.slice() as any as StylingContext;\n  context[StylingIndex.ElementPosition] = element;\n  return context;\n}\n\n/**\n * Retrieve the `StylingContext` at a given index.\n *\n * This method lazily creates the `StylingContext`. This is because in most cases\n * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n * which would create unnecessary memory pressure.\n *\n * @param index Index of the style allocation. See: `elementStyling`.\n * @param viewData The view to search for the styling context\n */\nexport function getStylingContext(index: number, viewData: LViewData): StylingContext {\n  let storageIndex = index + HEADER_OFFSET;\n  let slotValue: LContainer|LViewData|StylingContext|RElement = viewData[storageIndex];\n  let wrapper: LContainer|LViewData|StylingContext = viewData;\n\n  while (Array.isArray(slotValue)) {\n    wrapper = slotValue;\n    slotValue = slotValue[HOST] as LViewData | StylingContext | RElement;\n  }\n\n  if (isStylingContext(wrapper)) {\n    return wrapper as StylingContext;\n  } else {\n    // This is an LViewData or an LContainer\n    const stylingTemplate = getTNode(index, viewData).stylingTemplate;\n\n    if (wrapper !== viewData) {\n      storageIndex = HOST;\n    }\n\n    return wrapper[storageIndex] = stylingTemplate ?\n        allocStylingContext(slotValue, stylingTemplate) :\n        createEmptyStylingContext(slotValue);\n  }\n}\n\nfunction isStylingContext(value: LViewData | LContainer | StylingContext) {\n  // Not an LViewData or an LContainer\n  return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n}\n\nexport function addPlayerInternal(\n    playerContext: PlayerContext, rootContext: RootContext, element: HTMLElement,\n    player: Player | null, playerContextIndex: number, ref?: any): boolean {\n  ref = ref || element;\n  if (playerContextIndex) {\n    playerContext[playerContextIndex] = player;\n  } else {\n    playerContext.push(player);\n  }\n\n  if (player) {\n    player.addEventListener(PlayState.Destroyed, () => {\n      const index = playerContext.indexOf(player);\n      const nonFactoryPlayerIndex = playerContext[PlayerIndex.NonBuilderPlayersStart];\n\n      // if the player is being removed from the factory side of the context\n      // (which is where the [style] and [class] bindings do their thing) then\n      // that side of the array cannot be resized since the respective bindings\n      // have pointer index values that point to the associated factory instance\n      if (index) {\n        if (index < nonFactoryPlayerIndex) {\n          playerContext[index] = null;\n        } else {\n          playerContext.splice(index, 1);\n        }\n      }\n      player.destroy();\n    });\n\n    const playerHandler =\n        rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n    playerHandler.queuePlayer(player, ref);\n    return true;\n  }\n\n  return false;\n}\n\nexport function getPlayersInternal(playerContext: PlayerContext): Player[] {\n  const players: Player[] = [];\n  const nonFactoryPlayersStart = playerContext[PlayerIndex.NonBuilderPlayersStart];\n\n  // add all factory-based players (which are apart of [style] and [class] bindings)\n  for (let i = PlayerIndex.PlayerBuildersStartPosition + PlayerIndex.PlayerOffsetPosition;\n       i < nonFactoryPlayersStart; i += PlayerIndex.PlayerAndPlayerBuildersTupleSize) {\n    const player = playerContext[i] as Player | null;\n    if (player) {\n      players.push(player);\n    }\n  }\n\n  // add all custom players (not apart of [style] and [class] bindings)\n  for (let i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n    players.push(playerContext[i] as Player);\n  }\n\n  return players;\n}\n\n\nexport function getOrCreatePlayerContext(target: {}, context?: LContext | null): PlayerContext|\n    null {\n  context = context || getContext(target) !;\n  if (!context) {\n    ngDevMode && throwInvalidRefError();\n    return null;\n  }\n\n  const {lViewData, nodeIndex} = context;\n  const stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n  return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n}\n\nexport function getPlayerContext(stylingContext: StylingContext): PlayerContext|null {\n  return stylingContext[StylingIndex.PlayerContext];\n}\n\nexport function allocPlayerContext(data: StylingContext): PlayerContext {\n  return data[StylingIndex.PlayerContext] =\n             [PlayerIndex.SinglePlayerBuildersStartPosition, null, null, null, null];\n}\n\nexport function throwInvalidRefError() {\n  throw new Error('Only elements that exist in an Angular application can be used for animations');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleSanitizeFn} from '../../sanitization/style_sanitizer';\nimport {InitialStylingFlags} from '../interfaces/definition';\nimport {BindingStore, BindingType, Player, PlayerBuilder, PlayerFactory, PlayerIndex} from '../interfaces/player';\nimport {Renderer3, RendererStyleFlags3, isProceduralRenderer} from '../interfaces/renderer';\nimport {InitialStyles, StylingContext, StylingFlags, StylingIndex} from '../interfaces/styling';\nimport {LViewData, RootContext} from '../interfaces/view';\nimport {getRootContext} from '../util';\n\nimport {BoundPlayerFactory} from './player_factory';\nimport {addPlayerInternal, allocPlayerContext, createEmptyStylingContext, getPlayerContext} from './util';\n\nconst EMPTY_ARR: any[] = [];\nconst EMPTY_OBJ: {[key: string]: any} = {};\n\n\n/**\n * Creates a styling context template where styling information is stored.\n * Any styles that are later referenced using `updateStyleProp` must be\n * passed in within this function. Initial values for those styles are to\n * be declared after all initial style properties are declared (this change in\n * mode between declarations and initial styles is made possible using a special\n * enum value found in `definition.ts`).\n *\n * @param initialStyleDeclarations a list of style declarations and initial style values\n *    that are used later within the styling context.\n *\n *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n *       This implies that `width` and `height` will be later styled and that the `width`\n *       property has an initial value of `100px`.\n *\n * @param initialClassDeclarations a list of class declarations and initial class values\n *    that are used later within the styling context.\n *\n *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n *       This implies that `foo` and `bar` will be later styled and that the `foo`\n *       class will be applied to the element as an initial class since it's true\n */\nexport function createStylingContextTemplate(\n    initialClassDeclarations?: (string | boolean | InitialStylingFlags)[] | null,\n    initialStyleDeclarations?: (string | boolean | InitialStylingFlags)[] | null,\n    styleSanitizer?: StyleSanitizeFn | null): StylingContext {\n  const initialStylingValues: InitialStyles = [null];\n  const context: StylingContext =\n      createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n\n  // we use two maps since a class name might collide with a CSS style prop\n  const stylesLookup: {[key: string]: number} = {};\n  const classesLookup: {[key: string]: number} = {};\n\n  let totalStyleDeclarations = 0;\n  if (initialStyleDeclarations) {\n    let hasPassedDeclarations = false;\n    for (let i = 0; i < initialStyleDeclarations.length; i++) {\n      const v = initialStyleDeclarations[i] as string | InitialStylingFlags;\n\n      // this flag value marks where the declarations end the initial values begin\n      if (v === InitialStylingFlags.VALUES_MODE) {\n        hasPassedDeclarations = true;\n      } else {\n        const prop = v as string;\n        if (hasPassedDeclarations) {\n          const value = initialStyleDeclarations[++i] as string;\n          initialStylingValues.push(value);\n          stylesLookup[prop] = initialStylingValues.length - 1;\n        } else {\n          totalStyleDeclarations++;\n          stylesLookup[prop] = 0;\n        }\n      }\n    }\n  }\n\n  // make where the class offsets begin\n  context[StylingIndex.ClassOffsetPosition] = totalStyleDeclarations;\n\n  if (initialClassDeclarations) {\n    let hasPassedDeclarations = false;\n    for (let i = 0; i < initialClassDeclarations.length; i++) {\n      const v = initialClassDeclarations[i] as string | boolean | InitialStylingFlags;\n      // this flag value marks where the declarations end the initial values begin\n      if (v === InitialStylingFlags.VALUES_MODE) {\n        hasPassedDeclarations = true;\n      } else {\n        const className = v as string;\n        if (hasPassedDeclarations) {\n          const value = initialClassDeclarations[++i] as boolean;\n          initialStylingValues.push(value);\n          classesLookup[className] = initialStylingValues.length - 1;\n        } else {\n          classesLookup[className] = 0;\n        }\n      }\n    }\n  }\n\n  const styleProps = Object.keys(stylesLookup);\n  const classNames = Object.keys(classesLookup);\n  const classNamesIndexStart = styleProps.length;\n  const totalProps = styleProps.length + classNames.length;\n\n  // *2 because we are filling for both single and multi style spaces\n  const maxLength = totalProps * StylingIndex.Size * 2 + StylingIndex.SingleStylesStartPosition;\n\n  // we need to fill the array from the start so that we can access\n  // both the multi and the single array positions in the same loop block\n  for (let i = StylingIndex.SingleStylesStartPosition; i < maxLength; i++) {\n    context.push(null);\n  }\n\n  const singleStart = StylingIndex.SingleStylesStartPosition;\n  const multiStart = totalProps * StylingIndex.Size + StylingIndex.SingleStylesStartPosition;\n\n  // fill single and multi-level styles\n  for (let i = 0; i < totalProps; i++) {\n    const isClassBased = i >= classNamesIndexStart;\n    const prop = isClassBased ? classNames[i - classNamesIndexStart] : styleProps[i];\n    const indexForInitial = isClassBased ? classesLookup[prop] : stylesLookup[prop];\n    const initialValue = initialStylingValues[indexForInitial];\n\n    const indexForMulti = i * StylingIndex.Size + multiStart;\n    const indexForSingle = i * StylingIndex.Size + singleStart;\n    const initialFlag = prepareInitialFlag(prop, isClassBased, styleSanitizer || null);\n\n    setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n    setProp(context, indexForSingle, prop);\n    setValue(context, indexForSingle, null);\n    setPlayerBuilderIndex(context, indexForSingle, 0);\n\n    const flagForMulti =\n        initialFlag | (initialValue !== null ? StylingFlags.Dirty : StylingFlags.None);\n    setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n    setProp(context, indexForMulti, prop);\n    setValue(context, indexForMulti, null);\n    setPlayerBuilderIndex(context, indexForMulti, 0);\n  }\n\n  // there is no initial value flag for the master index since it doesn't\n  // reference an initial style value\n  setFlag(context, StylingIndex.MasterFlagPosition, pointers(0, 0, multiStart));\n  setContextDirty(context, initialStylingValues.length > 1);\n\n  return context;\n}\n\n/**\n * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n * applied to the element once `renderStyleAndClassBindings` is called.\n *\n * All missing styles/class (any values that are not provided in the new `styles`\n * or `classes` params) will resolve to `null` within their respective positions\n * in the context.\n *\n * @param context The styling context that will be updated with the\n *    newly provided style values.\n * @param classesInput The key/value map of CSS class names that will be used for the update.\n * @param stylesInput The key/value map of CSS styles that will be used for the update.\n */\nexport function updateStylingMap(\n    context: StylingContext, classesInput: {[key: string]: any} | string |\n        BoundPlayerFactory<null|string|{[key: string]: any}>| null,\n    stylesInput?: {[key: string]: any} | BoundPlayerFactory<null|{[key: string]: any}>|\n        null): void {\n  stylesInput = stylesInput || null;\n\n  const element = context[StylingIndex.ElementPosition] !as HTMLElement;\n  const classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n      new ClassAndStylePlayerBuilder(classesInput as any, element, BindingType.Class) :\n      null;\n  const stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n      new ClassAndStylePlayerBuilder(stylesInput as any, element, BindingType.Style) :\n      null;\n\n  const classesValue = classesPlayerBuilder ?\n      (classesInput as BoundPlayerFactory<{[key: string]: any}|string>) !.value :\n      classesInput;\n  const stylesValue = stylesPlayerBuilder ? stylesInput !.value : stylesInput;\n\n  // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n  const ignoreAllClassUpdates = classesValue === context[StylingIndex.PreviousMultiClassValue];\n  const ignoreAllStyleUpdates = stylesValue === context[StylingIndex.PreviousMultiStyleValue];\n  if (ignoreAllClassUpdates && ignoreAllStyleUpdates) return;\n\n  context[StylingIndex.PreviousMultiClassValue] = classesValue;\n  context[StylingIndex.PreviousMultiStyleValue] = stylesValue;\n\n  let classNames: string[] = EMPTY_ARR;\n  let applyAllClasses = false;\n  let playerBuildersAreDirty = false;\n\n  const classesPlayerBuilderIndex =\n      classesPlayerBuilder ? PlayerIndex.ClassMapPlayerBuilderPosition : 0;\n  if (hasPlayerBuilderChanged(\n          context, classesPlayerBuilder, PlayerIndex.ClassMapPlayerBuilderPosition)) {\n    setPlayerBuilder(context, classesPlayerBuilder, PlayerIndex.ClassMapPlayerBuilderPosition);\n    playerBuildersAreDirty = true;\n  }\n\n  const stylesPlayerBuilderIndex =\n      stylesPlayerBuilder ? PlayerIndex.StyleMapPlayerBuilderPosition : 0;\n  if (hasPlayerBuilderChanged(\n          context, stylesPlayerBuilder, PlayerIndex.StyleMapPlayerBuilderPosition)) {\n    setPlayerBuilder(context, stylesPlayerBuilder, PlayerIndex.StyleMapPlayerBuilderPosition);\n    playerBuildersAreDirty = true;\n  }\n\n  // each time a string-based value pops up then it shouldn't require a deep\n  // check of what's changed.\n  if (!ignoreAllClassUpdates) {\n    if (typeof classesValue == 'string') {\n      classNames = classesValue.split(/\\s+/);\n      // this boolean is used to avoid having to create a key/value map of `true` values\n      // since a classname string implies that all those classes are added\n      applyAllClasses = true;\n    } else {\n      classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n    }\n  }\n\n  const classes = (classesValue || EMPTY_OBJ) as{[key: string]: any};\n  const styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n  const styles = stylesValue || EMPTY_OBJ;\n\n  const classesStartIndex = styleProps.length;\n  const multiStartIndex = getMultiStartIndex(context);\n\n  let dirty = false;\n  let ctxIndex = multiStartIndex;\n\n  let propIndex = 0;\n  const propLimit = styleProps.length + classNames.length;\n\n  // the main loop here will try and figure out how the shape of the provided\n  // styles differ with respect to the context. Later if the context/styles/classes\n  // are off-balance then they will be dealt in another loop after this one\n  while (ctxIndex < context.length && propIndex < propLimit) {\n    const isClassBased = propIndex >= classesStartIndex;\n    const processValue =\n        (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n\n    // when there is a cache-hit for a string-based class then we should\n    // avoid doing any work diffing any of the changes\n    if (processValue) {\n      const adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n      const newProp: string =\n          isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n      const newValue: string|boolean =\n          isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n      const playerBuilderIndex =\n          isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n\n      const prop = getProp(context, ctxIndex);\n      if (prop === newProp) {\n        const value = getValue(context, ctxIndex);\n        const flag = getPointers(context, ctxIndex);\n        setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n\n        if (hasValueChanged(flag, value, newValue)) {\n          setValue(context, ctxIndex, newValue);\n          playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n\n          const initialValue = getInitialValue(context, flag);\n\n          // there is no point in setting this to dirty if the previously\n          // rendered value was being referenced by the initial style (or null)\n          if (hasValueChanged(flag, initialValue, newValue)) {\n            setDirty(context, ctxIndex, true);\n            dirty = true;\n          }\n        }\n      } else {\n        const indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n        if (indexOfEntry > 0) {\n          // it was found at a later point ... just swap the values\n          const valueToCompare = getValue(context, indexOfEntry);\n          const flagToCompare = getPointers(context, indexOfEntry);\n          swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n          if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n            const initialValue = getInitialValue(context, flagToCompare);\n            setValue(context, ctxIndex, newValue);\n            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n              setDirty(context, ctxIndex, true);\n              playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n              dirty = true;\n            }\n          }\n        } else {\n          // we only care to do this if the insertion is in the middle\n          const newFlag = prepareInitialFlag(newProp, isClassBased, getStyleSanitizer(context));\n          playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n          insertNewMultiProperty(\n              context, ctxIndex, isClassBased, newProp, newFlag, newValue, playerBuilderIndex);\n          dirty = true;\n        }\n      }\n    }\n\n    ctxIndex += StylingIndex.Size;\n    propIndex++;\n  }\n\n  // this means that there are left-over values in the context that\n  // were not included in the provided styles/classes and in this\n  // case the  goal is to \"remove\" them from the context (by nullifying)\n  while (ctxIndex < context.length) {\n    const flag = getPointers(context, ctxIndex);\n    const isClassBased = (flag & StylingFlags.Class) === StylingFlags.Class;\n    const processValue =\n        (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n    if (processValue) {\n      const value = getValue(context, ctxIndex);\n      const doRemoveValue = valueExists(value, isClassBased);\n      if (doRemoveValue) {\n        setDirty(context, ctxIndex, true);\n        setValue(context, ctxIndex, null);\n\n        // we keep the player factory the same so that the `nulled` value can\n        // be instructed into the player because removing a style and/or a class\n        // is a valid animation player instruction.\n        const playerBuilderIndex =\n            isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n        setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n        dirty = true;\n      }\n    }\n    ctxIndex += StylingIndex.Size;\n  }\n\n  // this means that there are left-over properties in the context that\n  // were not detected in the context during the loop above. In that\n  // case we want to add the new entries into the list\n  const sanitizer = getStyleSanitizer(context);\n  while (propIndex < propLimit) {\n    const isClassBased = propIndex >= classesStartIndex;\n    const processValue =\n        (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n    if (processValue) {\n      const adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n      const prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n      const value: string|boolean =\n          isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n      const flag = prepareInitialFlag(prop, isClassBased, sanitizer) | StylingFlags.Dirty;\n      const playerBuilderIndex =\n          isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n      context.push(flag, prop, value, playerBuilderIndex);\n      dirty = true;\n    }\n    propIndex++;\n  }\n\n  if (dirty) {\n    setContextDirty(context, true);\n  }\n\n  if (playerBuildersAreDirty) {\n    setContextPlayersDirty(context, true);\n  }\n}\n\n/**\n * Sets and resolves a single styling property/value on the provided `StylingContext` so\n * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n *\n * Note that prop-level styling values are considered higher priority than any styling that\n * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n * then any styles/classes that have been applied using this function will be considered first\n * (then multi values second and then initial values as a backup).\n *\n * @param context The styling context that will be updated with the\n *    newly provided style value.\n * @param index The index of the property which is being updated.\n * @param value The CSS style value that will be assigned\n */\nexport function updateStyleProp(\n    context: StylingContext, index: number,\n    input: string | boolean | null | BoundPlayerFactory<string|boolean|null>): void {\n  const singleIndex = StylingIndex.SingleStylesStartPosition + index * StylingIndex.Size;\n  const currValue = getValue(context, singleIndex);\n  const currFlag = getPointers(context, singleIndex);\n  const value: string|boolean|null = (input instanceof BoundPlayerFactory) ? input.value : input;\n\n  // didn't change ... nothing to make a note of\n  if (hasValueChanged(currFlag, currValue, value)) {\n    const isClassBased = (currFlag & StylingFlags.Class) === StylingFlags.Class;\n    const element = context[StylingIndex.ElementPosition] !as HTMLElement;\n    const playerBuilder = input instanceof BoundPlayerFactory ?\n        new ClassAndStylePlayerBuilder(\n            input as any, element, isClassBased ? BindingType.Class : BindingType.Style) :\n        null;\n    const value = (playerBuilder ? (input as BoundPlayerFactory<any>).value : input) as string |\n        boolean | null;\n    const currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n\n    let playerBuildersAreDirty = false;\n    let playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n    if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n      const newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n      playerBuilderIndex = playerBuilder ? newIndex : 0;\n      setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n      playerBuildersAreDirty = true;\n    }\n\n    // the value will always get updated (even if the dirty flag is skipped)\n    setValue(context, singleIndex, value);\n    const indexForMulti = getMultiOrSingleIndex(currFlag);\n\n    // if the value is the same in the multi-area then there's no point in re-assembling\n    const valueForMulti = getValue(context, indexForMulti);\n    if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value)) {\n      let multiDirty = false;\n      let singleDirty = true;\n\n      // only when the value is set to `null` should the multi-value get flagged\n      if (!valueExists(value, isClassBased) && valueExists(valueForMulti, isClassBased)) {\n        multiDirty = true;\n        singleDirty = false;\n      }\n\n      setDirty(context, indexForMulti, multiDirty);\n      setDirty(context, singleIndex, singleDirty);\n      setContextDirty(context, true);\n    }\n\n    if (playerBuildersAreDirty) {\n      setContextPlayersDirty(context, true);\n    }\n  }\n}\n\n/**\n * This method will toggle the referenced CSS class (by the provided index)\n * within the given context.\n *\n * @param context The styling context that will be updated with the\n *    newly provided class value.\n * @param index The index of the CSS class which is being updated.\n * @param addOrRemove Whether or not to add or remove the CSS class\n */\nexport function updateClassProp(\n    context: StylingContext, index: number,\n    addOrRemove: boolean | BoundPlayerFactory<boolean>): void {\n  const adjustedIndex = index + context[StylingIndex.ClassOffsetPosition];\n  updateStyleProp(context, adjustedIndex, addOrRemove);\n}\n\n/**\n * Renders all queued styling using a renderer onto the given element.\n *\n * This function works by rendering any styles (that have been applied\n * using `updateStylingMap`) and any classes (that have been applied using\n * `updateStyleProp`) onto the provided element using the provided renderer.\n * Just before the styles/classes are rendered a final key/value style map\n * will be assembled (if `styleStore` or `classStore` are provided).\n *\n * @param lElement the element that the styles will be rendered on\n * @param context The styling context that will be used to determine\n *      what styles will be rendered\n * @param renderer the renderer that will be used to apply the styling\n * @param classesStore if provided, the updated class values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @param stylesStore if provided, the updated style values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @returns number the total amount of players that got queued for animation (if any)\n */\nexport function renderStyleAndClassBindings(\n    context: StylingContext, renderer: Renderer3, rootOrView: RootContext | LViewData,\n    classesStore?: BindingStore | null, stylesStore?: BindingStore | null): number {\n  let totalPlayersQueued = 0;\n  if (isContextDirty(context)) {\n    const flushPlayerBuilders: any =\n        context[StylingIndex.MasterFlagPosition] & StylingFlags.PlayerBuildersDirty;\n    const native = context[StylingIndex.ElementPosition] !;\n    const multiStartIndex = getMultiStartIndex(context);\n    const styleSanitizer = getStyleSanitizer(context);\n    for (let i = StylingIndex.SingleStylesStartPosition; i < context.length;\n         i += StylingIndex.Size) {\n      // there is no point in rendering styles that have not changed on screen\n      if (isDirty(context, i)) {\n        const prop = getProp(context, i);\n        const value = getValue(context, i);\n        const flag = getPointers(context, i);\n        const playerBuilder = getPlayerBuilder(context, i);\n        const isClassBased = flag & StylingFlags.Class ? true : false;\n        const isInSingleRegion = i < multiStartIndex;\n\n        let valueToApply: string|boolean|null = value;\n\n        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n        // this check implies that a single value was removed and we\n        // should now defer to a multi value and use that (if set).\n        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n          // single values ALWAYS have a reference to a multi index\n          const multiIndex = getMultiOrSingleIndex(flag);\n          valueToApply = getValue(context, multiIndex);\n        }\n\n        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n        // the initial value will always be a string or null,\n        // therefore we can safely adopt it incase there's nothing else\n        // note that this should always be a falsy check since `false` is used\n        // for both class and style comparisons (styles can't be false and false\n        // classes are turned off and should therefore defer to their initial values)\n        if (!valueExists(valueToApply, isClassBased)) {\n          valueToApply = getInitialValue(context, flag);\n        }\n\n        if (isClassBased) {\n          setClass(\n              native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n        } else {\n          const sanitizer = (flag & StylingFlags.Sanitize) ? styleSanitizer : null;\n          setStyle(\n              native, prop, valueToApply as string | null, renderer, sanitizer, stylesStore,\n              playerBuilder);\n        }\n        setDirty(context, i, false);\n      }\n    }\n\n    if (flushPlayerBuilders) {\n      const rootContext =\n          Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView as RootContext;\n      const playerContext = getPlayerContext(context) !;\n      const playersStartIndex = playerContext[PlayerIndex.NonBuilderPlayersStart];\n      for (let i = PlayerIndex.PlayerBuildersStartPosition; i < playersStartIndex;\n           i += PlayerIndex.PlayerAndPlayerBuildersTupleSize) {\n        const builder = playerContext[i] as ClassAndStylePlayerBuilder<any>| null;\n        const playerInsertionIndex = i + PlayerIndex.PlayerOffsetPosition;\n        const oldPlayer = playerContext[playerInsertionIndex] as Player | null;\n        if (builder) {\n          const player = builder.buildPlayer(oldPlayer);\n          if (player !== undefined) {\n            if (player != null) {\n              const wasQueued = addPlayerInternal(\n                  playerContext, rootContext, native as HTMLElement, player, playerInsertionIndex);\n              wasQueued && totalPlayersQueued++;\n            }\n            if (oldPlayer) {\n              oldPlayer.destroy();\n            }\n          }\n        } else if (oldPlayer) {\n          // the player builder has been removed ... therefore we should delete the associated\n          // player\n          oldPlayer.destroy();\n        }\n      }\n      setContextPlayersDirty(context, false);\n    }\n    setContextDirty(context, false);\n  }\n\n  return totalPlayersQueued;\n}\n\n/**\n * This function renders a given CSS prop/value entry using the\n * provided renderer. If a `store` value is provided then\n * that will be used a render context instead of the provided\n * renderer.\n *\n * @param native the DOM Element\n * @param prop the CSS style property that will be rendered\n * @param value the CSS style value that will be rendered\n * @param renderer\n * @param store an optional key/value map that will be used as a context to render styles on\n */\nfunction setStyle(\n    native: any, prop: string, value: string | null, renderer: Renderer3,\n    sanitizer: StyleSanitizeFn | null, store?: BindingStore | null,\n    playerBuilder?: ClassAndStylePlayerBuilder<any>| null) {\n  value = sanitizer && value ? sanitizer(prop, value) : value;\n  if (store || playerBuilder) {\n    if (store) {\n      store.setValue(prop, value);\n    }\n    if (playerBuilder) {\n      playerBuilder.setValue(prop, value);\n    }\n  } else if (value) {\n    ngDevMode && ngDevMode.rendererSetStyle++;\n    isProceduralRenderer(renderer) ?\n        renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n        native['style'].setProperty(prop, value);\n  } else {\n    ngDevMode && ngDevMode.rendererRemoveStyle++;\n    isProceduralRenderer(renderer) ?\n        renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n        native['style'].removeProperty(prop);\n  }\n}\n\n/**\n * This function renders a given CSS class value using the provided\n * renderer (by adding or removing it from the provided element).\n * If a `store` value is provided then that will be used a render\n * context instead of the provided renderer.\n *\n * @param native the DOM Element\n * @param prop the CSS style property that will be rendered\n * @param value the CSS style value that will be rendered\n * @param renderer\n * @param store an optional key/value map that will be used as a context to render styles on\n */\nfunction setClass(\n    native: any, className: string, add: boolean, renderer: Renderer3, store?: BindingStore | null,\n    playerBuilder?: ClassAndStylePlayerBuilder<any>| null) {\n  if (store || playerBuilder) {\n    if (store) {\n      store.setValue(className, add);\n    }\n    if (playerBuilder) {\n      playerBuilder.setValue(className, add);\n    }\n  } else if (add) {\n    ngDevMode && ngDevMode.rendererAddClass++;\n    isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                                     native['classList'].add(className);\n  } else {\n    ngDevMode && ngDevMode.rendererRemoveClass++;\n    isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                                     native['classList'].remove(className);\n  }\n}\n\nfunction setDirty(context: StylingContext, index: number, isDirtyYes: boolean) {\n  const adjustedIndex =\n      index >= StylingIndex.SingleStylesStartPosition ? (index + StylingIndex.FlagsOffset) : index;\n  if (isDirtyYes) {\n    (context[adjustedIndex] as number) |= StylingFlags.Dirty;\n  } else {\n    (context[adjustedIndex] as number) &= ~StylingFlags.Dirty;\n  }\n}\n\nfunction isDirty(context: StylingContext, index: number): boolean {\n  const adjustedIndex =\n      index >= StylingIndex.SingleStylesStartPosition ? (index + StylingIndex.FlagsOffset) : index;\n  return ((context[adjustedIndex] as number) & StylingFlags.Dirty) == StylingFlags.Dirty;\n}\n\nfunction isClassBased(context: StylingContext, index: number): boolean {\n  const adjustedIndex =\n      index >= StylingIndex.SingleStylesStartPosition ? (index + StylingIndex.FlagsOffset) : index;\n  return ((context[adjustedIndex] as number) & StylingFlags.Class) == StylingFlags.Class;\n}\n\nfunction isSanitizable(context: StylingContext, index: number): boolean {\n  const adjustedIndex =\n      index >= StylingIndex.SingleStylesStartPosition ? (index + StylingIndex.FlagsOffset) : index;\n  return ((context[adjustedIndex] as number) & StylingFlags.Sanitize) == StylingFlags.Sanitize;\n}\n\nfunction pointers(configFlag: number, staticIndex: number, dynamicIndex: number) {\n  return (configFlag & StylingFlags.BitMask) | (staticIndex << StylingFlags.BitCountSize) |\n      (dynamicIndex << (StylingIndex.BitCountSize + StylingFlags.BitCountSize));\n}\n\nfunction getInitialValue(context: StylingContext, flag: number): string|null {\n  const index = getInitialIndex(flag);\n  return context[StylingIndex.InitialStylesPosition][index] as null | string;\n}\n\nfunction getInitialIndex(flag: number): number {\n  return (flag >> StylingFlags.BitCountSize) & StylingIndex.BitMask;\n}\n\nfunction getMultiOrSingleIndex(flag: number): number {\n  const index =\n      (flag >> (StylingIndex.BitCountSize + StylingFlags.BitCountSize)) & StylingIndex.BitMask;\n  return index >= StylingIndex.SingleStylesStartPosition ? index : -1;\n}\n\nfunction getMultiStartIndex(context: StylingContext): number {\n  return getMultiOrSingleIndex(context[StylingIndex.MasterFlagPosition]) as number;\n}\n\nfunction getStyleSanitizer(context: StylingContext): StyleSanitizeFn|null {\n  return context[StylingIndex.StyleSanitizerPosition];\n}\n\nfunction setProp(context: StylingContext, index: number, prop: string) {\n  context[index + StylingIndex.PropertyOffset] = prop;\n}\n\nfunction setValue(context: StylingContext, index: number, value: string | null | boolean) {\n  context[index + StylingIndex.ValueOffset] = value;\n}\n\nfunction hasPlayerBuilderChanged(\n    context: StylingContext, builder: ClassAndStylePlayerBuilder<any>| null, index: number) {\n  const playerContext = context[StylingIndex.PlayerContext] !;\n  if (builder) {\n    if (!playerContext || index === 0) {\n      return true;\n    }\n  } else if (!playerContext) {\n    return false;\n  }\n  return playerContext[index] !== builder;\n}\n\nfunction setPlayerBuilder(\n    context: StylingContext, builder: ClassAndStylePlayerBuilder<any>| null,\n    insertionIndex: number): number {\n  let playerContext = context[StylingIndex.PlayerContext] || allocPlayerContext(context);\n  if (insertionIndex > 0) {\n    playerContext[insertionIndex] = builder;\n  } else {\n    insertionIndex = playerContext[PlayerIndex.NonBuilderPlayersStart];\n    playerContext.splice(insertionIndex, 0, builder, null);\n    playerContext[PlayerIndex.NonBuilderPlayersStart] +=\n        PlayerIndex.PlayerAndPlayerBuildersTupleSize;\n  }\n  return insertionIndex;\n}\n\nfunction setPlayerBuilderIndex(context: StylingContext, index: number, playerBuilderIndex: number) {\n  context[index + StylingIndex.PlayerBuilderIndexOffset] = playerBuilderIndex;\n}\n\nfunction getPlayerBuilderIndex(context: StylingContext, index: number): number {\n  return (context[index + StylingIndex.PlayerBuilderIndexOffset] as number) || 0;\n}\n\nfunction getPlayerBuilder(context: StylingContext, index: number): ClassAndStylePlayerBuilder<any>|\n    null {\n  const playerBuilderIndex = getPlayerBuilderIndex(context, index);\n  if (playerBuilderIndex) {\n    const playerContext = context[StylingIndex.PlayerContext];\n    if (playerContext) {\n      return playerContext[playerBuilderIndex] as ClassAndStylePlayerBuilder<any>| null;\n    }\n  }\n  return null;\n}\n\nfunction setFlag(context: StylingContext, index: number, flag: number) {\n  const adjustedIndex =\n      index === StylingIndex.MasterFlagPosition ? index : (index + StylingIndex.FlagsOffset);\n  context[adjustedIndex] = flag;\n}\n\nfunction getPointers(context: StylingContext, index: number): number {\n  const adjustedIndex =\n      index === StylingIndex.MasterFlagPosition ? index : (index + StylingIndex.FlagsOffset);\n  return context[adjustedIndex] as number;\n}\n\nfunction getValue(context: StylingContext, index: number): string|boolean|null {\n  return context[index + StylingIndex.ValueOffset] as string | boolean | null;\n}\n\nfunction getProp(context: StylingContext, index: number): string {\n  return context[index + StylingIndex.PropertyOffset] as string;\n}\n\nexport function isContextDirty(context: StylingContext): boolean {\n  return isDirty(context, StylingIndex.MasterFlagPosition);\n}\n\nexport function setContextDirty(context: StylingContext, isDirtyYes: boolean): void {\n  setDirty(context, StylingIndex.MasterFlagPosition, isDirtyYes);\n}\n\nexport function setContextPlayersDirty(context: StylingContext, isDirtyYes: boolean): void {\n  if (isDirtyYes) {\n    (context[StylingIndex.MasterFlagPosition] as number) |= StylingFlags.PlayerBuildersDirty;\n  } else {\n    (context[StylingIndex.MasterFlagPosition] as number) &= ~StylingFlags.PlayerBuildersDirty;\n  }\n}\n\nfunction findEntryPositionByProp(\n    context: StylingContext, prop: string, startIndex?: number): number {\n  for (let i = (startIndex || 0) + StylingIndex.PropertyOffset; i < context.length;\n       i += StylingIndex.Size) {\n    const thisProp = context[i];\n    if (thisProp == prop) {\n      return i - StylingIndex.PropertyOffset;\n    }\n  }\n  return -1;\n}\n\nfunction swapMultiContextEntries(context: StylingContext, indexA: number, indexB: number) {\n  const tmpValue = getValue(context, indexA);\n  const tmpProp = getProp(context, indexA);\n  const tmpFlag = getPointers(context, indexA);\n  const tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n\n  let flagA = tmpFlag;\n  let flagB = getPointers(context, indexB);\n\n  const singleIndexA = getMultiOrSingleIndex(flagA);\n  if (singleIndexA >= 0) {\n    const _flag = getPointers(context, singleIndexA);\n    const _initial = getInitialIndex(_flag);\n    setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n  }\n\n  const singleIndexB = getMultiOrSingleIndex(flagB);\n  if (singleIndexB >= 0) {\n    const _flag = getPointers(context, singleIndexB);\n    const _initial = getInitialIndex(_flag);\n    setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n  }\n\n  setValue(context, indexA, getValue(context, indexB));\n  setProp(context, indexA, getProp(context, indexB));\n  setFlag(context, indexA, getPointers(context, indexB));\n  setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n\n  setValue(context, indexB, tmpValue);\n  setProp(context, indexB, tmpProp);\n  setFlag(context, indexB, tmpFlag);\n  setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n}\n\nfunction updateSinglePointerValues(context: StylingContext, indexStartPosition: number) {\n  for (let i = indexStartPosition; i < context.length; i += StylingIndex.Size) {\n    const multiFlag = getPointers(context, i);\n    const singleIndex = getMultiOrSingleIndex(multiFlag);\n    if (singleIndex > 0) {\n      const singleFlag = getPointers(context, singleIndex);\n      const initialIndexForSingle = getInitialIndex(singleFlag);\n      const flagValue = (isDirty(context, singleIndex) ? StylingFlags.Dirty : StylingFlags.None) |\n          (isClassBased(context, singleIndex) ? StylingFlags.Class : StylingFlags.None) |\n          (isSanitizable(context, singleIndex) ? StylingFlags.Sanitize : StylingFlags.None);\n      const updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n      setFlag(context, singleIndex, updatedFlag);\n    }\n  }\n}\n\nfunction insertNewMultiProperty(\n    context: StylingContext, index: number, classBased: boolean, name: string, flag: number,\n    value: string | boolean, playerIndex: number): void {\n  const doShift = index < context.length;\n\n  // prop does not exist in the list, add it in\n  context.splice(\n      index, 0, flag | StylingFlags.Dirty | (classBased ? StylingFlags.Class : StylingFlags.None),\n      name, value, playerIndex);\n\n  if (doShift) {\n    // because the value was inserted midway into the array then we\n    // need to update all the shifted multi values' single value\n    // pointers to point to the newly shifted location\n    updateSinglePointerValues(context, index + StylingIndex.Size);\n  }\n}\n\nfunction valueExists(value: string | null | boolean, isClassBased?: boolean) {\n  if (isClassBased) {\n    return value ? true : false;\n  }\n  return value !== null;\n}\n\nfunction prepareInitialFlag(\n    name: string, isClassBased: boolean, sanitizer?: StyleSanitizeFn | null) {\n  if (isClassBased) {\n    return StylingFlags.Class;\n  } else if (sanitizer && sanitizer(name)) {\n    return StylingFlags.Sanitize;\n  }\n  return StylingFlags.None;\n}\n\nfunction hasValueChanged(\n    flag: number, a: string | boolean | null, b: string | boolean | null): boolean {\n  const isClassBased = flag & StylingFlags.Class;\n  const hasValues = a && b;\n  const usesSanitizer = flag & StylingFlags.Sanitize;\n  // the toString() comparison ensures that a value is checked\n  // ... otherwise (during sanitization bypassing) the === comparsion\n  // would fail since a new String() instance is created\n  if (!isClassBased && hasValues && usesSanitizer) {\n    // we know for sure we're dealing with strings at this point\n    return (a as string).toString() !== (b as string).toString();\n  }\n\n  // everything else is safe to check with a normal equality check\n  return a !== b;\n}\n\nexport class ClassAndStylePlayerBuilder<T> implements PlayerBuilder {\n  private _values: {[key: string]: string | null} = {};\n  private _dirty = false;\n  private _factory: BoundPlayerFactory<T>;\n\n  constructor(factory: PlayerFactory, private _element: HTMLElement, private _type: BindingType) {\n    this._factory = factory as any;\n  }\n\n  setValue(prop: string, value: any) {\n    if (this._values[prop] !== value) {\n      this._values[prop] = value;\n      this._dirty = true;\n    }\n  }\n\n  buildPlayer(currentPlayer?: Player|null): Player|undefined|null {\n    // if no values have been set here then this means the binding didn't\n    // change and therefore the binding values were not updated through\n    // `setValue` which means no new player will be provided.\n    if (this._dirty) {\n      const player =\n          this._factory.fn(this._element, this._type, this._values !, currentPlayer || null);\n      this._values = {};\n      this._dirty = false;\n      return player;\n    }\n\n    return undefined;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport './ng_dev_mode';\n\nimport {QueryList} from '../linker';\nimport {Sanitizer} from '../sanitization/security';\nimport {StyleSanitizeFn} from '../sanitization/style_sanitizer';\n\nimport {assertDefined, assertEqual, assertLessThan, assertNotEqual} from './assert';\nimport {attachPatchData, getComponentViewByInstance} from './context_discovery';\nimport {throwCyclicDependencyError, throwErrorIfNoChangesMode, throwMultipleComponentError} from './errors';\nimport {executeHooks, executeInitHooks, queueInitHooks, queueLifecycleHooks} from './hooks';\nimport {ACTIVE_INDEX, LContainer, VIEWS} from './interfaces/container';\nimport {ComponentDef, ComponentQuery, ComponentTemplate, DirectiveDef, DirectiveDefListOrFactory, InitialStylingFlags, PipeDefListOrFactory, RenderFlags} from './interfaces/definition';\nimport {INJECTOR_SIZE} from './interfaces/injector';\nimport {AttributeMarker, InitialInputData, InitialInputs, LocalRefExtractor, PropertyAliasValue, PropertyAliases, TAttributes, TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeFlags, TNodeType, TProjectionNode, TViewNode} from './interfaces/node';\nimport {PlayerFactory} from './interfaces/player';\nimport {CssSelectorList, NG_PROJECT_AS_ATTR_NAME} from './interfaces/projection';\nimport {LQueries} from './interfaces/query';\nimport {ProceduralRenderer3, RComment, RElement, RNode, RText, Renderer3, RendererFactory3, isProceduralRenderer} from './interfaces/renderer';\nimport {BINDING_INDEX, CLEANUP, CONTAINER_INDEX, CONTENT_QUERIES, CONTEXT, CurrentMatchesList, DECLARATION_VIEW, FLAGS, HEADER_OFFSET, HOST, HOST_NODE, INJECTOR, LViewData, LViewFlags, NEXT, OpaqueViewState, PARENT, QUERIES, RENDERER, RootContext, RootContextFlags, SANITIZER, TAIL, TVIEW, TView} from './interfaces/view';\nimport {assertNodeOfPossibleTypes, assertNodeType} from './node_assert';\nimport {appendChild, appendProjectedNode, createTextNode, findComponentView, getLViewChild, getRenderParent, insertView, removeView} from './node_manipulation';\nimport {isNodeMatchingSelectorList, matchingSelectorIndex} from './node_selector_matcher';\nimport {createStylingContextTemplate, renderStyleAndClassBindings, updateClassProp as updateElementClassProp, updateStyleProp as updateElementStyleProp, updateStylingMap} from './styling/class_and_style_bindings';\nimport {BoundPlayerFactory} from './styling/player_factory';\nimport {getStylingContext} from './styling/util';\nimport {assertDataInRangeInternal, getComponentViewByIndex, getNativeByIndex, getNativeByTNode, getRootContext, getRootView, getTNode, isComponent, isContentQueryHost, isDifferent, loadInternal, readPatchedLViewData, stringify} from './util';\n\n\n\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nconst _CLEAN_PROMISE = Promise.resolve(null);\n\n/**\n * Function used to sanitize the value before writing it into the renderer.\n */\nexport type SanitizerFn = (value: any) => string;\n\n/**\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n */\nexport const CIRCULAR = '__CIRCULAR__';\n\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nlet renderer: Renderer3;\n\nexport function getRenderer(): Renderer3 {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return renderer;\n}\n\nlet rendererFactory: RendererFactory3;\n\nexport function getRendererFactory(): RendererFactory3 {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return rendererFactory;\n}\n\nexport function getCurrentSanitizer(): Sanitizer|null {\n  return viewData && viewData[SANITIZER];\n}\n\n/**\n * Store the element depth count. This is used to identify the root elements of the template\n * so that we can than attach `LViewData` to only those elements.\n */\nlet elementDepthCount !: number;\n\n/**\n * Stores whether directives should be matched to elements.\n *\n * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n * directives on children of that element.\n *\n * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n * </div>\n * ```\n */\nlet bindingsEnabled !: boolean;\n\n/**\n * Returns the current OpaqueViewState instance.\n *\n * Used in conjunction with the restoreView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n */\nexport function getCurrentView(): OpaqueViewState {\n  return viewData as any as OpaqueViewState;\n}\n\n/**\n * Restores `contextViewData` to the given OpaqueViewState instance.\n *\n * Used in conjunction with the getCurrentView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @param viewToRestore The OpaqueViewState instance to restore.\n */\nexport function restoreView(viewToRestore: OpaqueViewState) {\n  contextViewData = viewToRestore as any as LViewData;\n}\n\n/** Used to set the parent property when nodes are created and track query results. */\nlet previousOrParentTNode: TNode;\n\nexport function getPreviousOrParentTNode(): TNode {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return previousOrParentTNode;\n}\n\nexport function setEnvironment(tNode: TNode, view: LViewData) {\n  previousOrParentTNode = tNode;\n  viewData = view;\n}\n\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentTNode` points to a parent node.\n *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n */\nlet isParent: boolean;\n\nlet tView: TView;\n\nlet currentQueries: LQueries|null;\n\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n * create content queries).\n */\nexport function getOrCreateCurrentQueries(\n    QueryType: {new (parent: null, shallow: null, deep: null): LQueries}): LQueries {\n  // if this is the first content query on a node, any existing LQueries needs to be cloned\n  // in subsequent template passes, the cloning occurs before directive instantiation.\n  if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n      !isContentQueryHost(previousOrParentTNode)) {\n    currentQueries && (currentQueries = currentQueries.clone());\n    previousOrParentTNode.flags |= TNodeFlags.hasContentQuery;\n  }\n\n  return currentQueries || (currentQueries = new QueryType(null, null, null));\n}\n\n/**\n * This property gets set before entering a template.\n */\nlet creationMode: boolean;\n\nexport function getCreationMode(): boolean {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return creationMode;\n}\n\n/**\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nlet viewData: LViewData;\n\n/**\n * Internal function that returns the current LViewData instance.\n *\n * The getCurrentView() instruction should be used for anything public.\n */\nexport function _getViewData(): LViewData {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return viewData;\n}\n\n/**\n * The last viewData retrieved by nextContext().\n * Allows building nextContext() and reference() calls.\n *\n * e.g. const inner = x().$implicit; const outer = x().$implicit;\n */\nlet contextViewData: LViewData = null !;\n\nfunction getCleanup(view: LViewData): any[] {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return view[CLEANUP] || (view[CLEANUP] = []);\n}\n\nfunction getTViewCleanup(view: LViewData): any[] {\n  return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nlet checkNoChangesMode = false;\n\n/** Whether or not this is the first time the current view has been processed. */\nlet firstTemplatePass = true;\n\n/**\n * The root index from which pure function instructions should calculate their binding\n * indices. In component views, this is TView.bindingStartIndex. In a host binding\n * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n */\nlet bindingRootIndex: number = -1;\n\n// top level variables should not be exported for performance reasons (PERF_NOTES.md)\nexport function getBindingRoot() {\n  return bindingRootIndex;\n}\n\nconst enum BindingDirection {\n  Input,\n  Output,\n}\n\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nexport function enterView(\n    newView: LViewData, hostTNode: TElementNode | TViewNode | null): LViewData {\n  const oldView: LViewData = viewData;\n  tView = newView && newView[TVIEW];\n\n  creationMode = newView && (newView[FLAGS] & LViewFlags.CreationMode) === LViewFlags.CreationMode;\n  firstTemplatePass = newView && tView.firstTemplatePass;\n  bindingRootIndex = newView && tView.bindingStartIndex;\n  renderer = newView && newView[RENDERER];\n\n  previousOrParentTNode = hostTNode !;\n  isParent = true;\n\n  viewData = contextViewData = newView;\n  oldView && (oldView[QUERIES] = currentQueries);\n  currentQueries = newView && newView[QUERIES];\n\n  return oldView;\n}\n\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n */\nexport function leaveView(newView: LViewData, creationOnly?: boolean): void {\n  if (!creationOnly) {\n    if (!checkNoChangesMode) {\n      executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n    }\n    // Views are clean and in update mode after being checked, so these bits are cleared\n    viewData[FLAGS] &= ~(LViewFlags.CreationMode | LViewFlags.Dirty);\n  }\n  viewData[FLAGS] |= LViewFlags.RunInit;\n  viewData[BINDING_INDEX] = tView.bindingStartIndex;\n  enterView(newView, null);\n}\n\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings, refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n */\nfunction refreshDescendantViews() {\n  setHostBindings();\n  const parentFirstTemplatePass = firstTemplatePass;\n\n  // This needs to be set before children are processed to support recursive components\n  tView.firstTemplatePass = firstTemplatePass = false;\n\n  if (!checkNoChangesMode) {\n    executeInitHooks(viewData, tView, creationMode);\n  }\n  refreshDynamicEmbeddedViews(viewData);\n\n  // Content query results must be refreshed before content hooks are called.\n  refreshContentQueries(tView);\n\n  if (!checkNoChangesMode) {\n    executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n  }\n\n  refreshChildComponents(tView.components, parentFirstTemplatePass);\n}\n\n\n/** Sets the host bindings for the current view. */\nexport function setHostBindings(): void {\n  if (tView.expandoInstructions) {\n    bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n    let currentDirectiveIndex = -1;\n    let currentElementIndex = -1;\n    for (let i = 0; i < tView.expandoInstructions.length; i++) {\n      const instruction = tView.expandoInstructions[i];\n      if (typeof instruction === 'number') {\n        if (instruction <= 0) {\n          // Negative numbers mean that we are starting new EXPANDO block and need to update\n          // the current element and directive index.\n          currentElementIndex = -instruction;\n          if (typeof viewData[bindingRootIndex] === 'number') {\n            // We've hit an injector. It may or may not exist depending on whether\n            // there is a public directive on this node.\n            bindingRootIndex += INJECTOR_SIZE;\n          }\n          currentDirectiveIndex = bindingRootIndex;\n        } else {\n          // This is either the injector size (so the binding root can skip over directives\n          // and get to the first set of host bindings on this node) or the host var count\n          // (to get to the next set of host bindings on this node).\n          bindingRootIndex += instruction;\n        }\n      } else {\n        // If it's not a number, it's a host binding function that needs to be executed.\n        viewData[BINDING_INDEX] = bindingRootIndex;\n        // We must subtract the header offset because the load() instruction\n        // expects a raw, unadjusted index.\n        instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n        currentDirectiveIndex++;\n      }\n    }\n  }\n}\n\n/** Refreshes content queries for all directives in the given view. */\nfunction refreshContentQueries(tView: TView): void {\n  if (tView.contentQueries != null) {\n    for (let i = 0; i < tView.contentQueries.length; i += 2) {\n      const directiveDefIdx = tView.contentQueries[i];\n      const directiveDef = tView.data[directiveDefIdx] as DirectiveDef<any>;\n\n      directiveDef.contentQueriesRefresh !(\n          directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n    }\n  }\n}\n\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(\n    components: number[] | null, parentFirstTemplatePass: boolean): void {\n  if (components != null) {\n    for (let i = 0; i < components.length; i++) {\n      componentRefresh(components[i], parentFirstTemplatePass);\n    }\n  }\n}\n\nexport function executeInitAndContentHooks(): void {\n  if (!checkNoChangesMode) {\n    executeInitHooks(viewData, tView, creationMode);\n    executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n  }\n}\n\nexport function createLViewData<T>(\n    renderer: Renderer3, tView: TView, context: T | null, flags: LViewFlags,\n    sanitizer?: Sanitizer | null): LViewData {\n  const instance = tView.blueprint.slice() as LViewData;\n  instance[FLAGS] = flags | LViewFlags.CreationMode | LViewFlags.Attached | LViewFlags.RunInit;\n  instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n  instance[CONTEXT] = context;\n  instance[INJECTOR] = viewData ? viewData[INJECTOR] : null;\n  instance[RENDERER] = renderer;\n  instance[SANITIZER] = sanitizer || null;\n  return instance;\n}\n\n/**\n * Create and stores the TNode, and hooks it up to the tree.\n *\n * @param index The index at which the TNode should be saved (null if view, since they are not\n * saved).\n * @param type The type of TNode to create\n * @param native The native element for this node, if applicable\n * @param name The tag name of the associated native element, if applicable\n * @param attrs Any attrs for the native element, if applicable\n */\nexport function createNodeAtIndex(\n    index: number, type: TNodeType.Element, native: RElement | RText | null, name: string | null,\n    attrs: TAttributes | null): TElementNode;\nexport function createNodeAtIndex(\n    index: number, type: TNodeType.Container, native: RComment, name: string | null,\n    attrs: TAttributes | null): TContainerNode;\nexport function createNodeAtIndex(\n    index: number, type: TNodeType.Projection, native: null, name: null,\n    attrs: TAttributes | null): TProjectionNode;\nexport function createNodeAtIndex(\n    index: number, type: TNodeType.ElementContainer, native: RComment, name: null,\n    attrs: TAttributes | null): TElementContainerNode;\nexport function createNodeAtIndex(\n    index: number, type: TNodeType, native: RText | RElement | RComment | null, name: string | null,\n    attrs: TAttributes | null): TElementNode&TContainerNode&TElementContainerNode&TProjectionNode {\n  const adjustedIndex = index + HEADER_OFFSET;\n  ngDevMode &&\n      assertLessThan(adjustedIndex, viewData.length, `Slot should have been initialized with null`);\n  viewData[adjustedIndex] = native;\n\n  let tNode = tView.data[adjustedIndex] as TNode;\n  if (tNode == null) {\n    tNode = tView.data[adjustedIndex] = createTNode(type, adjustedIndex, name, attrs, null);\n\n    // Now link ourselves into the tree.\n    if (previousOrParentTNode) {\n      if (isParent && previousOrParentTNode.child == null &&\n          (tNode.parent !== null || previousOrParentTNode.type === TNodeType.View)) {\n        // We are in the same view, which means we are adding content node to the parent view.\n        previousOrParentTNode.child = tNode;\n      } else if (!isParent) {\n        previousOrParentTNode.next = tNode;\n      }\n    }\n  }\n\n  if (tView.firstChild == null && type === TNodeType.Element) {\n    tView.firstChild = tNode;\n  }\n\n  previousOrParentTNode = tNode;\n  isParent = true;\n  return tNode as TElementNode & TViewNode & TContainerNode & TElementContainerNode &\n      TProjectionNode;\n}\n\nexport function createViewNode(index: number, view: LViewData) {\n  // View nodes are not stored in data because they can be added / removed at runtime (which\n  // would cause indices to change). Their TNodes are instead stored in tView.node.\n  if (view[TVIEW].node == null) {\n    view[TVIEW].node = createTNode(TNodeType.View, index, null, null, null) as TViewNode;\n  }\n\n  isParent = true;\n  return previousOrParentTNode = view[HOST_NODE] = view[TVIEW].node as TViewNode;\n}\n\n\n/**\n * When elements are created dynamically after a view blueprint is created (e.g. through\n * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n * template passes.\n */\nexport function adjustBlueprintForNewNode(view: LViewData) {\n  const tView = view[TVIEW];\n  if (tView.firstTemplatePass) {\n    tView.expandoStartIndex++;\n    tView.blueprint.push(null);\n    view.push(null);\n  }\n}\n\n\n//////////////////////////\n//// Render\n//////////////////////////\n\n/**\n * Resets the application state.\n */\nexport function resetComponentState() {\n  isParent = false;\n  previousOrParentTNode = null !;\n  elementDepthCount = 0;\n  bindingsEnabled = true;\n}\n\n/**\n *\n * @param hostNode Existing node to render into.\n * @param templateFn Template function with the instructions.\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param directives Directive defs that should be used for matching\n * @param pipes Pipe defs that should be used for matching\n */\nexport function renderTemplate<T>(\n    hostNode: RElement, templateFn: ComponentTemplate<T>, consts: number, vars: number, context: T,\n    providedRendererFactory: RendererFactory3, hostView: LViewData | null,\n    directives?: DirectiveDefListOrFactory | null, pipes?: PipeDefListOrFactory | null,\n    sanitizer?: Sanitizer | null): LViewData {\n  if (hostView == null) {\n    resetComponentState();\n    rendererFactory = providedRendererFactory;\n    renderer = providedRendererFactory.createRenderer(null, null);\n\n    // We need to create a root view so it's possible to look up the host element through its index\n    tView = createTView(-1, null, 1, 0, null, null, null);\n    viewData = createLViewData(renderer, tView, {}, LViewFlags.CheckAlways | LViewFlags.IsRoot);\n\n    const componentTView =\n        getOrCreateTView(templateFn, consts, vars, directives || null, pipes || null, null);\n    hostView =\n        createLViewData(renderer, componentTView, context, LViewFlags.CheckAlways, sanitizer);\n    hostView[HOST_NODE] = createNodeAtIndex(0, TNodeType.Element, hostNode, null, null);\n  }\n  renderComponentOrTemplate(hostView, context, templateFn);\n\n  return hostView;\n}\n\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n */\nexport function createEmbeddedViewAndNode<T>(\n    tView: TView, context: T, declarationView: LViewData, renderer: Renderer3,\n    queries: LQueries | null, injectorIndex: number): LViewData {\n  const _isParent = isParent;\n  const _previousOrParentTNode = previousOrParentTNode;\n  isParent = true;\n  previousOrParentTNode = null !;\n\n  const lView =\n      createLViewData(renderer, tView, context, LViewFlags.CheckAlways, getCurrentSanitizer());\n  lView[DECLARATION_VIEW] = declarationView;\n\n  if (queries) {\n    lView[QUERIES] = queries.createView();\n  }\n  createViewNode(-1, lView);\n\n  if (tView.firstTemplatePass) {\n    tView.node !.injectorIndex = injectorIndex;\n  }\n\n  isParent = _isParent;\n  previousOrParentTNode = _previousOrParentTNode;\n  return lView;\n}\n\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nexport function renderEmbeddedTemplate<T>(\n    viewToRender: LViewData, tView: TView, context: T, rf: RenderFlags) {\n  const _isParent = isParent;\n  const _previousOrParentTNode = previousOrParentTNode;\n  let oldView: LViewData;\n  if (viewToRender[FLAGS] & LViewFlags.IsRoot) {\n    // This is a root view inside the view tree\n    tickRootContext(viewToRender[CONTEXT] as RootContext);\n  } else {\n    try {\n      isParent = true;\n      previousOrParentTNode = null !;\n\n      oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n      namespaceHTML();\n      tView.template !(rf, context);\n      if (rf & RenderFlags.Update) {\n        refreshDescendantViews();\n      } else {\n        // This must be set to false immediately after the first creation run because in an\n        // ngFor loop, all the views will be created together before update mode runs and turns\n        // off firstTemplatePass. If we don't set it here, instances will perform directive\n        // matching, etc again and again.\n        viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n      }\n    } finally {\n      // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n      // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n      const isCreationOnly = (rf & RenderFlags.Create) === RenderFlags.Create;\n      leaveView(oldView !, isCreationOnly);\n      isParent = _isParent;\n      previousOrParentTNode = _previousOrParentTNode;\n    }\n  }\n}\n\n/**\n * Retrieves a context at the level specified and saves it as the global, contextViewData.\n * Will get the next level up if level is not specified.\n *\n * This is used to save contexts of parent views so they can be bound in embedded views, or\n * in conjunction with reference() to bind a ref from a parent view.\n *\n * @param level The relative level of the view from which to grab context compared to contextVewData\n * @returns context\n */\nexport function nextContext<T = any>(level: number = 1): T {\n  contextViewData = walkUpViews(level, contextViewData !);\n  return contextViewData[CONTEXT] as T;\n}\n\nexport function renderComponentOrTemplate<T>(\n    hostView: LViewData, componentOrContext: T, templateFn?: ComponentTemplate<T>) {\n  const oldView = enterView(hostView, hostView[HOST_NODE]);\n  try {\n    if (rendererFactory.begin) {\n      rendererFactory.begin();\n    }\n    if (templateFn) {\n      namespaceHTML();\n      templateFn(getRenderFlags(hostView), componentOrContext !);\n      refreshDescendantViews();\n    } else {\n      executeInitAndContentHooks();\n\n      // Element was stored at 0 in data and directive was stored at 0 in directives\n      // in renderComponent()\n      setHostBindings();\n      componentRefresh(HEADER_OFFSET, false);\n    }\n  } finally {\n    if (rendererFactory.end) {\n      rendererFactory.end();\n    }\n    leaveView(oldView);\n  }\n}\n\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n */\nfunction getRenderFlags(view: LViewData): RenderFlags {\n  return view[FLAGS] & LViewFlags.CreationMode ? RenderFlags.Create | RenderFlags.Update :\n                                                 RenderFlags.Update;\n}\n\n//////////////////////////\n//// Namespace\n//////////////////////////\n\nlet _currentNamespace: string|null = null;\n\nexport function namespaceSVG() {\n  _currentNamespace = 'http://www.w3.org/2000/svg/';\n}\n\nexport function namespaceMathML() {\n  _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\n\nexport function namespaceHTML() {\n  _currentNamespace = null;\n}\n\n//////////////////////////\n//// Element\n//////////////////////////\n\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n */\nexport function element(\n    index: number, name: string, attrs?: TAttributes | null, localRefs?: string[] | null): void {\n  elementStart(index, name, attrs, localRefs);\n  elementEnd();\n}\n\n/**\n * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n * The instruction must later be followed by `elementContainerEnd()` call.\n *\n * @param index Index of the element in the LViewData array\n * @param attrs Set of attributes to be used when matching directives.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n * matching purposes and setting initial inputs of directives.\n */\nexport function elementContainerStart(\n    index: number, attrs?: TAttributes | null, localRefs?: string[] | null): void {\n  ngDevMode && assertEqual(\n                   viewData[BINDING_INDEX], tView.bindingStartIndex,\n                   'element containers should be created before any bindings');\n\n  ngDevMode && ngDevMode.rendererCreateComment++;\n  const native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n\n  ngDevMode && assertDataInRange(index - 1);\n  const tNode = createNodeAtIndex(index, TNodeType.ElementContainer, native, null, attrs || null);\n\n  appendChild(native, tNode, viewData);\n  createDirectivesAndLocals(localRefs);\n}\n\n/** Mark the end of the <ng-container>. */\nexport function elementContainerEnd(): void {\n  if (isParent) {\n    isParent = false;\n  } else {\n    ngDevMode && assertHasParent();\n    previousOrParentTNode = previousOrParentTNode.parent !;\n  }\n\n  ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.ElementContainer);\n  currentQueries &&\n      (currentQueries = currentQueries.addNode(previousOrParentTNode as TElementContainerNode));\n\n  queueLifecycleHooks(previousOrParentTNode.flags, tView);\n}\n\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LViewData array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nexport function elementStart(\n    index: number, name: string, attrs?: TAttributes | null, localRefs?: string[] | null): void {\n  ngDevMode && assertEqual(\n                   viewData[BINDING_INDEX], tView.bindingStartIndex,\n                   'elements should be created before any bindings ');\n\n  ngDevMode && ngDevMode.rendererCreateElement++;\n\n  const native = elementCreate(name);\n\n  ngDevMode && assertDataInRange(index - 1);\n\n  const tNode = createNodeAtIndex(index, TNodeType.Element, native !, name, attrs || null);\n\n  if (attrs) {\n    setUpAttributes(native, attrs);\n  }\n\n  appendChild(native, tNode, viewData);\n  createDirectivesAndLocals(localRefs);\n\n  // any immediate children of a component or template container must be pre-emptively\n  // monkey-patched with the component view data so that the element can be inspected\n  // later on using any element discovery utility methods (see `element_discovery.ts`)\n  if (elementDepthCount === 0) {\n    attachPatchData(native, viewData);\n  }\n  elementDepthCount++;\n}\n\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param name the tag name\n * @param overriddenRenderer Optional A renderer to override the default one\n * @returns the element created\n */\nexport function elementCreate(name: string, overriddenRenderer?: Renderer3): RElement {\n  let native: RElement;\n  const rendererToUse = overriddenRenderer || renderer;\n\n  if (isProceduralRenderer(rendererToUse)) {\n    native = rendererToUse.createElement(name, _currentNamespace);\n  } else {\n    if (_currentNamespace === null) {\n      native = rendererToUse.createElement(name);\n    } else {\n      native = rendererToUse.createElementNS(_currentNamespace, name);\n    }\n  }\n  return native;\n}\n\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the node in question\n * @param localRefExtractor mapping function that extracts local ref value from TNode\n */\nfunction createDirectivesAndLocals(\n    localRefs: string[] | null | undefined,\n    localRefExtractor: LocalRefExtractor = getNativeByTNode) {\n  if (!bindingsEnabled) return;\n  if (firstTemplatePass) {\n    ngDevMode && ngDevMode.firstTemplatePass++;\n    cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n  } else {\n    instantiateDirectivesDirectly();\n  }\n  saveResolvedLocalsInData(localRefExtractor);\n}\n\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n */\nfunction cacheMatchingDirectivesForNode(\n    tNode: TNode, tView: TView, localRefs: string[] | null): void {\n  // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n  const exportsMap: ({[key: string]: number} | null) = localRefs ? {'': -1} : null;\n  const matches = tView.currentMatches = findDirectiveMatches(tNode);\n  generateExpandoBlock(tNode, matches);\n  let totalHostVars = 0;\n  if (matches) {\n    for (let i = 0; i < matches.length; i += 2) {\n      const def = matches[i] as DirectiveDef<any>;\n      const valueIndex = i + 1;\n      resolveDirective(def, valueIndex, matches);\n      totalHostVars += def.hostVars;\n      saveNameToExportMap(matches[valueIndex] as number, def, exportsMap);\n    }\n  }\n  if (exportsMap) cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n  prefillHostVars(totalHostVars);\n}\n\n/**\n * Generates a new block in TView.expandoInstructions for this node.\n *\n * Each expando block starts with the element index (turned negative so we can distinguish\n * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n */\nfunction generateExpandoBlock(tNode: TNode, matches: CurrentMatchesList | null): void {\n  const directiveCount = matches ? matches.length / 2 : 0;\n  const elementIndex = -(tNode.index - HEADER_OFFSET);\n  if (directiveCount > 0) {\n    (tView.expandoInstructions || (tView.expandoInstructions = [\n     ])).push(elementIndex, directiveCount);\n  }\n}\n\n/**\n * On the first template pass, we need to reserve space for host binding values\n * after directives are matched (so all directives are saved, then bindings).\n * Because we are updating the blueprint, we only need to do this once.\n */\nexport function prefillHostVars(totalHostVars: number): void {\n  for (let i = 0; i < totalHostVars; i++) {\n    viewData.push(NO_CHANGE);\n    tView.blueprint.push(NO_CHANGE);\n    tView.data.push(null);\n  }\n}\n\n/** Matches the current node against all available selectors. */\nfunction findDirectiveMatches(tNode: TNode): CurrentMatchesList|null {\n  const registry = tView.directiveRegistry;\n  let matches: any[]|null = null;\n  if (registry) {\n    for (let i = 0; i < registry.length; i++) {\n      const def = registry[i];\n      if (isNodeMatchingSelectorList(tNode, def.selectors !)) {\n        matches || (matches = []);\n        if (def.diPublic) def.diPublic(def);\n\n        if ((def as ComponentDef<any>).template) {\n          if (tNode.flags & TNodeFlags.isComponent) throwMultipleComponentError(tNode);\n          addComponentLogic(def as ComponentDef<any>);\n          // The component is always stored first with directives after.\n          matches.unshift(def, null);\n        } else {\n          matches.push(def, null);\n        }\n      }\n    }\n  }\n  return matches as CurrentMatchesList;\n}\n\nexport function resolveDirective(\n    def: DirectiveDef<any>, valueIndex: number, matches: CurrentMatchesList): any {\n  if (matches[valueIndex] === null) {\n    matches[valueIndex] = CIRCULAR;\n    const instance = def.factory();\n    return directiveCreate(matches[valueIndex] = viewData.length, instance, def);\n  } else if (matches[valueIndex] === CIRCULAR) {\n    // If we revisit this directive before it's resolved, we know it's circular\n    throwCyclicDependencyError(def.type);\n  }\n  return null;\n}\n\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(): void {\n  if (firstTemplatePass) {\n    (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n  }\n}\n\n/** Stores index of directive and host element so it will be queued for binding refresh during CD.\n */\nexport function queueHostBindingForCheck(\n    dirIndex: number, def: DirectiveDef<any>| ComponentDef<any>): void {\n  ngDevMode &&\n      assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n  tView.expandoInstructions !.push(def.hostBindings !, def.hostVars);\n}\n\n/**\n * This function instantiates the given directives.\n */\nfunction instantiateDirectivesDirectly() {\n  ngDevMode && assertEqual(\n                   firstTemplatePass, false,\n                   `Directives should only be instantiated directly after first template pass`);\n  const count = previousOrParentTNode.flags & TNodeFlags.DirectiveCountMask;\n\n  if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n    currentQueries = currentQueries.clone();\n  }\n\n  if (count > 0) {\n    const start = previousOrParentTNode.flags >> TNodeFlags.DirectiveStartingIndexShift;\n    const end = start + count;\n\n    for (let i = start; i < end; i++) {\n      const def = tView.data[i] as DirectiveDef<any>| ComponentDef<any>;\n\n      // Component view must be set on node before the factory is created so\n      // ChangeDetectorRefs have a way to store component view on creation.\n      if ((def as ComponentDef<any>).template) {\n        addComponentLogic(def as ComponentDef<any>);\n      }\n      directiveCreate(i, def.factory(), def);\n    }\n  }\n}\n\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(\n    tNode: TNode, localRefs: string[] | null, exportsMap: {[key: string]: number}): void {\n  if (localRefs) {\n    const localNames: (string | number)[] = tNode.localNames = [];\n\n    // Local names must be stored in tNode in the same order that localRefs are defined\n    // in the template to ensure the data is loaded in the same slots as their refs\n    // in the template (for template queries).\n    for (let i = 0; i < localRefs.length; i += 2) {\n      const index = exportsMap[localRefs[i + 1]];\n      if (index == null) throw new Error(`Export of name '${localRefs[i + 1]}' not found!`);\n      localNames.push(localRefs[i], index);\n    }\n  }\n}\n\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(\n    index: number, def: DirectiveDef<any>| ComponentDef<any>,\n    exportsMap: {[key: string]: number} | null) {\n  if (exportsMap) {\n    if (def.exportAs) exportsMap[def.exportAs] = index;\n    if ((def as ComponentDef<any>).template) exportsMap[''] = index;\n  }\n}\n\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LViewData in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData(localRefExtractor: LocalRefExtractor): void {\n  const localNames = previousOrParentTNode.localNames;\n  const tNode = previousOrParentTNode as TElementNode | TContainerNode | TElementContainerNode;\n  if (localNames) {\n    let localIndex = previousOrParentTNode.index + 1;\n    for (let i = 0; i < localNames.length; i += 2) {\n      const index = localNames[i + 1] as number;\n      const value = index === -1 ? localRefExtractor(tNode, viewData) : viewData[index];\n      viewData[localIndex++] = value;\n    }\n  }\n}\n\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param templateFn The template from which to get static data\n * @param consts The number of nodes, local refs, and pipes in this view\n * @param vars The number of bindings and pure function bindings in this view\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nexport function getOrCreateTView(\n    templateFn: ComponentTemplate<any>, consts: number, vars: number,\n    directives: DirectiveDefListOrFactory | null, pipes: PipeDefListOrFactory | null,\n    viewQuery: ComponentQuery<any>| null): TView {\n  // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n  // 1. It is a megamorphic call on each invocation.\n  // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n  //    outer template invocation, which means that no such property will exist\n  // Correct solution is to only put `ngPrivateData` on the Component template\n  // and not on embedded templates.\n\n  return templateFn.ngPrivateData ||\n      (templateFn.ngPrivateData =\n           createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery) as never);\n}\n\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param templateFn Template function\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nexport function createTView(\n    viewIndex: number, templateFn: ComponentTemplate<any>| null, consts: number, vars: number,\n    directives: DirectiveDefListOrFactory | null, pipes: PipeDefListOrFactory | null,\n    viewQuery: ComponentQuery<any>| null): TView {\n  ngDevMode && ngDevMode.tView++;\n  const bindingStartIndex = HEADER_OFFSET + consts;\n  // This length does not yet contain host bindings from child directives because at this point,\n  // we don't know which directives are active on this template. As soon as a directive is matched\n  // that has a host binding, we will update the blueprint with that def's hostVars count.\n  const initialViewLength = bindingStartIndex + vars;\n  const blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n  return blueprint[TVIEW] = {\n    id: viewIndex,\n    blueprint: blueprint,\n    template: templateFn,\n    viewQuery: viewQuery,\n    node: null !,\n    data: blueprint.slice(),  // Fill in to match HEADER_OFFSET in LViewData\n    childIndex: -1,           // Children set in addToViewTree(), if any\n    bindingStartIndex: bindingStartIndex,\n    expandoStartIndex: initialViewLength,\n    expandoInstructions: null,\n    firstTemplatePass: true,\n    initHooks: null,\n    checkHooks: null,\n    contentHooks: null,\n    contentCheckHooks: null,\n    viewHooks: null,\n    viewCheckHooks: null,\n    destroyHooks: null,\n    pipeDestroyHooks: null,\n    cleanup: null,\n    contentQueries: null,\n    components: null,\n    directiveRegistry: typeof directives === 'function' ? directives() : directives,\n    pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n    currentMatches: null,\n    firstChild: null,\n  };\n}\n\nfunction createViewBlueprint(bindingStartIndex: number, initialViewLength: number): LViewData {\n  const blueprint = new Array(initialViewLength)\n                        .fill(null, 0, bindingStartIndex)\n                        .fill(NO_CHANGE, bindingStartIndex) as LViewData;\n  blueprint[CONTAINER_INDEX] = -1;\n  blueprint[BINDING_INDEX] = bindingStartIndex;\n  return blueprint;\n}\n\nfunction setUpAttributes(native: RElement, attrs: TAttributes): void {\n  const isProc = isProceduralRenderer(renderer);\n  let i = 0;\n\n  while (i < attrs.length) {\n    const attrName = attrs[i];\n    if (attrName === AttributeMarker.SelectOnly) break;\n    if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n      i += 2;\n    } else {\n      ngDevMode && ngDevMode.rendererSetAttribute++;\n      if (attrName === AttributeMarker.NamespaceURI) {\n        // Namespaced attributes\n        const namespaceURI = attrs[i + 1] as string;\n        const attrName = attrs[i + 2] as string;\n        const attrVal = attrs[i + 3] as string;\n        isProc ?\n            (renderer as ProceduralRenderer3)\n                .setAttribute(native, attrName, attrVal, namespaceURI) :\n            native.setAttributeNS(namespaceURI, attrName, attrVal);\n        i += 4;\n      } else {\n        // Standard attributes\n        const attrVal = attrs[i + 1];\n        isProc ?\n            (renderer as ProceduralRenderer3)\n                .setAttribute(native, attrName as string, attrVal as string) :\n            native.setAttribute(attrName as string, attrVal as string);\n        i += 2;\n      }\n    }\n  }\n}\n\nexport function createError(text: string, token: any) {\n  return new Error(`Renderer: ${text} [${stringify(token)}]`);\n}\n\n\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nexport function locateHostElement(\n    factory: RendererFactory3, elementOrSelector: RElement | string): RElement|null {\n  ngDevMode && assertDataInRange(-1);\n  rendererFactory = factory;\n  const defaultRenderer = factory.createRenderer(null, null);\n  const rNode = typeof elementOrSelector === 'string' ?\n      (isProceduralRenderer(defaultRenderer) ?\n           defaultRenderer.selectRootElement(elementOrSelector) :\n           defaultRenderer.querySelector(elementOrSelector)) :\n      elementOrSelector;\n  if (ngDevMode && !rNode) {\n    if (typeof elementOrSelector === 'string') {\n      throw createError('Host node with selector not found:', elementOrSelector);\n    } else {\n      throw createError('Host node is required:', elementOrSelector);\n    }\n  }\n  return rNode;\n}\n\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nexport function listener(\n    eventName: string, listenerFn: (e?: any) => any, useCapture = false): void {\n  const tNode = previousOrParentTNode;\n  ngDevMode && assertNodeOfPossibleTypes(\n                   tNode, TNodeType.Element, TNodeType.Container, TNodeType.ElementContainer);\n\n  // add native event listener - applicable to elements only\n  if (tNode.type === TNodeType.Element) {\n    const native = getNativeByTNode(previousOrParentTNode, viewData) as RElement;\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n      const cleanupFn = renderer.listen(native, eventName, listenerFn);\n      storeCleanupFn(viewData, cleanupFn);\n    } else {\n      const wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n      native.addEventListener(eventName, wrappedListener, useCapture);\n      const cleanupInstances = getCleanup(viewData);\n      cleanupInstances.push(wrappedListener);\n      if (firstTemplatePass) {\n        getTViewCleanup(viewData).push(\n            eventName, tNode.index, cleanupInstances !.length - 1, useCapture);\n      }\n    }\n  }\n\n  // subscribe to directive outputs\n  if (tNode.outputs === undefined) {\n    // if we create TNode here, inputs must be undefined so we know they still need to be\n    // checked\n    tNode.outputs = generatePropertyAliases(tNode.flags, BindingDirection.Output);\n  }\n\n  const outputs = tNode.outputs;\n  let outputData: PropertyAliasValue|undefined;\n  if (outputs && (outputData = outputs[eventName])) {\n    createOutput(outputData, listenerFn);\n  }\n}\n\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n */\nfunction createOutput(outputs: PropertyAliasValue, listener: Function): void {\n  for (let i = 0; i < outputs.length; i += 2) {\n    ngDevMode && assertDataInRange(outputs[i] as number, viewData);\n    const subscription = viewData[outputs[i] as number][outputs[i + 1]].subscribe(listener);\n    storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n  }\n}\n\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nexport function storeCleanupWithContext(\n    view: LViewData | null, context: any, cleanupFn: Function): void {\n  if (!view) view = viewData;\n  getCleanup(view).push(context);\n\n  if (view[TVIEW].firstTemplatePass) {\n    getTViewCleanup(view).push(cleanupFn, view[CLEANUP] !.length - 1);\n  }\n}\n\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nexport function storeCleanupFn(view: LViewData, cleanupFn: Function): void {\n  getCleanup(view).push(cleanupFn);\n\n  if (view[TVIEW].firstTemplatePass) {\n    getTViewCleanup(view).push(view[CLEANUP] !.length - 1, null);\n  }\n}\n\n/** Mark the end of the element. */\nexport function elementEnd(): void {\n  if (isParent) {\n    isParent = false;\n  } else {\n    ngDevMode && assertHasParent();\n    previousOrParentTNode = previousOrParentTNode.parent !;\n  }\n  ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.Element);\n  currentQueries &&\n      (currentQueries = currentQueries.addNode(previousOrParentTNode as TElementNode));\n\n  queueLifecycleHooks(previousOrParentTNode.flags, tView);\n  elementDepthCount--;\n}\n\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nexport function elementAttribute(\n    index: number, name: string, value: any, sanitizer?: SanitizerFn): void {\n  if (value !== NO_CHANGE) {\n    const element = getNativeByIndex(index, viewData);\n    if (value == null) {\n      ngDevMode && ngDevMode.rendererRemoveAttribute++;\n      isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name) :\n                                       element.removeAttribute(name);\n    } else {\n      ngDevMode && ngDevMode.rendererSetAttribute++;\n      const strValue = sanitizer == null ? stringify(value) : sanitizer(value);\n      isProceduralRenderer(renderer) ? renderer.setAttribute(element, name, strValue) :\n                                       element.setAttribute(name, strValue);\n    }\n  }\n}\n\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n */\n\nexport function elementProperty<T>(\n    index: number, propName: string, value: T | NO_CHANGE, sanitizer?: SanitizerFn): void {\n  if (value === NO_CHANGE) return;\n  const element = getNativeByIndex(index, viewData) as RElement | RComment;\n  const tNode = getTNode(index, viewData);\n  // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n  // yet been checked\n  if (tNode && tNode.inputs === undefined) {\n    // mark inputs as checked\n    tNode.inputs = generatePropertyAliases(tNode.flags, BindingDirection.Input);\n  }\n\n  const inputData = tNode && tNode.inputs;\n  let dataValue: PropertyAliasValue|undefined;\n  if (inputData && (dataValue = inputData[propName])) {\n    setInputsForProperty(dataValue, value);\n    if (isComponent(tNode)) markDirtyIfOnPush(index + HEADER_OFFSET);\n  } else if (tNode.type === TNodeType.Element) {\n    // It is assumed that the sanitizer is only added when the compiler determines that the property\n    // is risky, so sanitization can be done without further checks.\n    value = sanitizer != null ? (sanitizer(value) as any) : value;\n    ngDevMode && ngDevMode.rendererSetProperty++;\n    isProceduralRenderer(renderer) ?\n        renderer.setProperty(element as RElement, propName, value) :\n        ((element as RElement).setProperty ? (element as any).setProperty(propName, value) :\n                                             (element as any)[propName] = value);\n  }\n}\n\n/**\n * Enables directive matching on elements.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- disabledBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- enableBindings() -->\n * </div>\n * ```\n */\nexport function enableBindings(): void {\n  bindingsEnabled = true;\n}\n\n/**\n * Disables directive matching on element.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- disabledBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- enableBindings() -->\n * </div>\n * ```\n */\nexport function disableBindings(): void {\n  bindingsEnabled = false;\n}\n\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nexport function createTNode(\n    type: TNodeType, adjustedIndex: number, tagName: string | null, attrs: TAttributes | null,\n    tViews: TView[] | null): TNode {\n  ngDevMode && ngDevMode.tNode++;\n  const parent =\n      isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n\n  // Parents cannot cross component boundaries because components will be used in multiple places,\n  // so it's only set if the view is the same.\n  const parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n  const tParent = parentInSameView ? parent as TElementNode | TContainerNode : null;\n\n  return {\n    type: type,\n    index: adjustedIndex,\n    injectorIndex: tParent ? tParent.injectorIndex : -1,\n    flags: 0,\n    tagName: tagName,\n    attrs: attrs,\n    localNames: null,\n    initialInputs: undefined,\n    inputs: undefined,\n    outputs: undefined,\n    tViews: tViews,\n    next: null,\n    child: null,\n    parent: tParent,\n    detached: null,\n    stylingTemplate: null,\n    projection: null\n  };\n}\n\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(inputs: PropertyAliasValue, value: any): void {\n  for (let i = 0; i < inputs.length; i += 2) {\n    ngDevMode && assertDataInRange(inputs[i] as number, viewData);\n    viewData[inputs[i] as number][inputs[i + 1]] = value;\n  }\n}\n\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param number tNodeFlags node flags\n * @param Direction direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(\n    tNodeFlags: TNodeFlags, direction: BindingDirection): PropertyAliases|null {\n  const count = tNodeFlags & TNodeFlags.DirectiveCountMask;\n  let propStore: PropertyAliases|null = null;\n\n  if (count > 0) {\n    const start = tNodeFlags >> TNodeFlags.DirectiveStartingIndexShift;\n    const end = start + count;\n    const isInput = direction === BindingDirection.Input;\n    const defs = tView.data;\n\n    for (let i = start; i < end; i++) {\n      const directiveDef = defs[i] as DirectiveDef<any>;\n      const propertyAliasMap: {[publicName: string]: string} =\n          isInput ? directiveDef.inputs : directiveDef.outputs;\n      for (let publicName in propertyAliasMap) {\n        if (propertyAliasMap.hasOwnProperty(publicName)) {\n          propStore = propStore || {};\n          const internalName = propertyAliasMap[publicName];\n          const hasProperty = propStore.hasOwnProperty(publicName);\n          hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n        }\n      }\n    }\n  }\n  return propStore;\n}\n\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param index The index of the element to update in the data array\n * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value A value indicating if a given class should be added or removed.\n */\nexport function elementClassProp(\n    index: number, stylingIndex: number, value: boolean | PlayerFactory): void {\n  const val =\n      (value instanceof BoundPlayerFactory) ? (value as BoundPlayerFactory<boolean>) : (!!value);\n  updateElementClassProp(getStylingContext(index, viewData), stylingIndex, val);\n}\n\n/**\n * Assign any inline style values to the element during creation mode.\n *\n * This instruction is meant to be called during creation mode to apply all styling\n * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n * value is allocated for the styling details for its corresponding element (the element\n * index is the previous index value from this one).\n *\n * (Note this function calls `elementStylingApply` immediately when called.)\n *\n *\n * @param index Index value which will be allocated to store styling data for the element.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n *   Each individual style will be used on the element as long as it is not overridden\n *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n *   bindings. If a class binding changes its value to a falsy value then the matching initial\n *   class value that are passed in here will be applied to the element (if matched).\n * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n *   Each individual style will be used on the element as long as it is not overridden\n *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n *   bindings. If a style binding changes its value to null then the initial styling\n *   values that are passed in here will be applied to the element (if matched).\n * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n *   to sanitize the any CSS property values that are applied to the element (during rendering).\n */\nexport function elementStyling(\n    classDeclarations?: (string | boolean | InitialStylingFlags)[] | null,\n    styleDeclarations?: (string | boolean | InitialStylingFlags)[] | null,\n    styleSanitizer?: StyleSanitizeFn | null): void {\n  const tNode = previousOrParentTNode;\n  if (!tNode.stylingTemplate) {\n    // initialize the styling template.\n    tNode.stylingTemplate =\n        createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n  }\n  if (styleDeclarations && styleDeclarations.length ||\n      classDeclarations && classDeclarations.length) {\n    elementStylingApply(tNode.index - HEADER_OFFSET);\n  }\n}\n\n\n/**\n * Apply all styling values to the element which have been queued by any styling instructions.\n *\n * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n * have been issued against the element. This function will also determine if any styles have\n * changed and will then skip the operation if there is nothing new to render.\n *\n * Once called then all queued styles will be flushed.\n *\n * @param index Index of the element's styling storage that will be rendered.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n */\nexport function elementStylingApply(index: number): void {\n  const totalPlayersQueued =\n      renderStyleAndClassBindings(getStylingContext(index, viewData), renderer, viewData);\n  if (totalPlayersQueued > 0) {\n    const rootContext = getRootContext(viewData);\n    scheduleTick(rootContext, RootContextFlags.FlushPlayers);\n  }\n}\n\n/**\n * Queue a given style to be rendered on an Element.\n *\n * If the style value is `null` then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `elementStyle` or any styles that are present\n * from when the element was created (with `elementStyling`).\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @param index Index of the element's styling storage to change in the data array.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n * @param value New value to write (null to remove).\n * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *        Note that when a suffix is provided then the underlying sanitizer will\n *        be ignored.\n */\nexport function elementStyleProp(\n    index: number, styleIndex: number, value: string | number | String | PlayerFactory | null,\n    suffix?: string): void {\n  let valueToAdd: string|null = null;\n  if (value) {\n    if (suffix) {\n      // when a suffix is applied then it will bypass\n      // sanitization entirely (b/c a new string is created)\n      valueToAdd = stringify(value) + suffix;\n    } else {\n      // sanitization happens by dealing with a String value\n      // this means that the string value will be passed through\n      // into the style rendering later (which is where the value\n      // will be sanitized before it is applied)\n      valueToAdd = value as any as string;\n    }\n  }\n  updateElementStyleProp(getStylingContext(index, viewData), styleIndex, valueToAdd);\n}\n\n/**\n * Queue a key/value map of styles to be rendered on an Element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n * If any styles are set to `null` then they will be removed from the element (unless the same\n * style properties have been assigned to the element during creation using `elementStyling`).\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @param index Index of the element's styling storage to change in the data array.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param classes A key/value style map of CSS classes that will be added to the given element.\n *        Any missing classes (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's list of CSS classes.\n * @param styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n */\nexport function elementStylingMap<T>(\n    index: number, classes: {[key: string]: any} | string | null,\n    styles?: {[styleName: string]: any} | null): void {\n  updateStylingMap(getStylingContext(index, viewData), classes, styles);\n}\n\n//////////////////////////\n//// Text\n//////////////////////////\n\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Value to write. This value will be stringified.\n */\nexport function text(index: number, value?: any): void {\n  ngDevMode && assertEqual(\n                   viewData[BINDING_INDEX], tView.bindingStartIndex,\n                   'text nodes should be created before any bindings');\n  ngDevMode && ngDevMode.rendererCreateTextNode++;\n  const textNative = createTextNode(value, renderer);\n  const tNode = createNodeAtIndex(index, TNodeType.Element, textNative, null, null);\n\n  // Text nodes are self closing.\n  isParent = false;\n  appendChild(textNative, tNode, viewData);\n}\n\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nexport function textBinding<T>(index: number, value: T | NO_CHANGE): void {\n  if (value !== NO_CHANGE) {\n    ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n    const element = getNativeByIndex(index, viewData) as any as RText;\n    ngDevMode && assertDefined(element, 'native element should exist');\n    ngDevMode && ngDevMode.rendererSetText++;\n    isProceduralRenderer(renderer) ? renderer.setValue(element, stringify(value)) :\n                                     element.textContent = stringify(value);\n  }\n}\n\n//////////////////////////\n//// Directive\n//////////////////////////\n\n/**\n * Create a directive and their associated content queries.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @param directive The directive instance.\n * @param directiveDef DirectiveDef object which contains information about the template.\n */\nexport function directiveCreate<T>(\n    directiveDefIdx: number, directive: T, directiveDef: DirectiveDef<T>| ComponentDef<T>): T {\n  const native = getNativeByTNode(previousOrParentTNode, viewData);\n  const instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, native);\n\n  if ((directiveDef as ComponentDef<T>).template) {\n    const componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n    componentView[CONTEXT] = directive;\n  }\n\n  if (firstTemplatePass) {\n    // Init hooks are queued now so ngOnInit is called in host components before\n    // any projected components.\n    queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n  }\n\n  ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n  if (previousOrParentTNode && previousOrParentTNode.attrs) {\n    setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n  }\n\n  if (directiveDef.contentQueries) {\n    directiveDef.contentQueries();\n  }\n\n  return instance;\n}\n\nfunction addComponentLogic<T>(def: ComponentDef<T>): void {\n  const native = getNativeByTNode(previousOrParentTNode, viewData);\n\n  const tView = getOrCreateTView(\n      def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n\n  // Only component views should be added to the view tree directly. Embedded views are\n  // accessed through their containers because they may be removed / re-added later.\n  const componentView = addToViewTree(\n      viewData, previousOrParentTNode.index as number,\n      createLViewData(\n          rendererFactory.createRenderer(native as RElement, def), tView, null,\n          def.onPush ? LViewFlags.Dirty : LViewFlags.CheckAlways, getCurrentSanitizer()));\n\n  componentView[HOST_NODE] = previousOrParentTNode as TElementNode;\n\n  // Component view will always be created before any injected LContainers,\n  // so this is a regular element, wrap it with the component view\n  componentView[HOST] = viewData[previousOrParentTNode.index];\n  viewData[previousOrParentTNode.index] = componentView;\n\n  if (firstTemplatePass) {\n    queueComponentIndexForCheck();\n    previousOrParentTNode.flags =\n        viewData.length << TNodeFlags.DirectiveStartingIndexShift | TNodeFlags.isComponent;\n  }\n}\n\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n */\nexport function baseDirectiveCreate<T>(\n    index: number, directive: T, directiveDef: DirectiveDef<T>| ComponentDef<T>,\n    native: RNode | null): T {\n  ngDevMode && assertEqual(\n                   viewData[BINDING_INDEX], tView.bindingStartIndex,\n                   'directives should be created before any bindings');\n  ngDevMode && assertPreviousIsParent();\n\n  attachPatchData(directive, viewData);\n  if (native) {\n    attachPatchData(native, viewData);\n  }\n\n  viewData[index] = directive;\n\n  if (firstTemplatePass) {\n    const flags = previousOrParentTNode.flags;\n    if (flags === 0) {\n      // When the first directive is created:\n      // - save the index,\n      // - set the number of directives to 1\n      previousOrParentTNode.flags =\n          index << TNodeFlags.DirectiveStartingIndexShift | flags & TNodeFlags.isComponent | 1;\n    } else {\n      // Only need to bump the size when subsequent directives are created\n      ngDevMode && assertNotEqual(\n                       flags & TNodeFlags.DirectiveCountMask, TNodeFlags.DirectiveCountMask,\n                       'Reached the max number of directives');\n      previousOrParentTNode.flags++;\n    }\n\n    tView.data.push(directiveDef);\n    tView.blueprint.push(null);\n    if (directiveDef.hostBindings) queueHostBindingForCheck(index, directiveDef);\n  } else {\n    const diPublic = directiveDef !.diPublic;\n    if (diPublic) diPublic(directiveDef !);\n  }\n\n  if (directiveDef !.attributes != null && previousOrParentTNode.type == TNodeType.Element) {\n    setUpAttributes(native as RElement, directiveDef !.attributes as string[]);\n  }\n\n  return directive;\n}\n\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs<T>(\n    directiveIndex: number, instance: T, inputs: {[P in keyof T]: string;}, tNode: TNode): void {\n  let initialInputData = tNode.initialInputs as InitialInputData | undefined;\n  if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n    initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n  }\n\n  const initialInputs: InitialInputs|null = initialInputData[directiveIndex];\n  if (initialInputs) {\n    for (let i = 0; i < initialInputs.length; i += 2) {\n      (instance as any)[initialInputs[i]] = initialInputs[i + 1];\n    }\n  }\n}\n\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(\n    directiveIndex: number, inputs: {[key: string]: string}, tNode: TNode): InitialInputData {\n  const initialInputData: InitialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n  initialInputData[directiveIndex] = null;\n\n  const attrs = tNode.attrs !;\n  let i = 0;\n  while (i < attrs.length) {\n    const attrName = attrs[i];\n    if (attrName === AttributeMarker.SelectOnly) break;\n    if (attrName === AttributeMarker.NamespaceURI) {\n      // We do not allow inputs on namespaced attributes.\n      i += 4;\n      continue;\n    }\n    const minifiedInputName = inputs[attrName];\n    const attrValue = attrs[i + 1];\n\n    if (minifiedInputName !== undefined) {\n      const inputsToStore: InitialInputs =\n          initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n      inputsToStore.push(minifiedInputName, attrValue as string);\n    }\n\n    i += 2;\n  }\n  return initialInputData;\n}\n\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param hostNative The host element for the LContainer\n * @param hostTNode The host TNode for the LContainer\n * @param currentView The parent view of the LContainer\n * @param native The native comment element\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nexport function createLContainer(\n    hostNative: RElement | RComment,\n    hostTNode: TElementNode | TContainerNode | TElementContainerNode, currentView: LViewData,\n    native: RComment, isForViewContainerRef?: boolean): LContainer {\n  return [\n    isForViewContainerRef ? -1 : 0,          // active index\n    [],                                      // views\n    currentView,                             // parent\n    null,                                    // next\n    null,                                    // queries\n    hostNative,                              // host native\n    native,                                  // native\n    getRenderParent(hostTNode, currentView)  // renderParent\n  ];\n}\n\n/**\n * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n *\n * <ng-template #foo>\n *    <div></div>\n * </ng-template>\n *\n * @param index The index of the container in the data array\n * @param templateFn Inline template\n * @param consts The number of nodes, local refs, and pipes for this template\n * @param vars The number of bindings for this template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n * @param localRefExtractor A function which extracts local-refs values from the template.\n *        Defaults to the current element associated with the local-ref.\n */\nexport function template(\n    index: number, templateFn: ComponentTemplate<any>| null, consts: number, vars: number,\n    tagName?: string | null, attrs?: TAttributes | null, localRefs?: string[] | null,\n    localRefExtractor?: LocalRefExtractor) {\n  // TODO: consider a separate node type for templates\n  const tNode = containerInternal(index, tagName || null, attrs || null);\n\n  if (firstTemplatePass) {\n    tNode.tViews = createTView(\n        -1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n  }\n\n  createDirectivesAndLocals(localRefs, localRefExtractor);\n  currentQueries &&\n      (currentQueries = currentQueries.addNode(previousOrParentTNode as TContainerNode));\n  queueLifecycleHooks(tNode.flags, tView);\n  isParent = false;\n}\n\n/**\n * Creates an LContainer for inline views, e.g.\n *\n * % if (showing) {\n *   <div></div>\n * % }\n *\n * @param index The index of the container in the data array\n */\nexport function container(index: number): void {\n  const tNode = containerInternal(index, null, null);\n  firstTemplatePass && (tNode.tViews = []);\n  isParent = false;\n}\n\nfunction containerInternal(\n    index: number, tagName: string | null, attrs: TAttributes | null): TNode {\n  ngDevMode && assertEqual(\n                   viewData[BINDING_INDEX], tView.bindingStartIndex,\n                   'container nodes should be created before any bindings');\n\n  const adjustedIndex = index + HEADER_OFFSET;\n  const comment = renderer.createComment(ngDevMode ? 'container' : '');\n  ngDevMode && ngDevMode.rendererCreateComment++;\n  const tNode = createNodeAtIndex(index, TNodeType.Container, comment, tagName, attrs);\n  const lContainer = viewData[adjustedIndex] =\n      createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n\n  appendChild(comment, tNode, viewData);\n\n  // Containers are added to the current view tree instead of their embedded views\n  // because views can be removed and re-inserted.\n  addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n\n  if (currentQueries) {\n    // prepare place for matching nodes from views inserted into a given container\n    lContainer[QUERIES] = currentQueries.container();\n  }\n\n  ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.Container);\n  return tNode;\n}\n\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nexport function containerRefreshStart(index: number): void {\n  previousOrParentTNode = loadInternal(index, tView.data) as TNode;\n\n  ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.Container);\n  isParent = true;\n\n  viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n\n  if (!checkNoChangesMode) {\n    // We need to execute init hooks here so ngOnInit hooks are called in top level views\n    // before they are called in embedded views (for backwards compatibility).\n    executeInitHooks(viewData, tView, creationMode);\n  }\n}\n\n/**\n * Marks the end of the LContainer.\n *\n * Marking the end of LContainer is the time when to child views get inserted or removed.\n */\nexport function containerRefreshEnd(): void {\n  if (isParent) {\n    isParent = false;\n  } else {\n    ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.View);\n    ngDevMode && assertHasParent();\n    previousOrParentTNode = previousOrParentTNode.parent !;\n  }\n\n  ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.Container);\n\n  const lContainer = viewData[previousOrParentTNode.index];\n  const nextIndex = lContainer[ACTIVE_INDEX];\n\n  // remove extra views at the end of the container\n  while (nextIndex < lContainer[VIEWS].length) {\n    removeView(lContainer, previousOrParentTNode as TContainerNode, nextIndex);\n  }\n}\n\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n */\nfunction refreshDynamicEmbeddedViews(lViewData: LViewData) {\n  for (let current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n    // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n    // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n    // header.\n    if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n      const container = current as LContainer;\n      for (let i = 0; i < container[VIEWS].length; i++) {\n        const dynamicViewData = container[VIEWS][i];\n        // The directives and pipes are not needed here as an existing view is only being refreshed.\n        ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n        renderEmbeddedTemplate(\n            dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT] !,\n            RenderFlags.Update);\n      }\n    }\n  }\n}\n\n\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param lContainer to search for views\n * @param tContainerNode to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(\n    lContainer: LContainer, tContainerNode: TContainerNode, startIdx: number,\n    viewBlockId: number): LViewData|null {\n  const views = lContainer[VIEWS];\n  for (let i = startIdx; i < views.length; i++) {\n    const viewAtPositionId = views[i][TVIEW].id;\n    if (viewAtPositionId === viewBlockId) {\n      return views[i];\n    } else if (viewAtPositionId < viewBlockId) {\n      // found a view that should not be at this position - remove\n      removeView(lContainer, tContainerNode, i);\n    } else {\n      // found a view with id greater than the one we are searching for\n      // which means that required view doesn't exist and can't be found at\n      // later positions in the views array - stop the search here\n      break;\n    }\n  }\n  return null;\n}\n\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nexport function embeddedViewStart(viewBlockId: number, consts: number, vars: number): RenderFlags {\n  // The previous node can be a view node if we are processing an inline for loop\n  const containerTNode = previousOrParentTNode.type === TNodeType.View ?\n      previousOrParentTNode.parent ! :\n      previousOrParentTNode;\n  const lContainer = viewData[containerTNode.index] as LContainer;\n  const currentView = viewData;\n\n  ngDevMode && assertNodeType(containerTNode, TNodeType.Container);\n  let viewToRender = scanForView(\n      lContainer, containerTNode as TContainerNode, lContainer[ACTIVE_INDEX] !, viewBlockId);\n\n  if (viewToRender) {\n    isParent = true;\n    enterView(viewToRender, viewToRender[TVIEW].node);\n  } else {\n    // When we create a new LView, we always reset the state of the instructions.\n    viewToRender = createLViewData(\n        renderer,\n        getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode as TContainerNode), null,\n        LViewFlags.CheckAlways, getCurrentSanitizer());\n\n    if (lContainer[QUERIES]) {\n      viewToRender[QUERIES] = lContainer[QUERIES] !.createView();\n    }\n\n    createViewNode(viewBlockId, viewToRender);\n    enterView(viewToRender, viewToRender[TVIEW].node);\n  }\n  if (lContainer) {\n    if (creationMode) {\n      // it is a new view, insert it into collection of views for a given container\n      insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX] !, -1);\n    }\n    lContainer[ACTIVE_INDEX] !++;\n  }\n  return getRenderFlags(viewToRender);\n}\n\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param vars The number of bindings and pure function bindings in this template\n * @param container The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(\n    viewIndex: number, consts: number, vars: number, parent: TContainerNode): TView {\n  ngDevMode && assertNodeType(parent, TNodeType.Container);\n  const containerTViews = parent.tViews as TView[];\n  ngDevMode && assertDefined(containerTViews, 'TView expected');\n  ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n  if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n    containerTViews[viewIndex] = createTView(\n        viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n  }\n  return containerTViews[viewIndex];\n}\n\n/** Marks the end of an embedded view. */\nexport function embeddedViewEnd(): void {\n  const viewHost = viewData[HOST_NODE];\n  refreshDescendantViews();\n  leaveView(viewData[PARENT] !);\n  previousOrParentTNode = viewHost !;\n  isParent = false;\n}\n\n/////////////\n\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n */\nexport function componentRefresh<T>(\n    adjustedElementIndex: number, parentFirstTemplatePass: boolean): void {\n  ngDevMode && assertDataInRange(adjustedElementIndex);\n  const hostView = getComponentViewByIndex(adjustedElementIndex, viewData);\n  ngDevMode && assertNodeType(tView.data[adjustedElementIndex] as TNode, TNodeType.Element);\n\n  // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n  if (viewAttached(hostView) && hostView[FLAGS] & (LViewFlags.CheckAlways | LViewFlags.Dirty)) {\n    parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n    detectChangesInternal(hostView, hostView[CONTEXT]);\n  }\n}\n\n/**\n * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n *\n * Typically, blueprints and their view instances should always be in sync, so the loop here\n * will be skipped. However, consider this case of two components side-by-side:\n *\n * App template:\n * ```\n * <comp></comp>\n * <comp></comp>\n * ```\n *\n * The following will happen:\n * 1. App template begins processing.\n * 2. First <comp> is matched as a component and its LViewData is created.\n * 3. Second <comp> is matched as a component and its LViewData is created.\n * 4. App template completes processing, so it's time to check child templates.\n * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n * <comp> template, but its LViewData was created before this update, so it is out of sync.\n *\n * Note that embedded views inside ngFor loops will never be out of sync because these views\n * are processed as soon as they are created.\n *\n * @param componentView The view to sync\n */\nfunction syncViewWithBlueprint(componentView: LViewData) {\n  const componentTView = componentView[TVIEW];\n  for (let i = componentView.length; i < componentTView.blueprint.length; i++) {\n    componentView[i] = componentTView.blueprint[i];\n  }\n}\n\n/** Returns a boolean for whether the view is attached */\nexport function viewAttached(view: LViewData): boolean {\n  return (view[FLAGS] & LViewFlags.Attached) === LViewFlags.Attached;\n}\n\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nexport function projectionDef(selectors?: CssSelectorList[], textSelectors?: string[]): void {\n  const componentNode = findComponentView(viewData)[HOST_NODE] as TElementNode;\n\n  if (!componentNode.projection) {\n    const noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    const pData: (TNode | null)[] = componentNode.projection =\n        new Array(noOfNodeBuckets).fill(null);\n    const tails: (TNode | null)[] = pData.slice();\n\n    let componentChild: TNode|null = componentNode.child;\n\n    while (componentChild !== null) {\n      const bucketIndex =\n          selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors !) : 0;\n      const nextNode = componentChild.next;\n\n      if (tails[bucketIndex]) {\n        tails[bucketIndex] !.next = componentChild;\n      } else {\n        pData[bucketIndex] = componentChild;\n        componentChild.next = null;\n      }\n      tails[bucketIndex] = componentChild;\n\n      componentChild = nextNode;\n    }\n  }\n}\n\n/**\n * Stack used to keep track of projection nodes in projection() instruction.\n *\n * This is deliberately created outside of projection() to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n */\nconst projectionNodeStack: (LViewData | TNode)[] = [];\n\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nexport function projection(nodeIndex: number, selectorIndex: number = 0, attrs?: string[]): void {\n  const tProjectionNode =\n      createNodeAtIndex(nodeIndex, TNodeType.Projection, null, null, attrs || null);\n\n  // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n  if (tProjectionNode.projection === null) tProjectionNode.projection = selectorIndex;\n\n  // `<ng-content>` has no content\n  isParent = false;\n\n  // re-distribution of projectable nodes is stored on a component's view level\n  const componentView = findComponentView(viewData);\n  const componentNode = componentView[HOST_NODE] as TElementNode;\n  let nodeToProject = (componentNode.projection as(TNode | null)[])[selectorIndex];\n  let projectedView = componentView[PARENT] !;\n  let projectionNodeIndex = -1;\n\n  while (nodeToProject) {\n    if (nodeToProject.type === TNodeType.Projection) {\n      // This node is re-projected, so we must go up the tree to get its projected nodes.\n      const currentComponentView = findComponentView(projectedView);\n      const currentComponentHost = currentComponentView[HOST_NODE] as TElementNode;\n      const firstProjectedNode =\n          (currentComponentHost.projection as(TNode | null)[])[nodeToProject.projection as number];\n\n      if (firstProjectedNode) {\n        projectionNodeStack[++projectionNodeIndex] = nodeToProject;\n        projectionNodeStack[++projectionNodeIndex] = projectedView;\n\n        nodeToProject = firstProjectedNode;\n        projectedView = currentComponentView[PARENT] !;\n        continue;\n      }\n    } else {\n      // This flag must be set now or we won't know that this node is projected\n      // if the nodes are inserted into a container later.\n      nodeToProject.flags |= TNodeFlags.isProjected;\n      appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n    }\n\n    // If we are finished with a list of re-projected nodes, we need to get\n    // back to the root projection node that was re-projected.\n    if (nodeToProject.next === null && projectedView !== componentView[PARENT] !) {\n      projectedView = projectionNodeStack[projectionNodeIndex--] as LViewData;\n      nodeToProject = projectionNodeStack[projectionNodeIndex--] as TNode;\n    }\n    nodeToProject = nodeToProject.next;\n  }\n}\n\n/**\n * Adds LViewData or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param currentView The view where LViewData or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n * @param state The LViewData or LContainer to add to the view tree\n * @returns The state passed in\n */\nexport function addToViewTree<T extends LViewData|LContainer>(\n    currentView: LViewData, adjustedHostIndex: number, state: T): T {\n  if (currentView[TAIL]) {\n    currentView[TAIL] ![NEXT] = state;\n  } else if (firstTemplatePass) {\n    tView.childIndex = adjustedHostIndex;\n  }\n  currentView[TAIL] = state;\n  return state;\n}\n\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n\n/** If node is an OnPush component, marks its LViewData dirty. */\nexport function markDirtyIfOnPush(viewIndex: number): void {\n  const view = getComponentViewByIndex(viewIndex, viewData);\n  if (!(view[FLAGS] & LViewFlags.CheckAlways)) {\n    view[FLAGS] |= LViewFlags.Dirty;\n  }\n}\n\n/** Wraps an event listener with preventDefault behavior. */\nexport function wrapListenerWithPreventDefault(listenerFn: (e?: any) => any): EventListener {\n  return function wrapListenerIn_preventDefault(e: Event) {\n    if (listenerFn(e) === false) {\n      e.preventDefault();\n      // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n      e.returnValue = false;\n    }\n  };\n}\n\n/** Marks current view and all ancestors dirty */\nexport function markViewDirty(view: LViewData): void {\n  let currentView: LViewData = view;\n\n  while (currentView && !(currentView[FLAGS] & LViewFlags.IsRoot)) {\n    currentView[FLAGS] |= LViewFlags.Dirty;\n    currentView = currentView[PARENT] !;\n  }\n  currentView[FLAGS] |= LViewFlags.Dirty;\n  ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n\n  const rootContext = currentView[CONTEXT] as RootContext;\n  scheduleTick(rootContext, RootContextFlags.DetectChanges);\n}\n\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nexport function scheduleTick<T>(rootContext: RootContext, flags: RootContextFlags) {\n  const nothingScheduled = rootContext.flags === RootContextFlags.Empty;\n  rootContext.flags |= flags;\n\n  if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n    let res: null|((val: null) => void);\n    rootContext.clean = new Promise<null>((r) => res = r);\n    rootContext.scheduler(() => {\n      if (rootContext.flags & RootContextFlags.DetectChanges) {\n        rootContext.flags &= ~RootContextFlags.DetectChanges;\n        tickRootContext(rootContext);\n      }\n\n      if (rootContext.flags & RootContextFlags.FlushPlayers) {\n        rootContext.flags &= ~RootContextFlags.FlushPlayers;\n        const playerHandler = rootContext.playerHandler;\n        if (playerHandler) {\n          playerHandler.flushPlayers();\n        }\n      }\n\n      rootContext.clean = _CLEAN_PROMISE;\n      res !(null);\n    });\n  }\n}\n\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\nexport function tick<T>(component: T): void {\n  const rootView = getRootView(component);\n  const rootContext = rootView[CONTEXT] as RootContext;\n  tickRootContext(rootContext);\n}\n\nfunction tickRootContext(rootContext: RootContext) {\n  for (let i = 0; i < rootContext.components.length; i++) {\n    const rootComponent = rootContext.components[i];\n    renderComponentOrTemplate(readPatchedLViewData(rootComponent) !, rootComponent);\n  }\n}\n\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nexport function detectChanges<T>(component: T): void {\n  detectChangesInternal(getComponentViewByInstance(component) !, component);\n}\n\n/**\n * Synchronously perform change detection on a root view and its components.\n *\n * @param lViewData The view which the change detection should be performed on.\n */\nexport function detectChangesInRootView(lViewData: LViewData): void {\n  tickRootContext(lViewData[CONTEXT] as RootContext);\n}\n\n\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nexport function checkNoChanges<T>(component: T): void {\n  checkNoChangesMode = true;\n  try {\n    detectChanges(component);\n  } finally {\n    checkNoChangesMode = false;\n  }\n}\n\n/**\n * Checks the change detector on a root view and its components, and throws if any changes are\n * detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n *\n * @param lViewData The view which the change detection should be checked on.\n */\nexport function checkNoChangesInRootView(lViewData: LViewData): void {\n  checkNoChangesMode = true;\n  try {\n    detectChangesInRootView(lViewData);\n  } finally {\n    checkNoChangesMode = false;\n  }\n}\n\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nexport function detectChangesInternal<T>(hostView: LViewData, component: T) {\n  const hostTView = hostView[TVIEW];\n  const oldView = enterView(hostView, hostView[HOST_NODE]);\n  const templateFn = hostTView.template !;\n  const viewQuery = hostTView.viewQuery;\n\n  try {\n    namespaceHTML();\n    createViewQuery(viewQuery, hostView[FLAGS], component);\n    templateFn(getRenderFlags(hostView), component);\n    refreshDescendantViews();\n    updateViewQuery(viewQuery, component);\n  } finally {\n    leaveView(oldView);\n  }\n}\n\nfunction createViewQuery<T>(\n    viewQuery: ComponentQuery<{}>| null, flags: LViewFlags, component: T): void {\n  if (viewQuery && (flags & LViewFlags.CreationMode)) {\n    viewQuery(RenderFlags.Create, component);\n  }\n}\n\nfunction updateViewQuery<T>(viewQuery: ComponentQuery<{}>| null, component: T): void {\n  if (viewQuery) {\n    viewQuery(RenderFlags.Update, component);\n  }\n}\n\n\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n */\nexport function markDirty<T>(component: T) {\n  ngDevMode && assertDefined(component, 'component');\n  markViewDirty(getComponentViewByInstance(component));\n}\n\n///////////////////////////////\n//// Bindings & interpolations\n///////////////////////////////\n\nexport interface NO_CHANGE {\n  // This is a brand that ensures that this type can never match anything else\n  brand: 'NO_CHANGE';\n}\n\n/** A special value which designates that a value has not changed. */\nexport const NO_CHANGE = {} as NO_CHANGE;\n\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nexport function bind<T>(value: T): T|NO_CHANGE {\n  return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n}\n\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function interpolationV(values: any[]): string|NO_CHANGE {\n  ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n  ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n  let different = false;\n\n  for (let i = 1; i < values.length; i += 2) {\n    // Check if bindings (odd indexes) have changed\n    bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n  }\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  // Build the updated content\n  let content = values[0];\n  for (let i = 1; i < values.length; i += 2) {\n    content += stringify(values[i]) + values[i + 1];\n  }\n\n  return content;\n}\n\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nexport function interpolation1(prefix: string, v0: any, suffix: string): string|NO_CHANGE {\n  const different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n  return different ? prefix + stringify(v0) + suffix : NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 2 expressions. */\nexport function interpolation2(\n    prefix: string, v0: any, i0: string, v1: any, suffix: string): string|NO_CHANGE {\n  const different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n  viewData[BINDING_INDEX] += 2;\n\n  return different ? prefix + stringify(v0) + i0 + stringify(v1) + suffix : NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 3 expressions. */\nexport function interpolation3(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, suffix: string): string|\n    NO_CHANGE {\n  const different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n  viewData[BINDING_INDEX] += 3;\n\n  return different ? prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + suffix :\n                     NO_CHANGE;\n}\n\n/** Create an interpolation binding with 4 expressions. */\nexport function interpolation4(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    suffix: string): string|NO_CHANGE {\n  const different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n  viewData[BINDING_INDEX] += 4;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) +\n          suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 5 expressions. */\nexport function interpolation5(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, suffix: string): string|NO_CHANGE {\n  let different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n  different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n  viewData[BINDING_INDEX] += 5;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 6 expressions. */\nexport function interpolation6(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, suffix: string): string|NO_CHANGE {\n  let different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n  different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n  viewData[BINDING_INDEX] += 6;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + i4 + stringify(v5) + suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 7 expressions. */\nexport function interpolation7(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, suffix: string): string|\n    NO_CHANGE {\n  let different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n  different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n  viewData[BINDING_INDEX] += 7;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 8 expressions. */\nexport function interpolation8(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, i6: string, v7: any,\n    suffix: string): string|NO_CHANGE {\n  let different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n  different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n  viewData[BINDING_INDEX] += 8;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + i6 + stringify(v7) + suffix :\n      NO_CHANGE;\n}\n\n/** Store a value in the `data` at a given `index`. */\nexport function store<T>(index: number, value: T): void {\n  // We don't store any static data for local variables, so the first time\n  // we see the template, we should store as null to avoid a sparse array\n  const adjustedIndex = index + HEADER_OFFSET;\n  if (adjustedIndex >= tView.data.length) {\n    tView.data[adjustedIndex] = null;\n  }\n  viewData[adjustedIndex] = value;\n}\n\n/**\n * Retrieves a local reference from the current contextViewData.\n *\n * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n *\n * @param index The index of the local ref in contextViewData.\n */\nexport function reference<T>(index: number) {\n  return loadInternal<T>(index, contextViewData);\n}\n\nfunction walkUpViews(nestingLevel: number, currentView: LViewData): LViewData {\n  while (nestingLevel > 0) {\n    ngDevMode && assertDefined(\n                     currentView[DECLARATION_VIEW],\n                     'Declaration view should be defined if nesting level is greater than 0.');\n    currentView = currentView[DECLARATION_VIEW] !;\n    nestingLevel--;\n  }\n  return currentView;\n}\n\nexport function loadQueryList<T>(queryListIdx: number): QueryList<T> {\n  ngDevMode && assertDefined(\n                   viewData[CONTENT_QUERIES],\n                   'Content QueryList array should be defined if reading a query.');\n  ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES] !);\n\n  return viewData[CONTENT_QUERIES] ![queryListIdx];\n}\n\n/** Retrieves a value from current `viewData`. */\nexport function load<T>(index: number): T {\n  return loadInternal<T>(index, viewData);\n}\n\n/** Gets the current binding value. */\nexport function getBinding(bindingIndex: number): any {\n  ngDevMode && assertDataInRange(viewData[bindingIndex]);\n  ngDevMode &&\n      assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n  return viewData[bindingIndex];\n}\n\n/** Updates binding if changed, then returns whether it was updated. */\nexport function bindingUpdated(bindingIndex: number, value: any): boolean {\n  ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n  ngDevMode && assertLessThan(\n                   bindingIndex, viewData.length, `Slot should have been initialized to NO_CHANGE`);\n\n  if (viewData[bindingIndex] === NO_CHANGE) {\n    viewData[bindingIndex] = value;\n  } else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n    throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n    viewData[bindingIndex] = value;\n  } else {\n    return false;\n  }\n  return true;\n}\n\n/** Updates binding and returns the value. */\nexport function updateBinding(bindingIndex: number, value: any): any {\n  return viewData[bindingIndex] = value;\n}\n\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nexport function bindingUpdated2(bindingIndex: number, exp1: any, exp2: any): boolean {\n  const different = bindingUpdated(bindingIndex, exp1);\n  return bindingUpdated(bindingIndex + 1, exp2) || different;\n}\n\n/** Updates 3 bindings if changed, then returns whether any was updated. */\nexport function bindingUpdated3(bindingIndex: number, exp1: any, exp2: any, exp3: any): boolean {\n  const different = bindingUpdated2(bindingIndex, exp1, exp2);\n  return bindingUpdated(bindingIndex + 2, exp3) || different;\n}\n\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nexport function bindingUpdated4(\n    bindingIndex: number, exp1: any, exp2: any, exp3: any, exp4: any): boolean {\n  const different = bindingUpdated2(bindingIndex, exp1, exp2);\n  return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n}\n\nexport function getTView(): TView {\n  return tView;\n}\n\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n */\nexport function registerContentQuery<Q>(queryList: QueryList<Q>): void {\n  const savedContentQueriesLength =\n      (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n  if (firstTemplatePass) {\n    const currentDirectiveIndex = viewData.length - 1;\n    const tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n    const lastSavedDirectiveIndex =\n        tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n    if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n      tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n    }\n  }\n}\n\nexport function assertPreviousIsParent() {\n  assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n}\n\nfunction assertHasParent() {\n  assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n}\n\nfunction assertDataInRange(index: number, arr?: any[]) {\n  if (arr == null) arr = viewData;\n  assertDataInRangeInternal(index, arr || viewData);\n}\n\nfunction assertDataNext(index: number, arr?: any[]) {\n  if (arr == null) arr = viewData;\n  assertEqual(\n      arr.length, index, `index ${index} expected to be at the end of arr (length ${arr.length})`);\n}\n\nexport const CLEAN_PROMISE = _CLEAN_PROMISE;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\nimport {Type} from '../core';\nimport {Injector} from '../di/injector';\nimport {Sanitizer} from '../sanitization/security';\n\nimport {assertComponentType, assertDefined} from './assert';\nimport {getComponentViewByInstance} from './context_discovery';\nimport {getComponentDef} from './definition';\nimport {queueInitHooks, queueLifecycleHooks} from './hooks';\nimport {CLEAN_PROMISE, baseDirectiveCreate, createLViewData, createNodeAtIndex, createTView, detectChangesInternal, enterView, executeInitAndContentHooks, getOrCreateTView, leaveView, locateHostElement, prefillHostVars, resetComponentState, setHostBindings} from './instructions';\nimport {ComponentDef, ComponentType} from './interfaces/definition';\nimport {TElementNode, TNodeFlags, TNodeType} from './interfaces/node';\nimport {PlayerHandler} from './interfaces/player';\nimport {RElement, RNode, Renderer3, RendererFactory3, domRendererFactory3} from './interfaces/renderer';\nimport {CONTEXT, HEADER_OFFSET, HOST, HOST_NODE, INJECTOR, LViewData, LViewFlags, RootContext, RootContextFlags, TVIEW} from './interfaces/view';\nimport {getRootView, readElementValue, readPatchedLViewData, stringify} from './util';\n\n\n\n// Root component will always have an element index of 0 and an injector size of 1\nconst ROOT_EXPANDO_INSTRUCTIONS = [0, 1];\n\n/** Options that control how the component should be bootstrapped. */\nexport interface CreateComponentOptions {\n  /** Which renderer factory to use. */\n  rendererFactory?: RendererFactory3;\n\n  /** A custom sanitizer instance */\n  sanitizer?: Sanitizer;\n\n  /** A custom animation player handler */\n  playerHandler?: PlayerHandler;\n\n  /**\n   * Host element on which the component will be bootstrapped. If not specified,\n   * the component definition's `tag` is used to query the existing DOM for the\n   * element to bootstrap.\n   */\n  host?: RElement|string;\n\n  /** Module injector for the component. If unspecified, the injector will be NULL_INJECTOR. */\n  injector?: Injector;\n\n  /**\n   * List of features to be applied to the created component. Features are simply\n   * functions that decorate a component with a certain behavior.\n   *\n   * Typically, the features in this list are features that cannot be added to the\n   * other features list in the component definition because they rely on other factors.\n   *\n   * Example: `RootLifecycleHooks` is a function that adds lifecycle hook capabilities\n   * to root components in a tree-shakable way. It cannot be added to the component\n   * features list because there's no way of knowing when the component will be used as\n   * a root component.\n   */\n  hostFeatures?: HostFeature[];\n\n  /**\n   * A function which is used to schedule change detection work in the future.\n   *\n   * When marking components as dirty, it is necessary to schedule the work of\n   * change detection in the future. This is done to coalesce multiple\n   * {@link markDirty} calls into a single changed detection processing.\n   *\n   * The default value of the scheduler is the `requestAnimationFrame` function.\n   *\n   * It is also useful to override this function for testing purposes.\n   */\n  scheduler?: (work: () => void) => void;\n}\n\n/** See CreateComponentOptions.hostFeatures */\ntype HostFeature = (<T>(component: T, componentDef: ComponentDef<T>) => void);\n\n// TODO: A hack to not pull in the NullInjector from @angular/core.\nexport const NULL_INJECTOR: Injector = {\n  get: (token: any, notFoundValue?: any) => {\n    throw new Error('NullInjector: Not found: ' + stringify(token));\n  }\n};\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nexport function renderComponent<T>(\n    componentType: ComponentType<T>|\n        Type<T>/* Type as workaround for: Microsoft/TypeScript/issues/4881 */\n    ,\n    opts: CreateComponentOptions = {}): T {\n  ngDevMode && assertComponentType(componentType);\n  const rendererFactory = opts.rendererFactory || domRendererFactory3;\n  const sanitizer = opts.sanitizer || null;\n  const componentDef = getComponentDef<T>(componentType) !;\n  if (componentDef.type != componentType) componentDef.type = componentType;\n\n  // The first index of the first selector is the tag name.\n  const componentTag = componentDef.selectors ![0] ![0] as string;\n  const hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n  const rootFlags = componentDef.onPush ? LViewFlags.Dirty | LViewFlags.IsRoot :\n                                          LViewFlags.CheckAlways | LViewFlags.IsRoot;\n  const rootContext = createRootContext(\n      opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n\n  const renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n  const rootView: LViewData = createLViewData(\n      renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n  rootView[INJECTOR] = opts.injector || null;\n\n  const oldView = enterView(rootView, null);\n  let component: T;\n  try {\n    if (rendererFactory.begin) rendererFactory.begin();\n\n    const componentView =\n        createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n    component = createRootComponent(\n        hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n\n    executeInitAndContentHooks();\n    detectChangesInternal(componentView, component);\n  } finally {\n    leaveView(oldView);\n    if (rendererFactory.end) rendererFactory.end();\n  }\n\n  return component;\n}\n\n/**\n * Creates the root component view and the root component node.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n * @param rootView The parent view where the host node is stored\n * @param renderer The current renderer\n * @param sanitizer The sanitizer, if provided\n *\n * @returns Component view created\n */\nexport function createRootComponentView(\n    rNode: RElement | null, def: ComponentDef<any>, rootView: LViewData, renderer: Renderer3,\n    sanitizer?: Sanitizer | null): LViewData {\n  resetComponentState();\n  const tView = rootView[TVIEW];\n  const componentView = createLViewData(\n      renderer,\n      getOrCreateTView(\n          def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery),\n      null, def.onPush ? LViewFlags.Dirty : LViewFlags.CheckAlways, sanitizer);\n  const tNode = createNodeAtIndex(0, TNodeType.Element, rNode, null, null);\n\n  if (tView.firstTemplatePass) {\n    tView.expandoInstructions = ROOT_EXPANDO_INSTRUCTIONS.slice();\n    if (def.diPublic) def.diPublic(def);\n    tNode.flags =\n        rootView.length << TNodeFlags.DirectiveStartingIndexShift | TNodeFlags.isComponent;\n  }\n\n  // Store component view at node index, with node as the HOST\n  componentView[HOST] = rootView[HEADER_OFFSET];\n  componentView[HOST_NODE] = tNode as TElementNode;\n  return rootView[HEADER_OFFSET] = componentView;\n}\n\n/**\n * Creates a root component and sets it up with features and host bindings. Shared by\n * renderComponent() and ViewContainerRef.createComponent().\n */\nexport function createRootComponent<T>(\n    hostRNode: RNode | null, componentView: LViewData, componentDef: ComponentDef<T>,\n    rootView: LViewData, rootContext: RootContext, hostFeatures: HostFeature[] | null): any {\n  // Create directive instance with factory() and store at next index in viewData\n  const component =\n      baseDirectiveCreate(rootView.length, componentDef.factory() as T, componentDef, hostRNode);\n\n  rootContext.components.push(component);\n  componentView[CONTEXT] = component;\n\n  hostFeatures && hostFeatures.forEach((feature) => feature(component, componentDef));\n  if (rootView[TVIEW].firstTemplatePass) prefillHostVars(componentDef.hostVars);\n  setHostBindings();\n  return component;\n}\n\n\nexport function createRootContext(\n    scheduler: (workFn: () => void) => void, playerHandler?: PlayerHandler|null): RootContext {\n  return {\n    components: [],\n    scheduler: scheduler,\n    clean: CLEAN_PROMISE,\n    playerHandler: playerHandler || null,\n    flags: RootContextFlags.Empty\n  };\n}\n\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\nexport function LifecycleHooksFeature(component: any, def: ComponentDef<any>): void {\n  const rootTView = readPatchedLViewData(component) ![TVIEW];\n  const dirIndex = rootTView.data.length - 1;\n\n  queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n  queueLifecycleHooks(dirIndex << TNodeFlags.DirectiveStartingIndexShift | 1, rootTView);\n}\n\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext(component: any): RootContext {\n  const rootContext = getRootView(component)[CONTEXT] as RootContext;\n  ngDevMode && assertDefined(rootContext, 'rootContext');\n  return rootContext;\n}\n\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param component Component for which the host element should be retrieved.\n */\nexport function getHostElement<T>(component: T): HTMLElement {\n  return readElementValue(getComponentViewByInstance(component)) as HTMLElement;\n}\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\nexport function getRenderedText(component: any): string {\n  const hostElement = getHostElement(component);\n  return hostElement.textContent || '';\n}\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nexport function whenRendered(component: any): Promise<null> {\n  return getRootContext(component).clean;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../../type';\nimport {fillProperties} from '../../util/property';\nimport {EMPTY, EMPTY_ARRAY} from '../definition';\nimport {ComponentDef, ComponentTemplate, DirectiveDef, DirectiveDefFeature, RenderFlags} from '../interfaces/definition';\n\n\n\n/**\n * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n * @param definition The definition to examine\n */\nfunction isComponentDef<T>(definition: ComponentDef<T>| DirectiveDef<T>):\n    definition is ComponentDef<T> {\n  const def = definition as ComponentDef<T>;\n  return typeof def.template === 'function';\n}\n\nfunction getSuperType(type: Type<any>): Type<any>&\n    {ngComponentDef?: ComponentDef<any>, ngDirectiveDef?: DirectiveDef<any>} {\n  return Object.getPrototypeOf(type.prototype).constructor;\n}\n\n/**\n * Merges the definition from a super class to a sub class.\n * @param definition The definition that is a SubClass of another directive of component\n */\nexport function InheritDefinitionFeature(definition: DirectiveDef<any>| ComponentDef<any>): void {\n  let superType = getSuperType(definition.type);\n\n  while (superType) {\n    let superDef: DirectiveDef<any>|ComponentDef<any>|undefined = undefined;\n    if (isComponentDef(definition)) {\n      // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n      superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n    } else {\n      if (superType.ngComponentDef) {\n        throw new Error('Directives cannot inherit Components');\n      }\n      // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n      superDef = superType.ngDirectiveDef;\n    }\n\n    const baseDef = (superType as any).ngBaseDef;\n\n    // Some fields in the definition may be empty, if there were no values to put in them that\n    // would've justified object creation. Unwrap them if necessary.\n    if (baseDef || superDef) {\n      const writeableDef = definition as any;\n      writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n      writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n      writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n    }\n\n    if (baseDef) {\n      // Merge inputs and outputs\n      fillProperties(definition.inputs, baseDef.inputs);\n      fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n      fillProperties(definition.outputs, baseDef.outputs);\n    }\n\n    if (superDef) {\n      // Merge hostBindings\n      const prevHostBindings = definition.hostBindings;\n      const superHostBindings = superDef.hostBindings;\n      if (superHostBindings) {\n        if (prevHostBindings) {\n          definition.hostBindings = (directiveIndex: number, elementIndex: number) => {\n            superHostBindings(directiveIndex, elementIndex);\n            prevHostBindings(directiveIndex, elementIndex);\n          };\n        } else {\n          definition.hostBindings = superHostBindings;\n        }\n      }\n\n      // Merge View Queries\n      if (isComponentDef(definition) && isComponentDef(superDef)) {\n        const prevViewQuery = definition.viewQuery;\n        const superViewQuery = superDef.viewQuery;\n        if (superViewQuery) {\n          if (prevViewQuery) {\n            definition.viewQuery = <T>(rf: RenderFlags, ctx: T): void => {\n              superViewQuery(rf, ctx);\n              prevViewQuery(rf, ctx);\n            };\n          } else {\n            definition.viewQuery = superViewQuery;\n          }\n        }\n      }\n\n      // Merge Content Queries\n      const prevContentQueries = definition.contentQueries;\n      const superContentQueries = superDef.contentQueries;\n      if (superContentQueries) {\n        if (prevContentQueries) {\n          definition.contentQueries = () => {\n            superContentQueries();\n            prevContentQueries();\n          };\n        } else {\n          definition.contentQueries = superContentQueries;\n        }\n      }\n\n      // Merge Content Queries Refresh\n      const prevContentQueriesRefresh = definition.contentQueriesRefresh;\n      const superContentQueriesRefresh = superDef.contentQueriesRefresh;\n      if (superContentQueriesRefresh) {\n        if (prevContentQueriesRefresh) {\n          definition.contentQueriesRefresh = (directiveIndex: number, queryIndex: number) => {\n            superContentQueriesRefresh(directiveIndex, queryIndex);\n            prevContentQueriesRefresh(directiveIndex, queryIndex);\n          };\n        } else {\n          definition.contentQueriesRefresh = superContentQueriesRefresh;\n        }\n      }\n\n\n      // Merge inputs and outputs\n      fillProperties(definition.inputs, superDef.inputs);\n      fillProperties(definition.declaredInputs, superDef.declaredInputs);\n      fillProperties(definition.outputs, superDef.outputs);\n\n      // Inherit hooks\n      // Assume super class inheritance feature has already run.\n      definition.afterContentChecked =\n          definition.afterContentChecked || superDef.afterContentChecked;\n      definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n      definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n      definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n      definition.doCheck = definition.doCheck || superDef.doCheck;\n      definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n      definition.onInit = definition.onInit || superDef.onInit;\n\n      // Run parent features\n      const features = superDef.features;\n      if (features) {\n        for (const feature of features) {\n          if (feature && feature !== InheritDefinitionFeature) {\n            (feature as DirectiveDefFeature)(definition);\n          }\n        }\n      }\n\n      break;\n    } else {\n      // Even if we don't have a definition, check the type for the hooks and use those if need be\n      const superPrototype = superType.prototype;\n\n      if (superPrototype) {\n        definition.afterContentChecked =\n            definition.afterContentChecked || superPrototype.afterContentChecked;\n        definition.afterContentInit =\n            definition.afterContentInit || superPrototype.afterContentInit;\n        definition.afterViewChecked =\n            definition.afterViewChecked || superPrototype.afterViewChecked;\n        definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n        definition.doCheck = definition.doCheck || superPrototype.doCheck;\n        definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n        definition.onInit = definition.onInit || superPrototype.onInit;\n      }\n    }\n\n    superType = Object.getPrototypeOf(superType);\n  }\n}\n\nfunction maybeUnwrapEmpty<T>(value: T[]): T[];\nfunction maybeUnwrapEmpty<T>(value: T): T;\nfunction maybeUnwrapEmpty(value: any): any {\n  if (value === EMPTY) {\n    return {};\n  } else if (value === EMPTY_ARRAY) {\n    return [];\n  } else {\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SimpleChange} from '../../change_detection/change_detection_util';\nimport {OnChanges, SimpleChanges} from '../../metadata/lifecycle_hooks';\nimport {DirectiveDef} from '../interfaces/definition';\n\nconst PRIVATE_PREFIX = '__ngOnChanges_';\n\ntype OnChangesExpando = OnChanges & {\n  __ngOnChanges_: SimpleChanges|null|undefined;\n  // tslint:disable-next-line:no-any Can hold any value\n  [key: string]: any;\n};\n\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n */\nexport function NgOnChangesFeature<T>(definition: DirectiveDef<T>): void {\n  const declaredToMinifiedInputs = definition.declaredInputs;\n  const proto = definition.type.prototype;\n  for (const declaredName in declaredToMinifiedInputs) {\n    if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n      const minifiedKey = declaredToMinifiedInputs[declaredName];\n      const privateMinKey = PRIVATE_PREFIX + minifiedKey;\n\n      // Walk the prototype chain to see if we find a property descriptor\n      // That way we can honor setters and getters that were inherited.\n      let originalProperty: PropertyDescriptor|undefined = undefined;\n      let checkProto = proto;\n      while (!originalProperty && checkProto &&\n             Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n        originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n        checkProto = Object.getPrototypeOf(checkProto);\n      }\n\n      const getter = originalProperty && originalProperty.get;\n      const setter = originalProperty && originalProperty.set;\n\n      // create a getter and setter for property\n      Object.defineProperty(proto, minifiedKey, {\n        get: getter ||\n            (setter ? undefined : function(this: OnChangesExpando) { return this[privateMinKey]; }),\n        set<T>(this: OnChangesExpando, value: T) {\n          let simpleChanges = this[PRIVATE_PREFIX];\n          if (!simpleChanges) {\n            simpleChanges = {};\n            // Place where we will store SimpleChanges if there is a change\n            Object.defineProperty(this, PRIVATE_PREFIX, {value: simpleChanges, writable: true});\n          }\n\n          const isFirstChange = !this.hasOwnProperty(privateMinKey);\n          const currentChange = simpleChanges[declaredName];\n\n          if (currentChange) {\n            currentChange.currentValue = value;\n          } else {\n            simpleChanges[declaredName] =\n                new SimpleChange(this[privateMinKey], value, isFirstChange);\n          }\n\n          if (isFirstChange) {\n            // Create a place where the actual value will be stored and make it non-enumerable\n            Object.defineProperty(this, privateMinKey, {value, writable: true});\n          } else {\n            this[privateMinKey] = value;\n          }\n\n          if (setter) setter.call(this, value);\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode\n      });\n    }\n  }\n\n  // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n  // so the call order is changes-init-check in creation mode. In subsequent\n  // change detection runs, only the check wrapper will be called.\n  if (definition.onInit != null) {\n    definition.onInit = onChangesWrapper(definition.onInit);\n  }\n\n  definition.doCheck = onChangesWrapper(definition.doCheck);\n}\n\nfunction onChangesWrapper(delegateHook: (() => void) | null) {\n  return function(this: OnChangesExpando) {\n    const simpleChanges = this[PRIVATE_PREFIX];\n    if (simpleChanges != null) {\n      this.ngOnChanges(simpleChanges);\n      this[PRIVATE_PREFIX] = null;\n    }\n    if (delegateHook) delegateHook.apply(this);\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine_from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\n\nimport {getInjectableDef, getInjectorDef} from '../di/defs';\nimport {InjectionToken} from '../di/injection_token';\nimport {InjectFlags, Injector, inject, setCurrentInjector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {assertDefined} from './assert';\nimport {getComponentDef, getDirectiveDef, getPipeDef} from './definition';\nimport {NG_ELEMENT_ID} from './fields';\nimport {_getViewData, getPreviousOrParentTNode, resolveDirective, setEnvironment} from './instructions';\nimport {DirectiveDef} from './interfaces/definition';\nimport {InjectorLocationFlags, PARENT_INJECTOR, TNODE,} from './interfaces/injector';\nimport {AttributeMarker, TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeFlags, TNodeType} from './interfaces/node';\nimport {DECLARATION_VIEW, HOST_NODE, INJECTOR, LViewData, TData, TVIEW, TView} from './interfaces/view';\nimport {assertNodeOfPossibleTypes} from './node_assert';\n\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nconst BLOOM_SIZE = 256;\nconst BLOOM_MASK = BLOOM_SIZE - 1;\n\n/** Counter used to generate unique IDs for directives. */\nlet nextNgElementId = 0;\n\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injectorIndex The index of the node injector where this token should be registered\n * @param tView The TView for the injector's bloom filters\n * @param type The directive token to register\n */\nexport function bloomAdd(injectorIndex: number, tView: TView, type: Type<any>): void {\n  if (tView.firstTemplatePass) {\n    let id: number|undefined = (type as any)[NG_ELEMENT_ID];\n\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n      id = (type as any)[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    const bloomBit = id & BLOOM_MASK;\n\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    const mask = 1 << bloomBit;\n\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    const b7 = bloomBit & 0x80;\n    const b6 = bloomBit & 0x40;\n    const b5 = bloomBit & 0x20;\n    const tData = tView.data as number[];\n\n    if (b7) {\n      b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n           (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n    } else {\n      b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n           (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n    }\n  }\n}\n\nexport function getOrCreateNodeInjector(): number {\n  return getOrCreateNodeInjectorForNode(\n      getPreviousOrParentTNode() as TElementNode | TElementContainerNode | TContainerNode,\n      _getViewData());\n}\n\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param tNode for which an injector should be retrieved / created.\n * @param hostView View where the node is stored\n * @returns Node injector\n */\nexport function getOrCreateNodeInjectorForNode(\n    tNode: TElementNode | TContainerNode | TElementContainerNode, hostView: LViewData): number {\n  const existingInjectorIndex = getInjectorIndex(tNode, hostView);\n  if (existingInjectorIndex !== -1) {\n    return existingInjectorIndex;\n  }\n\n  const tView = hostView[TVIEW];\n  if (tView.firstTemplatePass) {\n    tNode.injectorIndex = hostView.length;\n    setUpBloom(tView.data, tNode);  // foundation for node bloom\n    setUpBloom(hostView, null);     // foundation for cumulative bloom\n    setUpBloom(tView.blueprint, null);\n  }\n\n  const parentLoc = getParentInjectorLocation(tNode, hostView);\n  const parentIndex = parentLoc & InjectorLocationFlags.InjectorIndexMask;\n  const parentView: LViewData = getParentInjectorView(parentLoc, hostView);\n\n  const parentData = parentView[TVIEW].data as any;\n  const injectorIndex = tNode.injectorIndex;\n\n  // If a parent injector can't be found, its location is set to -1.\n  // In that case, we don't need to set up a cumulative bloom\n  if (parentLoc !== -1) {\n    for (let i = 0; i < PARENT_INJECTOR; i++) {\n      const bloomIndex = parentIndex + i;\n      // Creates a cumulative bloom filter that merges the parent's bloom filter\n      // and its own cumulative bloom (which contains tokens for all ancestors)\n      hostView[injectorIndex + i] = parentView[bloomIndex] | parentData[bloomIndex];\n    }\n  }\n\n  hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n  return injectorIndex;\n}\n\nfunction setUpBloom(arr: any[], footer: TNode | null) {\n  arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n}\n\nexport function getInjectorIndex(tNode: TNode, hostView: LViewData): number {\n  if (tNode.injectorIndex === -1 ||\n      // If the injector index is the same as its parent's injector index, then the index has been\n      // copied down from the parent node. No injector has been created yet on this node.\n      (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n      // After the first template pass, the injector index might exist but the parent values\n      // might not have been calculated yet for this instance\n      hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n    return -1;\n  } else {\n    return tNode.injectorIndex;\n  }\n}\n\n/**\n * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n * parent injector initially.\n */\nexport function getParentInjectorLocation(tNode: TNode, view: LViewData): number {\n  if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n    return tNode.parent.injectorIndex;  // view offset is 0\n  }\n\n  // For most cases, the parent injector index can be found on the host node (e.g. for component\n  // or container), so this loop will be skipped, but we must keep the loop here to support\n  // the rarer case of deeply nested <ng-template> tags or inline views.\n  let hostTNode = view[HOST_NODE];\n  let viewOffset = 1;\n  while (hostTNode && hostTNode.injectorIndex === -1) {\n    view = view[DECLARATION_VIEW] !;\n    hostTNode = view[HOST_NODE] !;\n    viewOffset++;\n  }\n  return hostTNode ?\n      hostTNode.injectorIndex | (viewOffset << InjectorLocationFlags.ViewOffsetShift) :\n      -1;\n}\n\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the view is found that contains the parent\n * injector.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LViewData instance from which to start walking up the view tree\n * @returns The LViewData instance that contains the parent injector\n */\nexport function getParentInjectorView(location: number, startView: LViewData): LViewData {\n  let viewOffset = location >> InjectorLocationFlags.ViewOffsetShift;\n  let parentView = startView;\n  // For most cases, the parent injector can be found on the host node (e.g. for component\n  // or container), but we must keep the loop here to support the rarer case of deeply nested\n  // <ng-template> tags or inline views, where the parent injector might live many views\n  // above the child injector.\n  while (viewOffset > 0) {\n    parentView = parentView[DECLARATION_VIEW] !;\n    viewOffset--;\n  }\n  return parentView;\n}\n\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param def The definition of the directive to be made public\n */\nexport function diPublicInInjector(\n    injectorIndex: number, view: LViewData, def: DirectiveDef<any>): void {\n  bloomAdd(injectorIndex, view[TVIEW], def.type);\n}\n\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param def The definition of the directive to be made public\n */\nexport function diPublic(def: DirectiveDef<any>): void {\n  diPublicInInjector(getOrCreateNodeInjector(), _getViewData(), def);\n}\n\n/**\n * Returns the value associated to the given token from the injectors.\n *\n * `directiveInject` is intended to be used for directive, component and pipe factories.\n *  All other injection use `inject` which does not walk the node injector tree.\n *\n * Usage example (in factory function):\n *\n * class SomeDirective {\n *   constructor(directive: DirectiveA) {}\n *\n *   static ngDirectiveDef = defineDirective({\n *     type: SomeDirective,\n *     factory: () => new SomeDirective(directiveInject(DirectiveA))\n *   });\n * }\n *\n * @param token the type or token to inject\n * @param flags Injection flags\n * @returns the value from the injector or `null` when not found\n */\nexport function directiveInject<T>(token: Type<T>| InjectionToken<T>): T;\nexport function directiveInject<T>(token: Type<T>| InjectionToken<T>, flags: InjectFlags): T;\nexport function directiveInject<T>(\n    token: Type<T>| InjectionToken<T>, flags = InjectFlags.Default): T|null {\n  const hostTNode =\n      getPreviousOrParentTNode() as TElementNode | TContainerNode | TElementContainerNode;\n  return getOrCreateInjectable<T>(hostTNode, _getViewData(), token, flags);\n}\n\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @publicApi\n */\nexport function injectAttribute(attrNameToInject: string): string|undefined {\n  const tNode = getPreviousOrParentTNode();\n  ngDevMode && assertNodeOfPossibleTypes(\n                   tNode, TNodeType.Container, TNodeType.Element, TNodeType.ElementContainer);\n  ngDevMode && assertDefined(tNode, 'expecting tNode');\n  const attrs = tNode.attrs;\n  if (attrs) {\n    for (let i = 0; i < attrs.length; i = i + 2) {\n      const attrName = attrs[i];\n      if (attrName === AttributeMarker.SelectOnly) break;\n      if (attrName == attrNameToInject) {\n        return attrs[i + 1] as string;\n      }\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * Returns the value associated to the given token from the injectors.\n *\n * Look for the injector providing the token by walking up the node injector tree and then\n * the module injector tree.\n *\n * @param nodeInjector Node injector where the search should start\n * @param token The token to look for\n * @param flags Injection flags\n * @returns the value from the injector or `null` when not found\n */\nexport function getOrCreateInjectable<T>(\n    hostTNode: TElementNode | TContainerNode | TElementContainerNode, hostView: LViewData,\n    token: Type<T>| InjectionToken<T>, flags: InjectFlags = InjectFlags.Default): T|null {\n  const bloomHash = bloomHashBitOrFactory(token);\n  // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n  // so just call the factory function to create it.\n  if (typeof bloomHash === 'function') return bloomHash();\n\n  // If the token has a bloom hash, then it is a directive that is public to the injection system\n  // (diPublic) otherwise fall back to the module injector.\n  if (bloomHash != null) {\n    const startInjectorIndex = getInjectorIndex(hostTNode, hostView);\n\n    let injectorIndex = startInjectorIndex;\n    let injectorView = hostView;\n    let parentLocation: number = -1;\n\n    // If we should skip this injector or if an injector doesn't exist on this node (e.g. all\n    // directives on this node are private), start by searching the parent injector.\n    if (flags & InjectFlags.SkipSelf || injectorIndex === -1) {\n      parentLocation = injectorIndex === -1 ? getParentInjectorLocation(hostTNode, hostView) :\n                                              injectorView[injectorIndex + PARENT_INJECTOR];\n\n      if (shouldNotSearchParent(flags, parentLocation)) {\n        injectorIndex = -1;\n      } else {\n        injectorIndex = parentLocation & InjectorLocationFlags.InjectorIndexMask;\n        injectorView = getParentInjectorView(parentLocation, injectorView);\n      }\n    }\n\n    while (injectorIndex !== -1) {\n      // Traverse up the injector tree until we find a potential match or until we know there\n      // *isn't* a match. Outer loop is necessary in case we get a false positive injector.\n      while (injectorIndex !== -1) {\n        // Check the current injector. If it matches, stop searching for an injector.\n        if (injectorHasToken(bloomHash, injectorIndex, injectorView[TVIEW].data)) {\n          break;\n        }\n\n        parentLocation = injectorView[injectorIndex + PARENT_INJECTOR];\n        if (shouldNotSearchParent(flags, parentLocation)) {\n          injectorIndex = -1;\n          break;\n        }\n\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse\n        // up to find the specific injector. If the ancestor bloom filter does not have the bit, we\n        // can abort.\n        if (injectorHasToken(bloomHash, injectorIndex, injectorView)) {\n          injectorIndex = parentLocation & InjectorLocationFlags.InjectorIndexMask;\n          injectorView = getParentInjectorView(parentLocation, injectorView);\n        } else {\n          injectorIndex = -1;\n          break;\n        }\n      }\n\n      // If no injector is found, we *know* that there is no ancestor injector that contains the\n      // token, so we abort.\n      if (injectorIndex === -1) {\n        break;\n      }\n\n      // At this point, we have an injector which *may* contain the token, so we step through the\n      // directives associated with the injector's corresponding node to get the directive instance.\n      let instance: T|null;\n      if (instance = searchDirectivesOnInjector<T>(injectorIndex, injectorView, token)) {\n        return instance;\n      }\n\n      // If we *didn't* find the directive for the token and we are searching the current node's\n      // injector, it's possible the directive is on this node and hasn't been created yet.\n      if (injectorIndex === startInjectorIndex && hostView === injectorView &&\n          (instance = searchMatchesQueuedForCreation<T>(token, injectorView[TVIEW]))) {\n        return instance;\n      }\n\n      // The def wasn't found anywhere on this node, so it was a false positive.\n      // Traverse up the tree and continue searching.\n      injectorIndex = parentLocation & InjectorLocationFlags.InjectorIndexMask;\n      injectorView = getParentInjectorView(parentLocation, injectorView);\n    }\n  }\n\n  const moduleInjector = hostView[INJECTOR];\n  const formerInjector = setCurrentInjector(moduleInjector);\n  try {\n    return inject(token, flags);\n  } finally {\n    setCurrentInjector(formerInjector);\n  }\n}\n\nfunction searchMatchesQueuedForCreation<T>(token: any, hostTView: TView): T|null {\n  const matches = hostTView.currentMatches;\n  if (matches) {\n    for (let i = 0; i < matches.length; i += 2) {\n      const def = matches[i] as DirectiveDef<any>;\n      if (def.type === token) {\n        return resolveDirective(def, i + 1, matches);\n      }\n    }\n  }\n  return null;\n}\n\nfunction searchDirectivesOnInjector<T>(\n    injectorIndex: number, injectorView: LViewData, token: Type<T>| InjectionToken<T>) {\n  const tNode = injectorView[TVIEW].data[injectorIndex + TNODE] as TNode;\n  const nodeFlags = tNode.flags;\n  const count = nodeFlags & TNodeFlags.DirectiveCountMask;\n\n  if (count !== 0) {\n    const start = nodeFlags >> TNodeFlags.DirectiveStartingIndexShift;\n    const end = start + count;\n    const defs = injectorView[TVIEW].data;\n\n    for (let i = start; i < end; i++) {\n      // Get the definition for the directive at this index and, if it is injectable (diPublic),\n      // and matches the given token, return the directive instance.\n      const directiveDef = defs[i] as DirectiveDef<any>;\n      if (directiveDef.type === token && directiveDef.diPublic) {\n        return injectorView[i];\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n * the directive might be provided by the injector.\n *\n * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n * is returned as the node injector can not possibly provide that token.\n *\n * @param token the injection token\n * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n */\nexport function bloomHashBitOrFactory(token: Type<any>| InjectionToken<any>): number|Function|\n    undefined {\n  ngDevMode && assertDefined(token, 'token must be defined');\n  const tokenId: number|undefined = (token as any)[NG_ELEMENT_ID];\n  return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n}\n\nexport function injectorHasToken(\n    bloomHash: number, injectorIndex: number, injectorView: LViewData | TData) {\n  // Create a mask that targets the specific bit associated with the directive we're looking for.\n  // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n  // to bit positions 0 - 31 in a 32 bit integer.\n  const mask = 1 << bloomHash;\n  const b7 = bloomHash & 0x80;\n  const b6 = bloomHash & 0x40;\n  const b5 = bloomHash & 0x20;\n\n  // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n  // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n  // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n  let value: number;\n\n  if (b7) {\n    value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                 (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n  } else {\n    value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                 (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n  }\n\n  // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n  // this injector is a potential match.\n  return !!(value & mask);\n}\n\n/** Returns true if flags prevent parent injector from being searched for tokens */\nfunction shouldNotSearchParent(flags: InjectFlags, parentLocation: number): boolean|number {\n  return flags & InjectFlags.Self ||\n      (flags & InjectFlags.Host && (parentLocation >> InjectorLocationFlags.ViewOffsetShift) > 0);\n}\n\nexport class NodeInjector implements Injector {\n  private _injectorIndex: number;\n\n  constructor(\n      private _tNode: TElementNode|TContainerNode|TElementContainerNode,\n      private _hostView: LViewData) {\n    this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n  }\n\n  get(token: any): any {\n    setEnvironment(this._tNode, this._hostView);\n    return getOrCreateInjectable(this._tNode, this._hostView, token);\n  }\n}\nexport function getFactoryOf<T>(type: Type<any>): ((type?: Type<T>) => T)|null {\n  const typeAny = type as any;\n  const def = getComponentDef<T>(typeAny) || getDirectiveDef<T>(typeAny) ||\n      getPipeDef<T>(typeAny) || getInjectableDef<T>(typeAny) || getInjectorDef<T>(typeAny);\n  if (!def || def.factory === undefined) {\n    return null;\n  }\n  return def.factory;\n}\n\nexport function getInheritedFactory<T>(type: Type<any>): (type: Type<T>) => T {\n  const proto = Object.getPrototypeOf(type.prototype).constructor as Type<any>;\n  const factory = getFactoryOf<T>(proto);\n  if (factory !== null) {\n    return factory;\n  } else {\n    // There is no factory defined. Either this was improper usage of inheritance\n    // (no Angular decorator on the superclass) or there is no constructor at all\n    // in the inheritance chain. Since the two cases cannot be distinguished, the\n    // latter has to be assumed.\n    return (t) => new t();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {diPublic} from '../di';\nimport {DirectiveDef} from '../interfaces/definition';\n\n/**\n * This feature publishes the directive (or component) into the DI system, making it visible to\n * others for injection.\n *\n * @param definition\n */\nexport function PublicFeature<T>(definition: DirectiveDef<T>) {\n  definition.diPublic = diPublic;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @publicApi\n */\nexport abstract class ComponentRef<C> {\n  /**\n   * The host or anchor [element](guide/glossary#element) for this component instance.\n   */\n  abstract get location(): ElementRef;\n\n  /**\n   * The [dependency injector](guide/glossary#injector) for this component instance.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * This component instance.\n   */\n  abstract get instance(): C;\n\n  /**\n   * The [host view](guide/glossary#view-tree) defined by the template\n   * for this component instance.\n   */\n  abstract get hostView(): ViewRef;\n\n  /**\n   * The change detector for this component instance.\n   */\n  abstract get changeDetectorRef(): ChangeDetectorRef;\n\n  /**\n   * The component type.\n   */\n  abstract get componentType(): Type<any>;\n\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * A lifecycle hook that provides additional developer-defined cleanup\n   * functionality for the component.\n   * @param callback A handler function that cleans up developer-defined data\n   * associated with this component. Called when the `destroy()` method is invoked.\n   */\n  abstract onDestroy(callback: Function): void;\n}\n\n/**\n * @publicApi\n */\nexport abstract class ComponentFactory<C> {\n  /**\n   * The component's HTML selector.\n   */\n  abstract get selector(): string;\n  /**\n   * The component's type\n   */\n  abstract get componentType(): Type<any>;\n  /**\n   * Selector for all <ng-content> elements in the component.\n   */\n  abstract get ngContentSelectors(): string[];\n  /**\n   * The inputs of the component.\n   */\n  abstract get inputs(): {propName: string, templateName: string}[];\n  /**\n   * The outputs of the component.\n   */\n  abstract get outputs(): {propName: string, templateName: string}[];\n  /**\n   * Creates a new component.\n   */\n  abstract create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n\nexport function noComponentFactoryError(component: Function) {\n  const error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  (error as any)[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst ERROR_COMPONENT = 'ngComponent';\n\nexport function getComponent(error: Error): Type<any> {\n  return (error as any)[ERROR_COMPONENT];\n}\n\n\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n  resolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n\n/**\n * @publicApi\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n  abstract resolveComponentFactory<T>(component: Type<T>): ComponentFactory<T>;\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\n  private _factories = new Map<any, ComponentFactory<any>>();\n\n  constructor(\n      factories: ComponentFactory<any>[], private _parent: ComponentFactoryResolver,\n      private _ngModule: NgModuleRef<any>) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n\n  resolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n  readonly selector: string;\n  readonly componentType: Type<any>;\n  readonly ngContentSelectors: string[];\n  readonly inputs: {propName: string, templateName: string}[];\n  readonly outputs: {propName: string, templateName: string}[];\n\n  constructor(private factory: ComponentFactory<C>, private ngModule: NgModuleRef<any>) {\n    super();\n    this.selector = factory.selector;\n    this.componentType = factory.componentType;\n    this.ngContentSelectors = factory.ngContentSelectors;\n    this.inputs = factory.inputs;\n    this.outputs = factory.outputs;\n  }\n\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ComponentFactoryResolver} from './component_factory_resolver';\n\n\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * @publicApi\n */\nexport abstract class NgModuleRef<T> {\n  /**\n   * The injector that contains all of the providers of the NgModule.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * The ComponentFactoryResolver to get hold of the ComponentFactories\n   * declared in the `entryComponents` property of the module.\n   */\n  abstract get componentFactoryResolver(): ComponentFactoryResolver;\n\n  /**\n   * The NgModule instance.\n   */\n  abstract get instance(): T;\n\n  /**\n   * Destroys the module instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the module is destroyed.\n   */\n  abstract onDestroy(callback: () => void): void;\n}\n\nexport interface InternalNgModuleRef<T> extends NgModuleRef<T> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _bootstrapComponents: Type<any>[];\n}\n\n/**\n * @publicApi\n */\nexport abstract class NgModuleFactory<T> {\n  abstract get moduleType(): Type<T>;\n  abstract create(parentInjector: Injector|null): NgModuleRef<T>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef as viewEngine_ChangeDetectorRef} from '../change_detection/change_detector_ref';\nimport {ViewContainerRef as viewEngine_ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef as viewEngine_EmbeddedViewRef, InternalViewRef as viewEngine_InternalViewRef} from '../linker/view_ref';\n\nimport {checkNoChanges, checkNoChangesInRootView, detectChanges, detectChangesInRootView, getRendererFactory, markViewDirty, storeCleanupFn, viewAttached} from './instructions';\nimport {TViewNode} from './interfaces/node';\nimport {FLAGS, LViewData, LViewFlags, PARENT} from './interfaces/view';\nimport {destroyLView} from './node_manipulation';\n\n\n// Needed due to tsickle downleveling where multiple `implements` with classes creates\n// multiple @extends in Closure annotations, which is illegal. This workaround fixes\n// the multiple @extends by making the annotation @implements instead\nexport interface viewEngine_ChangeDetectorRef_interface extends viewEngine_ChangeDetectorRef {}\n\nexport class ViewRef<T> implements viewEngine_EmbeddedViewRef<T>, viewEngine_InternalViewRef,\n    viewEngine_ChangeDetectorRef_interface {\n  private _appRef: ApplicationRef|null = null;\n  private _viewContainerRef: viewEngine_ViewContainerRef|null = null;\n\n  /**\n   * @internal\n   */\n  _view: LViewData;\n\n  /**\n   * @internal\n   */\n  _tViewNode: TViewNode|null = null;\n\n  // TODO(issue/24571): remove '!'.\n  rootNodes !: any[];\n\n  constructor(_view: LViewData, private _context: T|null, private _componentIndex: number) {\n    this._view = _view;\n  }\n\n  get context(): T { return this._context ? this._context : this._lookUpContext(); }\n\n  get destroyed(): boolean {\n    return (this._view[FLAGS] & LViewFlags.Destroyed) === LViewFlags.Destroyed;\n  }\n\n  destroy(): void {\n    if (this._viewContainerRef && viewAttached(this._view)) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n      this._viewContainerRef = null;\n    }\n    destroyLView(this._view);\n  }\n\n  onDestroy(callback: Function) { storeCleanupFn(this._view, callback); }\n\n  /**\n   * Marks a view and all of its ancestors dirty.\n   *\n   * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n   * multiple `markForCheck` calls to into one change detection run.\n   *\n   * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n   * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n   * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'my-app',\n   *   template: `Number of ticks: {{numberOfTicks}}`\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   * })\n   * class AppComponent {\n   *   numberOfTicks = 0;\n   *\n   *   constructor(private ref: ChangeDetectorRef) {\n   *     setInterval(() => {\n   *       this.numberOfTicks++;\n   *       // the following is required, otherwise the view will not be updated\n   *       this.ref.markForCheck();\n   *     }, 1000);\n   *   }\n   * }\n   * ```\n   */\n  markForCheck(): void { markViewDirty(this._view); }\n\n  /**\n   * Detaches the view from the change detection tree.\n   *\n   * Detached views will not be checked during change detection runs until they are\n   * re-attached, even if they are dirty. `detach` can be used in combination with\n   * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n   * detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds. We can do that by detaching\n   * the component's change detector and doing a local check every five seconds.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   // in a real application the returned data will be different every time\n   *   get data() {\n   *     return [1,2,3,4,5];\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'giant-list',\n   *   template: `\n   *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n   *   `,\n   * })\n   * class GiantList {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n   *     ref.detach();\n   *     setInterval(() => {\n   *       this.ref.detectChanges();\n   *     }, 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     <giant-list><giant-list>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   */\n  detach(): void { this._view[FLAGS] &= ~LViewFlags.Attached; }\n\n  /**\n   * Re-attaches a view to the change detection tree.\n   *\n   * This can be used to re-attach views that were previously detached from the tree\n   * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example creates a component displaying `live` data. The component will detach\n   * its change detector from the main change detector tree when the component's live property\n   * is set to false.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   data = 1;\n   *\n   *   constructor() {\n   *     setInterval(() => {\n   *       this.data = this.data * 2;\n   *     }, 500);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'live-data',\n   *   inputs: ['live'],\n   *   template: 'Data: {{dataProvider.data}}'\n   * })\n   * class LiveData {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n   *\n   *   set live(value) {\n   *     if (value) {\n   *       this.ref.reattach();\n   *     } else {\n   *       this.ref.detach();\n   *     }\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'my-app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n   *     <live-data [live]=\"live\"><live-data>\n   *   `,\n   * })\n   * class AppComponent {\n   *   live = true;\n   * }\n   * ```\n   */\n  reattach(): void { this._view[FLAGS] |= LViewFlags.Attached; }\n\n  /**\n   * Checks the view and its children.\n   *\n   * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n   * local change detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine, the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds.\n   *\n   * We can do that by detaching the component's change detector and doing a local change detection\n   * check every five seconds.\n   *\n   * See {@link ChangeDetectorRef#detach detach} for more information.\n   */\n  detectChanges(): void {\n    const rendererFactory = getRendererFactory();\n    if (rendererFactory.begin) {\n      rendererFactory.begin();\n    }\n    detectChanges(this.context);\n    if (rendererFactory.end) {\n      rendererFactory.end();\n    }\n  }\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * This is used in development mode to verify that running change detection doesn't\n   * introduce other changes.\n   */\n  checkNoChanges(): void { checkNoChanges(this.context); }\n\n  attachToViewContainerRef(vcRef: viewEngine_ViewContainerRef) { this._viewContainerRef = vcRef; }\n\n  detachFromAppRef() { this._appRef = null; }\n\n  attachToAppRef(appRef: ApplicationRef) { this._appRef = appRef; }\n\n  private _lookUpContext(): T {\n    return this._context = this._view[PARENT] ![this._componentIndex] as T;\n  }\n}\n\n/** @internal */\nexport class RootViewRef<T> extends ViewRef<T> {\n  constructor(public _view: LViewData) { super(_view, null, -1); }\n\n  detectChanges(): void { detectChangesInRootView(this._view); }\n\n  checkNoChanges(): void { checkNoChangesInRootView(this._view); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef as ViewEngine_ChangeDetectorRef} from '../change_detection/change_detector_ref';\nimport {Injector, NullInjector} from '../di/injector';\nimport {ComponentFactory as viewEngine_ComponentFactory, ComponentRef as viewEngine_ComponentRef} from '../linker/component_factory';\nimport {ElementRef as ViewEngine_ElementRef} from '../linker/element_ref';\nimport {NgModuleRef as viewEngine_NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef as ViewEngine_TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef as ViewEngine_ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef as viewEngine_EmbeddedViewRef, ViewRef as viewEngine_ViewRef} from '../linker/view_ref';\nimport {Renderer2} from '../render/api';\n\nimport {assertDefined, assertGreaterThan, assertLessThan} from './assert';\nimport {NodeInjector, getParentInjectorLocation, getParentInjectorView} from './di';\nimport {_getViewData, addToViewTree, createEmbeddedViewAndNode, createLContainer, getPreviousOrParentTNode, getRenderer, renderEmbeddedTemplate} from './instructions';\nimport {ACTIVE_INDEX, LContainer, NATIVE, RENDER_PARENT, VIEWS} from './interfaces/container';\nimport {RenderFlags} from './interfaces/definition';\nimport {InjectorLocationFlags} from './interfaces/injector';\nimport {TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeFlags, TNodeType, TViewNode} from './interfaces/node';\nimport {LQueries} from './interfaces/query';\nimport {RComment, RElement, Renderer3, isProceduralRenderer} from './interfaces/renderer';\nimport {CONTEXT, HOST_NODE, LViewData, QUERIES, RENDERER, TVIEW, TView} from './interfaces/view';\nimport {assertNodeOfPossibleTypes, assertNodeType} from './node_assert';\nimport {addRemoveViewFromContainer, appendChild, detachView, findComponentView, getBeforeNodeForView, getRenderParent, insertView, removeView} from './node_manipulation';\nimport {getComponentViewByIndex, getNativeByTNode, isComponent, isLContainer} from './util';\nimport {ViewRef} from './view_ref';\n\n\n\n/**\n * Creates an ElementRef from the most recent node.\n *\n * @returns The ElementRef instance to use\n */\nexport function injectElementRef(ElementRefToken: typeof ViewEngine_ElementRef):\n    ViewEngine_ElementRef {\n  return createElementRef(ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n}\n\nlet R3ElementRef: {new (native: RElement | RComment): ViewEngine_ElementRef};\n\n/**\n * Creates an ElementRef given a node.\n *\n * @param ElementRefToken The ElementRef type\n * @param tNode The node for which you'd like an ElementRef\n * @param view The view to which the node belongs\n * @returns The ElementRef instance to use\n */\nexport function createElementRef(\n    ElementRefToken: typeof ViewEngine_ElementRef, tNode: TNode,\n    view: LViewData): ViewEngine_ElementRef {\n  if (!R3ElementRef) {\n    // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n    R3ElementRef = class ElementRef_ extends ElementRefToken {};\n  }\n  return new R3ElementRef(getNativeByTNode(tNode, view));\n}\n\nlet R3TemplateRef: {\n  new (\n      _declarationParentView: LViewData, elementRef: ViewEngine_ElementRef, _tView: TView,\n      _renderer: Renderer3, _queries: LQueries | null, _injectorIndex: number):\n      ViewEngine_TemplateRef<any>\n};\n\n/**\n * Creates a TemplateRef given a node.\n *\n * @returns The TemplateRef instance to use\n */\nexport function injectTemplateRef<T>(\n    TemplateRefToken: typeof ViewEngine_TemplateRef,\n    ElementRefToken: typeof ViewEngine_ElementRef): ViewEngine_TemplateRef<T> {\n  return createTemplateRef<T>(\n      TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n}\n\n/**\n * Creates a TemplateRef and stores it on the injector.\n *\n * @param TemplateRefToken The TemplateRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a TemplateRef\n * @param hostView The view to which the node belongs\n * @returns The TemplateRef instance to use\n */\nexport function createTemplateRef<T>(\n    TemplateRefToken: typeof ViewEngine_TemplateRef, ElementRefToken: typeof ViewEngine_ElementRef,\n    hostTNode: TNode, hostView: LViewData): ViewEngine_TemplateRef<T> {\n  if (!R3TemplateRef) {\n    // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n    R3TemplateRef = class TemplateRef_<T> extends TemplateRefToken<T> {\n      constructor(\n          private _declarationParentView: LViewData, readonly elementRef: ViewEngine_ElementRef,\n          private _tView: TView, private _renderer: Renderer3, private _queries: LQueries|null,\n          private _injectorIndex: number) {\n        super();\n      }\n\n      createEmbeddedView(\n          context: T, container?: LContainer,\n          hostTNode?: TElementNode|TContainerNode|TElementContainerNode, hostView?: LViewData,\n          index?: number): viewEngine_EmbeddedViewRef<T> {\n        const lView = createEmbeddedViewAndNode(\n            this._tView, context, this._declarationParentView, this._renderer, this._queries,\n            this._injectorIndex);\n        if (container) {\n          insertView(lView, container, hostView !, index !, hostTNode !.index);\n        }\n        renderEmbeddedTemplate(lView, this._tView, context, RenderFlags.Create);\n        const viewRef = new ViewRef(lView, context, -1);\n        viewRef._tViewNode = lView[HOST_NODE] as TViewNode;\n        return viewRef;\n      }\n    };\n  }\n\n  const hostContainer: LContainer = hostView[hostTNode.index];\n  ngDevMode && assertNodeType(hostTNode, TNodeType.Container);\n  ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n  return new R3TemplateRef(\n      hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews as TView,\n      getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n}\n\nlet R3ViewContainerRef: {\n  new (\n      lContainer: LContainer, hostTNode: TElementNode | TContainerNode | TElementContainerNode,\n      hostView: LViewData): ViewEngine_ViewContainerRef\n};\n\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nexport function injectViewContainerRef(\n    ViewContainerRefToken: typeof ViewEngine_ViewContainerRef,\n    ElementRefToken: typeof ViewEngine_ElementRef): ViewEngine_ViewContainerRef {\n  const previousTNode =\n      getPreviousOrParentTNode() as TElementNode | TElementContainerNode | TContainerNode;\n  return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, _getViewData());\n}\n\n\n/**\n * Creates a ViewContainerRef and stores it on the injector.\n *\n * @param ViewContainerRefToken The ViewContainerRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a ViewContainerRef\n * @param hostView The view to which the node belongs\n * @returns The ViewContainerRef instance to use\n */\nexport function createContainerRef(\n    ViewContainerRefToken: typeof ViewEngine_ViewContainerRef,\n    ElementRefToken: typeof ViewEngine_ElementRef,\n    hostTNode: TElementNode|TContainerNode|TElementContainerNode,\n    hostView: LViewData): ViewEngine_ViewContainerRef {\n  if (!R3ViewContainerRef) {\n    // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n    R3ViewContainerRef = class ViewContainerRef_ extends ViewContainerRefToken {\n      private _viewRefs: viewEngine_ViewRef[] = [];\n\n      constructor(\n          private _lContainer: LContainer,\n          private _hostTNode: TElementNode|TContainerNode|TElementContainerNode,\n          private _hostView: LViewData) {\n        super();\n      }\n\n      get element(): ViewEngine_ElementRef {\n        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n      }\n\n      get injector(): Injector { return new NodeInjector(this._hostTNode, this._hostView); }\n\n      /** @deprecated No replacement */\n      get parentInjector(): Injector {\n        const parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n        const parentView = getParentInjectorView(parentLocation, this._hostView);\n        const parentIndex = parentLocation & InjectorLocationFlags.InjectorIndexMask;\n        const parentTNode = parentView[TVIEW].data[parentIndex] as TElementNode | TContainerNode;\n\n        return parentLocation === -1 ? new NullInjector() :\n                                       new NodeInjector(parentTNode, parentView);\n      }\n\n      clear(): void {\n        while (this._lContainer[VIEWS].length) {\n          this.remove(0);\n        }\n      }\n\n      get(index: number): viewEngine_ViewRef|null { return this._viewRefs[index] || null; }\n\n      get length(): number { return this._lContainer[VIEWS].length; }\n\n      createEmbeddedView<C>(templateRef: ViewEngine_TemplateRef<C>, context?: C, index?: number):\n          viewEngine_EmbeddedViewRef<C> {\n        const adjustedIdx = this._adjustIndex(index);\n        const viewRef = (templateRef as any)\n                            .createEmbeddedView(\n                                context || <any>{}, this._lContainer, this._hostTNode,\n                                this._hostView, adjustedIdx);\n        (viewRef as ViewRef<any>).attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n      }\n\n      createComponent<C>(\n          componentFactory: viewEngine_ComponentFactory<C>, index?: number|undefined,\n          injector?: Injector|undefined, projectableNodes?: any[][]|undefined,\n          ngModuleRef?: viewEngine_NgModuleRef<any>|undefined): viewEngine_ComponentRef<C> {\n        const contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && contextInjector) {\n          ngModuleRef = contextInjector.get(viewEngine_NgModuleRef, null);\n        }\n\n        const componentRef =\n            componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n      }\n\n      insert(viewRef: viewEngine_ViewRef, index?: number): viewEngine_ViewRef {\n        if (viewRef.destroyed) {\n          throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        const lView = (viewRef as ViewRef<any>)._view !;\n        const adjustedIdx = this._adjustIndex(index);\n\n        insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n\n        const beforeNode =\n            getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n        addRemoveViewFromContainer(lView, true, beforeNode);\n\n        (viewRef as ViewRef<any>).attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n\n        return viewRef;\n      }\n\n      move(viewRef: viewEngine_ViewRef, newIndex: number): viewEngine_ViewRef {\n        const index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n      }\n\n      indexOf(viewRef: viewEngine_ViewRef): number { return this._viewRefs.indexOf(viewRef); }\n\n      remove(index?: number): void {\n        const adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainer, this._hostTNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n      }\n\n      detach(index?: number): viewEngine_ViewRef|null {\n        const adjustedIdx = this._adjustIndex(index, -1);\n        detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n      }\n\n      private _adjustIndex(index?: number, shift: number = 0) {\n        if (index == null) {\n          return this._lContainer[VIEWS].length + shift;\n        }\n        if (ngDevMode) {\n          assertGreaterThan(index, -1, 'index must be positive');\n          // +1 because it's legal to insert at the end.\n          assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n        }\n        return index;\n      }\n    };\n  }\n\n  ngDevMode && assertNodeOfPossibleTypes(\n                   hostTNode, TNodeType.Container, TNodeType.Element, TNodeType.ElementContainer);\n\n  let lContainer: LContainer;\n  const slotValue = hostView[hostTNode.index];\n  if (isLContainer(slotValue)) {\n    // If the host is a container, we don't need to create a new LContainer\n    lContainer = slotValue;\n    lContainer[ACTIVE_INDEX] = -1;\n  } else {\n    const comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    hostView[hostTNode.index] = lContainer =\n        createLContainer(slotValue, hostTNode, hostView, comment, true);\n\n    appendChild(comment, hostTNode, hostView);\n    addToViewTree(hostView, hostTNode.index as number, lContainer);\n  }\n\n  return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n}\n\n\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nexport function injectChangeDetectorRef(): ViewEngine_ChangeDetectorRef {\n  return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n}\n\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n *\n * @param hostTNode The node that is requesting a ChangeDetectorRef\n * @param hostView The view to which the node belongs\n * @param context The context for this change detector ref\n * @returns The ChangeDetectorRef to use\n */\nexport function createViewRef(\n    hostTNode: TNode, hostView: LViewData, context: any): ViewEngine_ChangeDetectorRef {\n  if (isComponent(hostTNode)) {\n    const componentIndex = hostTNode.flags >> TNodeFlags.DirectiveStartingIndexShift;\n    const componentView = getComponentViewByIndex(hostTNode.index, hostView);\n    return new ViewRef(componentView, context, componentIndex);\n  } else if (hostTNode.type === TNodeType.Element) {\n    const hostComponentView = findComponentView(hostView);\n    return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n  }\n  return null !;\n}\n\nfunction getOrCreateRenderer2(view: LViewData): Renderer2 {\n  const renderer = view[RENDERER];\n  if (isProceduralRenderer(renderer)) {\n    return renderer as Renderer2;\n  } else {\n    throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n  }\n}\n\n/** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\nexport function injectRenderer2(): Renderer2 {\n  return getOrCreateRenderer2(_getViewData());\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectChangeDetectorRef, injectElementRef, injectRenderer2, injectTemplateRef, injectViewContainerRef} from '../../render3/view_engine_compatibility';\n\nexport const R3_ELEMENT_REF_FACTORY = injectElementRef;\nexport const R3_TEMPLATE_REF_FACTORY = injectTemplateRef;\nexport const R3_CHANGE_DETECTOR_REF_FACTORY = injectChangeDetectorRef;\nexport const R3_VIEW_CONTAINER_REF_FACTORY = injectViewContainerRef;\nexport const R3_RENDERER2_FACTORY = injectRenderer2;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ivyOn from './ivy_switch_on';\n\nfunction noopFactory(...tokens: any[]): any {}\n\ntype FactoryFunction<T = any> = (...tokens: any[]) => T;\n\nexport const R3_ELEMENT_REF_FACTORY__POST_NGCC__: FactoryFunction = ivyOn.R3_ELEMENT_REF_FACTORY;\nexport const R3_TEMPLATE_REF_FACTORY__POST_NGCC__: FactoryFunction = ivyOn.R3_TEMPLATE_REF_FACTORY;\nexport const R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__: FactoryFunction =\n    ivyOn.R3_CHANGE_DETECTOR_REF_FACTORY;\nexport const R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__: FactoryFunction =\n    ivyOn.R3_VIEW_CONTAINER_REF_FACTORY;\nexport const R3_RENDERER2_FACTORY__POST_NGCC__: FactoryFunction = ivyOn.R3_RENDERER2_FACTORY;\n\n\nexport const R3_ELEMENT_REF_FACTORY__PRE_NGCC__ = noopFactory;\nexport const R3_TEMPLATE_REF_FACTORY__PRE_NGCC__ = noopFactory;\nexport const R3_CHANGE_DETECTOR_REF_FACTORY__PRE_NGCC__ = noopFactory;\nexport const R3_VIEW_CONTAINER_REF_FACTORY__PRE_NGCC__ = noopFactory;\nexport const R3_RENDERER2_FACTORY__PRE_NGCC__ = noopFactory;\n\nexport let R3_ELEMENT_REF_FACTORY = R3_ELEMENT_REF_FACTORY__PRE_NGCC__;\nexport let R3_TEMPLATE_REF_FACTORY = R3_TEMPLATE_REF_FACTORY__PRE_NGCC__;\nexport let R3_CHANGE_DETECTOR_REF_FACTORY = R3_CHANGE_DETECTOR_REF_FACTORY__PRE_NGCC__;\nexport let R3_VIEW_CONTAINER_REF_FACTORY = R3_VIEW_CONTAINER_REF_FACTORY__PRE_NGCC__;\nexport let R3_RENDERER2_FACTORY = R3_RENDERER2_FACTORY__PRE_NGCC__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {R3_ELEMENT_REF_FACTORY} from '../ivy_switch/runtime/index';\n\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nexport class ElementRef<T = any> {\n  /**\n   * The underlying native element or `null` if direct access to native elements is not supported\n   * (e.g. when the application runs in a web worker).\n   *\n   * <div class=\"callout is-critical\">\n   *   <header>Use with caution</header>\n   *   <p>\n   *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n   *    data-binding provided by Angular instead. Alternatively you can take a look at {@link\n   * Renderer2}\n   *    which provides API that can safely be used even when direct access to native elements is not\n   *    supported.\n   *   </p>\n   *   <p>\n   *    Relying on direct DOM access creates tight coupling between your application and rendering\n   *    layers which will make it impossible to separate the two and deploy your application into a\n   *    web worker.\n   *   </p>\n   * </div>\n   *\n   */\n  public nativeElement: T;\n\n  constructor(nativeElement: T) { this.nativeElement = nativeElement; }\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => ElementRef = () => R3_ELEMENT_REF_FACTORY(ElementRef);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Injector} from '../di/injector';\nimport {R3_RENDERER2_FACTORY} from '../ivy_switch/runtime/index';\nimport {ViewEncapsulation} from '../metadata/view';\n\n\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n * @publicApi\n */\nexport class RenderComponentType {\n  constructor(\n      public id: string, public templateUrl: string, public slotCount: number,\n      public encapsulation: ViewEncapsulation, public styles: Array<string|any[]>,\n      public animations: any) {}\n}\n\n/**\n * @deprecated Debug info is handled internally in the view engine now.\n */\nexport abstract class RenderDebugInfo {\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get source(): string;\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @publicApi\n */\nexport abstract class Renderer {\n  abstract selectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract createViewRoot(hostElement: any): any;\n\n  abstract createTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createText(parentElement: any, value: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract projectNodes(parentElement: any, nodes: any[]): void;\n\n  abstract attachViewAfter(node: any, viewRootNodes: any[]): void;\n\n  abstract detachView(viewRootNodes: any[]): void;\n\n  abstract destroyView(hostElement: any, viewAllNodes: any[]): void;\n\n  abstract listen(renderElement: any, name: string, callback: Function): Function;\n\n  abstract listenGlobal(target: string, name: string, callback: Function): Function;\n\n  abstract setElementProperty(renderElement: any, propertyName: string, propertyValue: any): void;\n\n  abstract setElementAttribute(renderElement: any, attributeName: string, attributeValue?: string):\n      void;\n\n  /**\n   * Used only in debug mode to serialize property changes to dom nodes as attributes.\n   */\n  abstract setBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string):\n      void;\n\n  abstract setElementClass(renderElement: any, className: string, isAdd: boolean): void;\n\n  abstract setElementStyle(renderElement: any, styleName: string, styleValue?: string): void;\n\n  abstract invokeElementMethod(renderElement: any, methodName: string, args?: any[]): void;\n\n  abstract setText(renderNode: any, text: string): void;\n\n  abstract animate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]): any;\n}\n\nexport const Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @publicApi\n */\nexport abstract class RootRenderer {\n  abstract renderComponent(componentType: RenderComponentType): Renderer;\n}\n\n/**\n * Used by `RendererFactory2` to associate custom rendering data and styles\n * with a rendering implementation.\n *  @publicApi\n */\nexport interface RendererType2 {\n  /**\n   * A unique identifying string for the new renderer, used when creating\n   * unique styles for encapsulation.\n   */\n  id: string;\n  /**\n   * The view encapsulation type, which determines how styles are applied to\n   * DOM elements. One of\n   * - `Emulated` (default): Emulate native scoping of styles.\n   * - `Native`: Use the native encapsulation mechanism of the renderer.\n   * - `ShadowDom`: Use modern [Shadow\n   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * create a ShadowRoot for component's host element.\n   * - `None`: Do not provide any template or style encapsulation.\n   */\n  encapsulation: ViewEncapsulation;\n  /**\n   * Defines CSS styles to be stored on a renderer instance.\n   */\n  styles: (string|any[])[];\n  /**\n   * Defines arbitrary developer-defined data to be stored on a renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  data: {[kind: string]: any};\n}\n\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * @publicApi\n */\nexport abstract class RendererFactory2 {\n  /**\n   * Creates and initializes a custom renderer for a host DOM element.\n   * @param hostElement The element to render.\n   * @param type The base class to implement.\n   * @returns The new custom renderer instance.\n   */\n  abstract createRenderer(hostElement: any, type: RendererType2|null): Renderer2;\n  /**\n   * A callback invoked when rendering has begun.\n   */\n  abstract begin?(): void;\n  /**\n   * A callback invoked when rendering has completed.\n   */\n  abstract end?(): void;\n  /**\n   * Use with animations test-only mode. Notifies the test when rendering has completed.\n   * @returns The asynchronous result of the developer-defined function.\n   */\n  abstract whenRenderingDone?(): Promise<any>;\n}\n\n/**\n * Flags for renderer-specific style modifiers.\n * @publicApi\n */\nexport enum RendererStyleFlags2 {\n  /**\n   * Marks a style as important.\n   */\n  Important = 1 << 0,\n  /**\n   * Marks a style as using dash case naming (this-is-dash-case).\n   */\n  DashCase = 1 << 1\n}\n\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * @publicApi\n */\nexport abstract class Renderer2 {\n  /**\n   * Use to store arbitrary developer-defined data on a renderer instance,\n   * as an object containing key-value pairs.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  abstract get data(): {[key: string]: any};\n\n  /**\n   * Implement this callback to destroy the renderer or the host element.\n   */\n  abstract destroy(): void;\n  /**\n   * Implement this callback to create an instance of the host element.\n   * @param name An identifying name for the new element, unique within the namespace.\n   * @param namespace The namespace for the new element.\n   * @returns The new element.\n   */\n  abstract createElement(name: string, namespace?: string|null): any;\n  /**\n   * Implement this callback to add a comment to the DOM of the host element.\n   * @param value The comment text.\n   * @returns The modified element.\n   */\n  abstract createComment(value: string): any;\n\n  /**\n   * Implement this callback to add text to the DOM of the host element.\n   * @param value The text string.\n   * @returns The modified element.\n   */\n  abstract createText(value: string): any;\n  /**\n   * If null or undefined, the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  // TODO(issue/24571): remove '!'.\n  destroyNode !: ((node: any) => void) | null;\n  /**\n   * Appends a child to a given parent node in the host element DOM.\n   * @param parent The parent node.\n   * @param newChild The new child node.\n   */\n  abstract appendChild(parent: any, newChild: any): void;\n  /**\n   * Implement this callback to insert a child node at a given position in a parent node\n   * in the host element DOM.\n   * @param parent The parent node.\n   * @param newChild The new child nodes.\n   * @param refChild The existing child node that should precede the new node.\n   */\n  abstract insertBefore(parent: any, newChild: any, refChild: any): void;\n  /**\n   * Implement this callback to remove a child node from the host element's DOM.\n   * @param parent The parent node.\n   * @param oldChild The child node to remove.\n   */\n  abstract removeChild(parent: any, oldChild: any): void;\n  /**\n   * Implement this callback to prepare an element to be bootstrapped\n   * as a root element, and return the element instance.\n   * @param selectorOrNode The DOM element.\n   * @param preserveContent Whether the contents of the root element\n   * should be preserved, or cleared upon bootstrap (default behavior).\n   * Use with `ViewEncapsulation.ShadowDom` to allow simple native\n   * content projection via `<slot>` elements.\n   * @returns The root element.\n   */\n  abstract selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any;\n  /**\n   * Implement this callback to get the parent of a given node\n   * in the host element's DOM.\n   * @param node The child node to query.\n   * @returns The parent node, or null if there is no parent.\n   * For WebWorkers, always returns true.\n   * This is because the check is synchronous,\n   * and the caller can't rely on checking for null.\n   */\n  abstract parentNode(node: any): any;\n  /**\n   * Implement this callback to get the next sibling node of a given node\n   * in the host element's DOM.\n   * @returns The sibling node, or null if there is no sibling.\n   * For WebWorkers, always returns a value.\n   * This is because the check is synchronous,\n   * and the caller can't rely on checking for null.\n   */\n  abstract nextSibling(node: any): any;\n  /**\n   * Implement this callback to set an attribute value for an element in the DOM.\n   * @param el The element.\n   * @param name The attribute name.\n   * @param value The new value.\n   * @param namespace The namespace.\n   */\n  abstract setAttribute(el: any, name: string, value: string, namespace?: string|null): void;\n\n  /**\n   * Implement this callback to remove an attribute from an element in the DOM.\n   * @param el The element.\n   * @param name The attribute name.\n   * @param namespace The namespace.\n   */\n  abstract removeAttribute(el: any, name: string, namespace?: string|null): void;\n  /**\n   * Implement this callback to add a class to an element in the DOM.\n   * @param el The element.\n   * @param name The class name.\n   */\n  abstract addClass(el: any, name: string): void;\n\n  /**\n   * Implement this callback to remove a class from an element in the DOM.\n   * @param el The element.\n   * @param name The class name.\n   */\n  abstract removeClass(el: any, name: string): void;\n\n  /**\n   * Implement this callback to set a CSS style for an element in the DOM.\n   * @param el The element.\n   * @param style The name of the style.\n   * @param value The new value.\n   * @param flags Flags for style variations. No flags are set by default.\n   */\n  abstract setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void;\n\n  /**\n   * Implement this callback to remove the value from a CSS style for an element in the DOM.\n   * @param el The element.\n   * @param style The name of the style.\n   * @param flags Flags for style variations to remove, if set. ???\n   */\n  abstract removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void;\n\n  /**\n   * Implement this callback to set the value of a property of an element in the DOM.\n   * @param el The element.\n   * @param name The property name.\n   * @param value The new value.\n   */\n  abstract setProperty(el: any, name: string, value: any): void;\n\n  /**\n   * Implement this callback to set the value of a node in the host element.\n   * @param node The node.\n   * @param value The new value.\n   */\n  abstract setValue(node: any, value: string): void;\n\n  /**\n   * Implement this callback to start an event listener.\n   * @param target The context in which to listen for events. Can be\n   * the entire window or document, the body of the document, or a specific\n   * DOM element.\n   * @param eventName The event to listen for.\n   * @param callback A handler function to invoke when the event occurs.\n   * @returns An \"unlisten\" function for disposing of this handler.\n   */\n  abstract listen(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void): () => void;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => Renderer2 = () => R3_RENDERER2_FACTORY();\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef as ViewEngine_ChangeDetectorRef} from '../change_detection/change_detector_ref';\nimport {InjectionToken} from '../di/injection_token';\nimport {Injector, inject} from '../di/injector';\nimport {ComponentFactory as viewEngine_ComponentFactory, ComponentRef as viewEngine_ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryResolver as viewEngine_ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef as viewEngine_ElementRef} from '../linker/element_ref';\nimport {NgModuleRef as viewEngine_NgModuleRef} from '../linker/ng_module_factory';\nimport {RendererFactory2} from '../render/api';\nimport {Type} from '../type';\n\nimport {assertComponentType, assertDefined} from './assert';\nimport {LifecycleHooksFeature, createRootComponent, createRootComponentView, createRootContext} from './component';\nimport {getComponentDef} from './definition';\nimport {adjustBlueprintForNewNode, createLViewData, createNodeAtIndex, createTView, createViewNode, elementCreate, enterView, locateHostElement, renderEmbeddedTemplate} from './instructions';\nimport {ComponentDef, RenderFlags} from './interfaces/definition';\nimport {TElementNode, TNode, TNodeType, TViewNode} from './interfaces/node';\nimport {RElement, RendererFactory3, domRendererFactory3} from './interfaces/renderer';\nimport {FLAGS, INJECTOR, LViewData, LViewFlags, RootContext, TVIEW} from './interfaces/view';\nimport {getTNode} from './util';\nimport {createElementRef} from './view_engine_compatibility';\nimport {RootViewRef, ViewRef} from './view_ref';\n\nexport class ComponentFactoryResolver extends viewEngine_ComponentFactoryResolver {\n  resolveComponentFactory<T>(component: Type<T>): viewEngine_ComponentFactory<T> {\n    ngDevMode && assertComponentType(component);\n    const componentDef = getComponentDef(component) !;\n    return new ComponentFactory(componentDef);\n  }\n}\n\nfunction toRefArray(map: {[key: string]: string}): {propName: string; templateName: string;}[] {\n  const array: {propName: string; templateName: string;}[] = [];\n  for (let nonMinified in map) {\n    if (map.hasOwnProperty(nonMinified)) {\n      const minified = map[nonMinified];\n      array.push({propName: minified, templateName: nonMinified});\n    }\n  }\n  return array;\n}\n\n/**\n * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n */\nexport const ROOT_CONTEXT = new InjectionToken<RootContext>(\n    'ROOT_CONTEXT_TOKEN',\n    {providedIn: 'root', factory: () => createRootContext(inject(SCHEDULER))});\n\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nexport const SCHEDULER = new InjectionToken<((fn: () => void) => void)>('SCHEDULER_TOKEN', {\n  providedIn: 'root',\n  factory: () => {\n    const useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n    return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n  },\n});\n\n/**\n * A function used to wrap the `RendererFactory2`.\n * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n */\nexport const WRAP_RENDERER_FACTORY2 =\n    new InjectionToken<(rf: RendererFactory2) => RendererFactory2>('WRAP_RENDERER_FACTORY2');\n\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nexport class ComponentFactory<T> extends viewEngine_ComponentFactory<T> {\n  selector: string;\n  componentType: Type<any>;\n  ngContentSelectors: string[];\n\n  get inputs(): {propName: string; templateName: string;}[] {\n    return toRefArray(this.componentDef.inputs);\n  }\n\n  get outputs(): {propName: string; templateName: string;}[] {\n    return toRefArray(this.componentDef.outputs);\n  }\n\n  constructor(private componentDef: ComponentDef<any>) {\n    super();\n    this.componentType = componentDef.type;\n    this.selector = componentDef.selectors[0][0] as string;\n    this.ngContentSelectors = [];\n  }\n\n  create(\n      injector: Injector, projectableNodes?: any[][]|undefined, rootSelectorOrNode?: any,\n      ngModule?: viewEngine_NgModuleRef<any>|undefined): viewEngine_ComponentRef<T> {\n    const isInternalRootView = rootSelectorOrNode === undefined;\n\n    let rendererFactory: RendererFactory3;\n\n    if (ngModule) {\n      const wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, (v: RendererFactory2) => v);\n      rendererFactory = wrapper(ngModule.injector.get(RendererFactory2)) as RendererFactory3;\n    } else {\n      rendererFactory = domRendererFactory3;\n    }\n\n    const hostRNode = isInternalRootView ?\n        elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n        locateHostElement(rendererFactory, rootSelectorOrNode);\n\n    // The first index of the first selector is the tag name.\n    const componentTag = this.componentDef.selectors ![0] ![0] as string;\n\n    const rootFlags = this.componentDef.onPush ? LViewFlags.Dirty | LViewFlags.IsRoot :\n                                                 LViewFlags.CheckAlways | LViewFlags.IsRoot;\n    const rootContext: RootContext = ngModule && !isInternalRootView ?\n        ngModule.injector.get(ROOT_CONTEXT) :\n        createRootContext(requestAnimationFrame.bind(window));\n\n    const renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n    // Create the root view. Uses empty TView and ContentTemplate.\n    const rootView: LViewData = createLViewData(\n        renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n    rootView[INJECTOR] = ngModule && ngModule.injector || null;\n\n    // rootView is the parent when bootstrapping\n    const oldView = enterView(rootView, null);\n\n    let component: T;\n    let tElementNode: TElementNode;\n    try {\n      if (rendererFactory.begin) rendererFactory.begin();\n\n      const componentView =\n          createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n      tElementNode = getTNode(0, rootView) as TElementNode;\n\n      // Transform the arrays of native nodes into a structure that can be consumed by the\n      // projection instruction. This is needed to support the reprojection of these nodes.\n      if (projectableNodes) {\n        let index = 0;\n        const projection: TNode[] = tElementNode.projection = [];\n        for (let i = 0; i < projectableNodes.length; i++) {\n          const nodeList = projectableNodes[i];\n          let firstTNode: TNode|null = null;\n          let previousTNode: TNode|null = null;\n          for (let j = 0; j < nodeList.length; j++) {\n            adjustBlueprintForNewNode(rootView);\n            const tNode =\n                createNodeAtIndex(++index, TNodeType.Element, nodeList[j] as RElement, null, null);\n            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n            previousTNode = tNode;\n          }\n          projection.push(firstTNode !);\n        }\n      }\n\n      // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n      // executed here?\n      // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n      component = createRootComponent(\n          hostRNode, componentView, this.componentDef, rootView, rootContext,\n          [LifecycleHooksFeature]);\n\n      // Execute the template in creation mode only, and then turn off the CreationMode flag\n      renderEmbeddedTemplate(componentView, componentView[TVIEW], component, RenderFlags.Create);\n      componentView[FLAGS] &= ~LViewFlags.CreationMode;\n    } finally {\n      enterView(oldView, null);\n      if (rendererFactory.end) rendererFactory.end();\n    }\n\n    const componentRef = new ComponentRef(\n        this.componentType, component, rootView, injector,\n        createElementRef(viewEngine_ElementRef, tElementNode, rootView));\n\n    if (isInternalRootView) {\n      // The host element of the internal root view is attached to the component's host view node\n      componentRef.hostView._tViewNode !.child = tElementNode;\n    }\n    return componentRef;\n  }\n}\n\nconst componentFactoryResolver: ComponentFactoryResolver = new ComponentFactoryResolver();\n\n/**\n * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n * ComponentFactoryResolver\n * already exists, retrieves the existing ComponentFactoryResolver.\n *\n * @returns The ComponentFactoryResolver instance to use\n */\nexport function injectComponentFactoryResolver(): viewEngine_ComponentFactoryResolver {\n  return componentFactoryResolver;\n}\n\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nexport class ComponentRef<T> extends viewEngine_ComponentRef<T> {\n  destroyCbs: (() => void)[]|null = [];\n  injector: Injector;\n  instance: T;\n  hostView: ViewRef<T>;\n  changeDetectorRef: ViewEngine_ChangeDetectorRef;\n  componentType: Type<T>;\n\n  constructor(\n      componentType: Type<T>, instance: T, rootView: LViewData, injector: Injector,\n      public location: viewEngine_ElementRef) {\n    super();\n    this.instance = instance;\n    this.hostView = this.changeDetectorRef = new RootViewRef<T>(rootView);\n    this.hostView._tViewNode = createViewNode(-1, rootView);\n    this.injector = injector;\n    this.componentType = componentType;\n  }\n\n  destroy(): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs !.forEach(fn => fn());\n    this.destroyCbs = null;\n  }\n  onDestroy(callback: () => void): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs !.push(callback);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertEqual, assertLessThan} from './assert';\nimport {NO_CHANGE, _getViewData, adjustBlueprintForNewNode, bindingUpdated, bindingUpdated2, bindingUpdated3, bindingUpdated4, createNodeAtIndex, getRenderer, load, resetComponentState} from './instructions';\nimport {LContainer, NATIVE, RENDER_PARENT} from './interfaces/container';\nimport {TElementNode, TNode, TNodeType} from './interfaces/node';\nimport {RComment, RElement} from './interfaces/renderer';\nimport {StylingContext} from './interfaces/styling';\nimport {BINDING_INDEX, HEADER_OFFSET, HOST_NODE, TVIEW} from './interfaces/view';\nimport {appendChild, createTextNode, removeChild} from './node_manipulation';\nimport {getNativeByIndex, getNativeByTNode, getTNode, isLContainer, stringify} from './util';\n\n\n\n/**\n * A list of flags to encode the i18n instructions used to translate the template.\n * We shift the flags by 29 so that 30 & 31 & 32 bits contains the instructions.\n */\nexport const enum I18nInstructions {\n  Text = 1 << 29,\n  Element = 2 << 29,\n  Expression = 3 << 29,\n  TemplateRoot = 4 << 29,\n  Any = 5 << 29,\n  CloseNode = 6 << 29,\n  RemoveNode = 7 << 29,\n  /** Used to decode the number encoded with the instruction. */\n  IndexMask = (1 << 29) - 1,\n  /** Used to test the type of instruction. */\n  InstructionMask = ~((1 << 29) - 1),\n}\n\n/**\n * Represents the instructions used to translate the template.\n * Instructions can be a placeholder index, a static text or a simple bit field (`I18nFlag`).\n * When the instruction is the flag `Text`, it is always followed by its text value.\n */\nexport type I18nInstruction = number | string;\n/**\n * Represents the instructions used to translate attributes containing expressions.\n * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n * value will be concatenated into the final translation.\n */\nexport type I18nExpInstruction = number | string;\n/** Mapping of placeholder names to their absolute indexes in their templates. */\nexport type PlaceholderMap = {\n  [name: string]: number\n};\nconst i18nTagRegex = /{\\$([^}]+)}/g;\n\n/**\n * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n * indexes of their corresponding expression nodes to return a list of instructions for each\n * template function.\n *\n * Because embedded templates have different indexes for each placeholder, each parameter (except\n * the translation) is an array, where each value corresponds to a different template, by order of\n * appearance.\n *\n * @param translation A translation string where placeholders are represented by `{$name}`\n * @param elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param templateRoots An array of template roots whose content should be ignored when\n * generating the instructions for their parent template.\n * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n *\n * @returns A list of instructions used to translate each template.\n */\nexport function i18nMapping(\n    translation: string, elements: (PlaceholderMap | null)[] | null,\n    expressions?: (PlaceholderMap | null)[] | null, templateRoots?: string[] | null,\n    lastChildIndex?: number | null): I18nInstruction[][] {\n  const translationParts = translation.split(i18nTagRegex);\n  const nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n  const instructions: I18nInstruction[][] = (new Array(nbTemplates)).fill(undefined);\n\n  generateMappingInstructions(\n      0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n\n  return instructions;\n}\n\n/**\n * Internal function that reads the translation parts and generates a set of instructions for each\n * template.\n *\n * See `i18nMapping()` for more details.\n *\n * @param tmplIndex The order of appearance of the template.\n * 0 for the root template, following indexes match the order in `templateRoots`.\n * @param partIndex The current index in `translationParts`.\n * @param translationParts The translation string split into an array of placeholders and text\n * elements.\n * @param instructions The current list of instructions to update.\n * @param elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param templateRoots An array of template roots whose content should be ignored when\n * generating the instructions for their parent template.\n * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n *\n * @returns the current index in `translationParts`\n */\nfunction generateMappingInstructions(\n    tmplIndex: number, partIndex: number, translationParts: string[],\n    instructions: I18nInstruction[][], elements: (PlaceholderMap | null)[] | null,\n    expressions?: (PlaceholderMap | null)[] | null, templateRoots?: string[] | null,\n    lastChildIndex?: number | null): number {\n  const tmplInstructions: I18nInstruction[] = [];\n  const phVisited: string[] = [];\n  let openedTagCount = 0;\n  let maxIndex = 0;\n  let currentElements: PlaceholderMap|null =\n      elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n  let currentExpressions: PlaceholderMap|null =\n      expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n\n  instructions[tmplIndex] = tmplInstructions;\n\n  for (; partIndex < translationParts.length; partIndex++) {\n    // The value can either be text or the name of a placeholder (element/template root/expression)\n    const value = translationParts[partIndex];\n\n    // Odd indexes are placeholders\n    if (partIndex & 1) {\n      let phIndex;\n      if (currentElements && currentElements[value] !== undefined) {\n        phIndex = currentElements[value];\n        // The placeholder represents a DOM element, add an instruction to move it\n        let templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n        if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n          // This is a template root, it has no closing tag, not treating it as an element\n          tmplInstructions.push(phIndex | I18nInstructions.TemplateRoot);\n        } else {\n          tmplInstructions.push(phIndex | I18nInstructions.Element);\n          openedTagCount++;\n        }\n        phVisited.push(value);\n      } else if (currentExpressions && currentExpressions[value] !== undefined) {\n        phIndex = currentExpressions[value];\n        // The placeholder represents an expression, add an instruction to move it\n        tmplInstructions.push(phIndex | I18nInstructions.Expression);\n        phVisited.push(value);\n      } else {\n        // It is a closing tag\n        tmplInstructions.push(I18nInstructions.CloseNode);\n\n        if (tmplIndex > 0) {\n          openedTagCount--;\n\n          // If we have reached the closing tag for this template, exit the loop\n          if (openedTagCount === 0) {\n            break;\n          }\n        }\n      }\n\n      if (phIndex !== undefined && phIndex > maxIndex) {\n        maxIndex = phIndex;\n      }\n\n      if (templateRoots) {\n        const newTmplIndex = templateRoots.indexOf(value) + 1;\n        if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n          partIndex = generateMappingInstructions(\n              newTmplIndex, partIndex, translationParts, instructions, elements, expressions,\n              templateRoots, lastChildIndex);\n        }\n      }\n\n    } else if (value) {\n      // It's a non-empty string, create a text node\n      tmplInstructions.push(I18nInstructions.Text, value);\n    }\n  }\n\n  // Add instructions to remove elements that are not used in the translation\n  if (elements) {\n    const tmplElements = elements[tmplIndex];\n\n    if (tmplElements) {\n      const phKeys = Object.keys(tmplElements);\n\n      for (let i = 0; i < phKeys.length; i++) {\n        const ph = phKeys[i];\n\n        if (phVisited.indexOf(ph) === -1) {\n          let index = tmplElements[ph];\n          // Add an instruction to remove the element\n          tmplInstructions.push(index | I18nInstructions.RemoveNode);\n\n          if (index > maxIndex) {\n            maxIndex = index;\n          }\n        }\n      }\n    }\n  }\n\n  // Add instructions to remove expressions that are not used in the translation\n  if (expressions) {\n    const tmplExpressions = expressions[tmplIndex];\n\n    if (tmplExpressions) {\n      const phKeys = Object.keys(tmplExpressions);\n\n      for (let i = 0; i < phKeys.length; i++) {\n        const ph = phKeys[i];\n\n        if (phVisited.indexOf(ph) === -1) {\n          let index = tmplExpressions[ph];\n          if (ngDevMode) {\n            assertLessThan(\n                index.toString(2).length, 28, `Index ${index} is too big and will overflow`);\n          }\n          // Add an instruction to remove the expression\n          tmplInstructions.push(index | I18nInstructions.RemoveNode);\n\n          if (index > maxIndex) {\n            maxIndex = index;\n          }\n        }\n      }\n    }\n  }\n\n  if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n    // The current parent is an ng-container and it has more children after the translation that we\n    // need to append to keep the order of the DOM nodes correct\n    for (let i = maxIndex + 1; i <= lastChildIndex; i++) {\n      if (ngDevMode) {\n        assertLessThan(i.toString(2).length, 28, `Index ${i} is too big and will overflow`);\n      }\n      tmplInstructions.push(i | I18nInstructions.Any);\n    }\n  }\n\n  return partIndex;\n}\n\nfunction appendI18nNode(tNode: TNode, parentTNode: TNode, previousTNode: TNode): TNode {\n  if (ngDevMode) {\n    ngDevMode.rendererMoveNode++;\n  }\n\n  const viewData = _getViewData();\n\n  // On first pass, re-organize node tree to put this node in the correct position.\n  const firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n  if (firstTemplatePass) {\n    if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n      tNode.next = parentTNode.child;\n      parentTNode.child = tNode;\n    } else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n      tNode.next = previousTNode.next;\n      previousTNode.next = tNode;\n    } else {\n      tNode.next = null;\n    }\n\n    if (parentTNode !== viewData[HOST_NODE]) {\n      tNode.parent = parentTNode as TElementNode;\n    }\n  }\n\n  appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n\n  const slotValue = viewData[tNode.index];\n  if (tNode.type !== TNodeType.Container && isLContainer(slotValue)) {\n    // Nodes that inject ViewContainerRef also have a comment node that should be moved\n    appendChild(slotValue[NATIVE], tNode, viewData);\n  }\n\n  return tNode;\n}\n\nexport function i18nAttribute(index: number, attrs: any[]): void {\n  // placeholder for i18nAttribute function\n}\n\nexport function i18nExp(expression: any): void {\n  // placeholder for i18nExp function\n}\n\nexport function i18nStart(index: number, message: string, subTemplateIndex: number = 0): void {\n  // placeholder for i18nExp function\n}\n\nexport function i18nEnd(): void {\n  // placeholder for i18nEnd function\n}\n\n/**\n * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n *\n * @param startIndex Index of the first element to translate (for instance the first child of the\n * element with the i18n attribute).\n * @param instructions The list of instructions to apply on the current view.\n */\nexport function i18nApply(startIndex: number, instructions: I18nInstruction[]): void {\n  const viewData = _getViewData();\n  if (ngDevMode) {\n    assertEqual(\n        viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex,\n        'i18nApply should be called before any binding');\n  }\n\n  if (!instructions) {\n    return;\n  }\n\n  const renderer = getRenderer();\n  const startTNode = getTNode(startIndex, viewData);\n  let localParentTNode: TNode = startTNode.parent || viewData[HOST_NODE] !;\n  let localPreviousTNode: TNode = localParentTNode;\n  resetComponentState();  // We don't want to add to the tree with the wrong previous node\n\n  for (let i = 0; i < instructions.length; i++) {\n    const instruction = instructions[i] as number;\n    switch (instruction & I18nInstructions.InstructionMask) {\n      case I18nInstructions.Element:\n        const elementTNode = getTNode(instruction & I18nInstructions.IndexMask, viewData);\n        localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n        localParentTNode = elementTNode;\n        break;\n      case I18nInstructions.Expression:\n      case I18nInstructions.TemplateRoot:\n      case I18nInstructions.Any:\n        const nodeIndex = instruction & I18nInstructions.IndexMask;\n        localPreviousTNode =\n            appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n        break;\n      case I18nInstructions.Text:\n        if (ngDevMode) {\n          ngDevMode.rendererCreateTextNode++;\n        }\n        const value = instructions[++i];\n        const textRNode = createTextNode(value, renderer);\n        // If we were to only create a `RNode` then projections won't move the text.\n        // Create text node at the current end of viewData. Must subtract header offset because\n        // createNodeAtIndex takes a raw index (not adjusted by header offset).\n        adjustBlueprintForNewNode(viewData);\n        const textTNode = createNodeAtIndex(\n            viewData.length - 1 - HEADER_OFFSET, TNodeType.Element, textRNode, null, null);\n        localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n        resetComponentState();\n        break;\n      case I18nInstructions.CloseNode:\n        localPreviousTNode = localParentTNode;\n        localParentTNode = localParentTNode.parent || viewData[HOST_NODE] !;\n        break;\n      case I18nInstructions.RemoveNode:\n        if (ngDevMode) {\n          ngDevMode.rendererRemoveNode++;\n        }\n        const removeIndex = instruction & I18nInstructions.IndexMask;\n        const removedElement: RElement|RComment = getNativeByIndex(removeIndex, viewData);\n        const removedTNode = getTNode(removeIndex, viewData);\n        removeChild(removedTNode, removedElement || null, viewData);\n\n        const slotValue = load(removeIndex) as RElement | RComment | LContainer | StylingContext;\n        if (isLContainer(slotValue)) {\n          const lContainer = slotValue as LContainer;\n          if (removedTNode.type !== TNodeType.Container) {\n            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n          }\n          removedTNode.detached = true;\n          lContainer[RENDER_PARENT] = null;\n        }\n        break;\n    }\n  }\n}\n\n/**\n * Takes a translation string and the initial list of expressions and returns a list of instructions\n * that will be used to translate an attribute.\n * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n * value will be concatenated into the final translation.\n */\nexport function i18nExpMapping(\n    translation: string, placeholders: PlaceholderMap): I18nExpInstruction[] {\n  const staticText: I18nExpInstruction[] = translation.split(i18nTagRegex);\n  // odd indexes are placeholders\n  for (let i = 1; i < staticText.length; i += 2) {\n    staticText[i] = placeholders[staticText[i]];\n  }\n  return staticText;\n}\n\n/**\n * Checks if the value of an expression has changed and replaces it by its value in a translation,\n * or returns NO_CHANGE.\n *\n * @param instructions A list of instructions that will be used to translate an attribute.\n * @param v0 value checked for change.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function i18nInterpolation1(instructions: I18nExpInstruction[], v0: any): string|NO_CHANGE {\n  const different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  let res = '';\n  for (let i = 0; i < instructions.length; i++) {\n    // Odd indexes are bindings\n    if (i & 1) {\n      res += stringify(v0);\n    } else {\n      res += instructions[i];\n    }\n  }\n\n  return res;\n}\n\n/**\n * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param instructions A list of instructions that will be used to translate an attribute.\n * @param v0 value checked for change.\n * @param v1 value checked for change.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function i18nInterpolation2(instructions: I18nExpInstruction[], v0: any, v1: any): string|\n    NO_CHANGE {\n  const viewData = _getViewData();\n  const different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n  viewData[BINDING_INDEX] += 2;\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  let res = '';\n  for (let i = 0; i < instructions.length; i++) {\n    // Odd indexes are bindings\n    if (i & 1) {\n      // Extract bits\n      const idx = instructions[i] as number;\n      const b1 = idx & 1;\n      // Get the value from the argument vx where x = idx\n      const value = b1 ? v1 : v0;\n\n      res += stringify(value);\n    } else {\n      res += instructions[i];\n    }\n  }\n\n  return res;\n}\n\n/**\n * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param instructions A list of instructions that will be used to translate an attribute.\n * @param v0 value checked for change.\n * @param v1 value checked for change.\n * @param v2 value checked for change.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function i18nInterpolation3(\n    instructions: I18nExpInstruction[], v0: any, v1: any, v2: any): string|NO_CHANGE {\n  const viewData = _getViewData();\n  const different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n  viewData[BINDING_INDEX] += 3;\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  let res = '';\n  for (let i = 0; i < instructions.length; i++) {\n    // Odd indexes are bindings\n    if (i & 1) {\n      // Extract bits\n      const idx = instructions[i] as number;\n      const b2 = idx & 2;\n      const b1 = idx & 1;\n      // Get the value from the argument vx where x = idx\n      const value = b2 ? v2 : (b1 ? v1 : v0);\n\n      res += stringify(value);\n    } else {\n      res += instructions[i];\n    }\n  }\n\n  return res;\n}\n\n/**\n * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param instructions A list of instructions that will be used to translate an attribute.\n * @param v0 value checked for change.\n * @param v1 value checked for change.\n * @param v2 value checked for change.\n * @param v3 value checked for change.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function i18nInterpolation4(\n    instructions: I18nExpInstruction[], v0: any, v1: any, v2: any, v3: any): string|NO_CHANGE {\n  const viewData = _getViewData();\n  const different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n  viewData[BINDING_INDEX] += 4;\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  let res = '';\n  for (let i = 0; i < instructions.length; i++) {\n    // Odd indexes are bindings\n    if (i & 1) {\n      // Extract bits\n      const idx = instructions[i] as number;\n      const b2 = idx & 2;\n      const b1 = idx & 1;\n      // Get the value from the argument vx where x = idx\n      const value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n\n      res += stringify(value);\n    } else {\n      res += instructions[i];\n    }\n  }\n\n  return res;\n}\n\n/**\n * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param instructions A list of instructions that will be used to translate an attribute.\n * @param v0 value checked for change.\n * @param v1 value checked for change.\n * @param v2 value checked for change.\n * @param v3 value checked for change.\n * @param v4 value checked for change.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function i18nInterpolation5(\n    instructions: I18nExpInstruction[], v0: any, v1: any, v2: any, v3: any, v4: any): string|\n    NO_CHANGE {\n  const viewData = _getViewData();\n  let different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n  different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n  viewData[BINDING_INDEX] += 5;\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  let res = '';\n  for (let i = 0; i < instructions.length; i++) {\n    // Odd indexes are bindings\n    if (i & 1) {\n      // Extract bits\n      const idx = instructions[i] as number;\n      const b4 = idx & 4;\n      const b2 = idx & 2;\n      const b1 = idx & 1;\n      // Get the value from the argument vx where x = idx\n      const value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n\n      res += stringify(value);\n    } else {\n      res += instructions[i];\n    }\n  }\n\n  return res;\n}\n\n/**\n * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param instructions A list of instructions that will be used to translate an attribute.\n * @param v0 value checked for change.\n * @param v1 value checked for change.\n * @param v2 value checked for change.\n * @param v3 value checked for change.\n * @param v4 value checked for change.\n * @param v5 value checked for change.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */ export function\ni18nInterpolation6(\n    instructions: I18nExpInstruction[], v0: any, v1: any, v2: any, v3: any, v4: any, v5: any):\n    string|NO_CHANGE {\n  const viewData = _getViewData();\n  let different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n  different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n  viewData[BINDING_INDEX] += 6;\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  let res = '';\n  for (let i = 0; i < instructions.length; i++) {\n    // Odd indexes are bindings\n    if (i & 1) {\n      // Extract bits\n      const idx = instructions[i] as number;\n      const b4 = idx & 4;\n      const b2 = idx & 2;\n      const b1 = idx & 1;\n      // Get the value from the argument vx where x = idx\n      const value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n\n      res += stringify(value);\n    } else {\n      res += instructions[i];\n    }\n  }\n\n  return res;\n}\n\n/**\n * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param instructions A list of instructions that will be used to translate an attribute.\n * @param v0 value checked for change.\n * @param v1 value checked for change.\n * @param v2 value checked for change.\n * @param v3 value checked for change.\n * @param v4 value checked for change.\n * @param v5 value checked for change.\n * @param v6 value checked for change.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function i18nInterpolation7(\n    instructions: I18nExpInstruction[], v0: any, v1: any, v2: any, v3: any, v4: any, v5: any,\n    v6: any): string|NO_CHANGE {\n  const viewData = _getViewData();\n  let different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n  different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n  viewData[BINDING_INDEX] += 7;\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  let res = '';\n  for (let i = 0; i < instructions.length; i++) {\n    // Odd indexes are bindings\n    if (i & 1) {\n      // Extract bits\n      const idx = instructions[i] as number;\n      const b4 = idx & 4;\n      const b2 = idx & 2;\n      const b1 = idx & 1;\n      // Get the value from the argument vx where x = idx\n      const value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n\n      res += stringify(value);\n    } else {\n      res += instructions[i];\n    }\n  }\n\n  return res;\n}\n\n/**\n * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param instructions A list of instructions that will be used to translate an attribute.\n * @param v0 value checked for change.\n * @param v1 value checked for change.\n * @param v2 value checked for change.\n * @param v3 value checked for change.\n * @param v4 value checked for change.\n * @param v5 value checked for change.\n * @param v6 value checked for change.\n * @param v7 value checked for change.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function i18nInterpolation8(\n    instructions: I18nExpInstruction[], v0: any, v1: any, v2: any, v3: any, v4: any, v5: any,\n    v6: any, v7: any): string|NO_CHANGE {\n  const viewData = _getViewData();\n  let different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n  different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n  viewData[BINDING_INDEX] += 8;\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  let res = '';\n  for (let i = 0; i < instructions.length; i++) {\n    // Odd indexes are bindings\n    if (i & 1) {\n      // Extract bits\n      const idx = instructions[i] as number;\n      const b4 = idx & 4;\n      const b2 = idx & 2;\n      const b1 = idx & 1;\n      // Get the value from the argument vx where x = idx\n      const value =\n          b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n\n      res += stringify(value);\n    } else {\n      res += instructions[i];\n    }\n  }\n\n  return res;\n}\n\n/**\n * Create a translated interpolation binding with a variable number of expressions.\n *\n * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n * because there is no need to create an array of expressions and iterate over it.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function i18nInterpolationV(instructions: I18nExpInstruction[], values: any[]): string|\n    NO_CHANGE {\n  const viewData = _getViewData();\n  let different = false;\n  for (let i = 0; i < values.length; i++) {\n    // Check if bindings have changed\n    bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n  }\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  let res = '';\n  for (let i = 0; i < instructions.length; i++) {\n    // Odd indexes are placeholders\n    if (i & 1) {\n      res += stringify(values[instructions[i] as number]);\n    } else {\n      res += instructions[i];\n    }\n  }\n\n  return res;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {InjectionToken} from './injection_token';\n\n\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nexport const APP_ROOT = new InjectionToken<boolean>(\n    'The presence of this token marks an injector as being the root injector.');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OnDestroy} from '../metadata/lifecycle_hooks';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectableDef, InjectableType, InjectorType, InjectorTypeWithProviders, getInjectableDef, getInjectorDef} from './defs';\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {INJECTOR, InjectFlags, Injector, NullInjector, THROW_IF_NOT_FOUND, USE_VALUE, inject, injectArgs, setCurrentInjector} from './injector';\nimport {ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, Provider, StaticClassProvider, StaticProvider, TypeProvider, ValueProvider} from './provider';\nimport {APP_ROOT} from './scope';\n\n\n\n/**\n * Internal type for a single provider in a deep provider array.\n */\ntype SingleProvider = TypeProvider | ValueProvider | ClassProvider | ConstructorProvider |\n    ExistingProvider | FactoryProvider | StaticClassProvider;\n\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nconst NOT_YET = {};\n\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nconst CIRCULAR = {};\n\nconst EMPTY_ARRAY = [] as any[];\n\n/**\n * A lazily initialized NullInjector.\n */\nlet NULL_INJECTOR: Injector|undefined = undefined;\n\nfunction getNullInjector(): Injector {\n  if (NULL_INJECTOR === undefined) {\n    NULL_INJECTOR = new NullInjector();\n  }\n  return NULL_INJECTOR;\n}\n\n/**\n * An entry in the injector which tracks information about the given token, including a possible\n * current value.\n */\ninterface Record<T> {\n  factory: (() => T)|undefined;\n  value: T|{};\n  multi: any[]|undefined;\n}\n\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @publicApi\n */\nexport function createInjector(\n    defType: /* InjectorType<any> */ any, parent: Injector | null = null,\n    additionalProviders: StaticProvider[] | null = null): Injector {\n  parent = parent || getNullInjector();\n  return new R3Injector(defType, additionalProviders, parent);\n}\n\nexport class R3Injector {\n  /**\n   * Map of tokens to records which contain the instances of those tokens.\n   */\n  private records = new Map<Type<any>|InjectionToken<any>, Record<any>>();\n\n  /**\n   * The transitive set of `InjectorType`s which define this injector.\n   */\n  private injectorDefTypes = new Set<InjectorType<any>>();\n\n  /**\n   * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n   */\n  private onDestroy = new Set<OnDestroy>();\n\n  /**\n   * Flag indicating this injector provides the APP_ROOT_SCOPE token, and thus counts as the\n   * root scope.\n   */\n  private readonly isRootInjector: boolean;\n\n  /**\n   * Flag indicating that this injector was previously destroyed.\n   */\n  private destroyed = false;\n\n  constructor(\n      def: InjectorType<any>, additionalProviders: StaticProvider[]|null,\n      readonly parent: Injector) {\n    // Start off by creating Records for every provider declared in every InjectorType\n    // included transitively in `def`.\n    deepForEach(\n        [def], injectorDef => this.processInjectorType(injectorDef, new Set<InjectorType<any>>()));\n\n    additionalProviders &&\n        deepForEach(additionalProviders, provider => this.processProvider(provider));\n\n\n    // Make sure the INJECTOR token provides this injector.\n    this.records.set(INJECTOR, makeRecord(undefined, this));\n\n    // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n    // any injectable scoped to APP_ROOT_SCOPE.\n    this.isRootInjector = this.records.has(APP_ROOT);\n\n    // Eagerly instantiate the InjectorType classes themselves.\n    this.injectorDefTypes.forEach(defType => this.get(defType));\n  }\n\n  /**\n   * Destroy the injector and release references to every instance or provider associated with it.\n   *\n   * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n   * hook was found.\n   */\n  destroy(): void {\n    this.assertNotDestroyed();\n\n    // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n    this.destroyed = true;\n    try {\n      // Call all the lifecycle hooks.\n      this.onDestroy.forEach(service => service.ngOnDestroy());\n    } finally {\n      // Release all references.\n      this.records.clear();\n      this.onDestroy.clear();\n      this.injectorDefTypes.clear();\n    }\n  }\n\n  get<T>(\n      token: Type<T>|InjectionToken<T>, notFoundValue: any = THROW_IF_NOT_FOUND,\n      flags = InjectFlags.Default): T {\n    this.assertNotDestroyed();\n    // Set the injection context.\n    const previousInjector = setCurrentInjector(this);\n    try {\n      // Check for the SkipSelf flag.\n      if (!(flags & InjectFlags.SkipSelf)) {\n        // SkipSelf isn't set, check if the record belongs to this injector.\n        let record: Record<T>|undefined = this.records.get(token);\n        if (record === undefined) {\n          // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n          // with a scope matching this injector.\n          const def = couldBeInjectableType(token) && getInjectableDef(token);\n          if (def && this.injectableDefInScope(def)) {\n            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n            // all along.\n            record = injectableDefRecord(token);\n            this.records.set(token, record);\n          }\n        }\n        // If a record was found, get the instance for it and return it.\n        if (record !== undefined) {\n          return this.hydrate(token, record);\n        }\n      }\n\n      // Select the next injector based on the Self flag - if self is set, the next injector is\n      // the NullInjector, otherwise it's the parent.\n      let next = !(flags & InjectFlags.Self) ? this.parent : getNullInjector();\n      return this.parent.get(token, notFoundValue);\n    } finally {\n      // Lastly, clean up the state by restoring the previous injector.\n      setCurrentInjector(previousInjector);\n    }\n  }\n\n  private assertNotDestroyed(): void {\n    if (this.destroyed) {\n      throw new Error('Injector has already been destroyed.');\n    }\n  }\n\n  /**\n   * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n   * to this injector.\n   */\n  private processInjectorType(\n      defOrWrappedDef: InjectorType<any>|InjectorTypeWithProviders<any>,\n      parents: Set<InjectorType<any>>) {\n    defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n\n    // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n    // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n    // read, so care is taken to only do the read once.\n\n    // First attempt to read the ngInjectorDef.\n    let def = getInjectorDef(defOrWrappedDef);\n\n    // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n    const ngModule =\n        (def == null) && (defOrWrappedDef as InjectorTypeWithProviders<any>).ngModule || undefined;\n\n    // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n    // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n    // is the `ngModule`.\n    const defType: InjectorType<any> =\n        (ngModule === undefined) ? (defOrWrappedDef as InjectorType<any>) : ngModule;\n\n    // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n    // extra providers.\n    const providers =\n        (ngModule !== undefined) && (defOrWrappedDef as InjectorTypeWithProviders<any>).providers ||\n        EMPTY_ARRAY;\n\n    // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n    // `InjectorDef` is on its `ngModule`.\n    if (ngModule !== undefined) {\n      def = getInjectorDef(ngModule);\n    }\n\n    // If no definition was found, it might be from exports. Remove it.\n    if (def == null) {\n      return;\n    }\n\n    // Check for circular dependencies.\n    if (parents.has(defType)) {\n      throw new Error(`Circular dependency: type ${stringify(defType)} ends up importing itself.`);\n    }\n\n    // Track the InjectorType and add a provider for it.\n    this.injectorDefTypes.add(defType);\n    this.records.set(defType, makeRecord(def.factory));\n\n    // Add providers in the same way that @NgModule resolution did:\n\n    // First, include providers from any imports.\n    if (def.imports != null) {\n      // Before processing defType's imports, add it to the set of parents. This way, if it ends\n      // up deeply importing itself, this can be detected.\n      parents.add(defType);\n      try {\n        deepForEach(def.imports, imported => this.processInjectorType(imported, parents));\n      } finally {\n        // Remove it from the parents set when finished.\n        parents.delete(defType);\n      }\n    }\n\n    // Next, include providers listed on the definition itself.\n    if (def.providers != null) {\n      deepForEach(def.providers, provider => this.processProvider(provider));\n    }\n\n    // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n    deepForEach(providers, provider => this.processProvider(provider));\n  }\n\n  /**\n   * Process a `SingleProvider` and add it.\n   */\n  private processProvider(provider: SingleProvider): void {\n    // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n    // property.\n    provider = resolveForwardRef(provider);\n    let token: any = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n\n    // Construct a `Record` for the provider.\n    const record = providerToRecord(provider);\n\n    if (!isTypeProvider(provider) && provider.multi === true) {\n      // If the provider indicates that it's a multi-provider, process it specially.\n      // First check whether it's been defined already.\n      let multiRecord = this.records.get(token);\n      if (multiRecord) {\n        // It has. Throw a nice error if\n        if (multiRecord.multi === undefined) {\n          throw new Error(`Mixed multi-provider for ${token}.`);\n        }\n      } else {\n        multiRecord = makeRecord(undefined, NOT_YET, true);\n        multiRecord.factory = () => injectArgs(multiRecord !.multi !);\n        this.records.set(token, multiRecord);\n      }\n      token = provider;\n      multiRecord.multi !.push(provider);\n    } else {\n      const existing = this.records.get(token);\n      if (existing && existing.multi !== undefined) {\n        throw new Error(`Mixed multi-provider for ${stringify(token)}`);\n      }\n    }\n    this.records.set(token, record);\n  }\n\n  private hydrate<T>(token: Type<T>|InjectionToken<T>, record: Record<T>): T {\n    if (record.value === CIRCULAR) {\n      throw new Error(`Circular dep for ${stringify(token)}`);\n    } else if (record.value === NOT_YET) {\n      record.value = CIRCULAR;\n      record.value = record.factory !();\n    }\n    if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n      this.onDestroy.add(record.value);\n    }\n    return record.value as T;\n  }\n\n  private injectableDefInScope(def: InjectableDef<any>): boolean {\n    if (!def.providedIn) {\n      return false;\n    } else if (typeof def.providedIn === 'string') {\n      return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n    } else {\n      return this.injectorDefTypes.has(def.providedIn);\n    }\n  }\n}\n\nfunction injectableDefRecord(token: Type<any>| InjectionToken<any>): Record<any> {\n  const injectableDef = getInjectableDef(token as InjectableType<any>);\n  if (injectableDef === null) {\n    if (token instanceof InjectionToken) {\n      throw new Error(`Token ${stringify(token)} is missing an ngInjectableDef definition.`);\n    }\n    // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n    // no-args constructor.\n    return makeRecord(() => new (token as Type<any>)());\n  }\n  return makeRecord(injectableDef.factory);\n}\n\nfunction providerToRecord(provider: SingleProvider): Record<any> {\n  let token = resolveForwardRef(provider);\n  let value: any = NOT_YET;\n  let factory: (() => any)|undefined = undefined;\n  if (isTypeProvider(provider)) {\n    return injectableDefRecord(provider);\n  } else {\n    token = resolveForwardRef(provider.provide);\n    if (isValueProvider(provider)) {\n      value = provider.useValue;\n    } else if (isExistingProvider(provider)) {\n      factory = () => inject(provider.useExisting);\n    } else if (isFactoryProvider(provider)) {\n      factory = () => provider.useFactory(...injectArgs(provider.deps || []));\n    } else {\n      const classRef = (provider as StaticClassProvider | ClassProvider).useClass || token;\n      if (hasDeps(provider)) {\n        factory = () => new (classRef)(...injectArgs(provider.deps));\n      } else {\n        return injectableDefRecord(classRef);\n      }\n    }\n  }\n  return makeRecord(factory, value);\n}\n\nfunction makeRecord<T>(\n    factory: (() => T) | undefined, value: T | {} = NOT_YET, multi: boolean = false): Record<T> {\n  return {\n    factory: factory,\n    value: value,\n    multi: multi ? [] : undefined,\n  };\n}\n\nfunction deepForEach<T>(input: (T | any[])[], fn: (value: T) => void): void {\n  input.forEach(value => Array.isArray(value) ? deepForEach(value, fn) : fn(value));\n}\n\nfunction isValueProvider(value: SingleProvider): value is ValueProvider {\n  return USE_VALUE in value;\n}\n\nfunction isExistingProvider(value: SingleProvider): value is ExistingProvider {\n  return !!(value as ExistingProvider).useExisting;\n}\n\nfunction isFactoryProvider(value: SingleProvider): value is FactoryProvider {\n  return !!(value as FactoryProvider).useFactory;\n}\n\nfunction isTypeProvider(value: SingleProvider): value is TypeProvider {\n  return typeof value === 'function';\n}\n\nfunction hasDeps(value: ClassProvider | ConstructorProvider | StaticClassProvider):\n    value is ClassProvider&{deps: any[]} {\n  return !!(value as any).deps;\n}\n\nfunction hasOnDestroy(value: any): value is OnDestroy {\n  return typeof value === 'object' && value != null && (value as OnDestroy).ngOnDestroy &&\n      typeof(value as OnDestroy).ngOnDestroy === 'function';\n}\n\nfunction couldBeInjectableType(value: any): value is Type<any>|InjectionToken<any> {\n  return (typeof value === 'function') ||\n      (typeof value === 'object' && value instanceof InjectionToken);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {StaticProvider} from '../di/provider';\nimport {createInjector} from '../di/r3_injector';\nimport {ComponentFactoryResolver as viewEngine_ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory as viewEngine_NgModuleFactory, NgModuleRef as viewEngine_NgModuleRef} from '../linker/ng_module_factory';\nimport {NgModuleDef} from '../metadata/ng_module';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {assertDefined} from './assert';\nimport {ComponentFactoryResolver} from './component_ref';\nimport {getNgModuleDef} from './definition';\n\nexport interface NgModuleType { ngModuleDef: NgModuleDef<any>; }\n\nexport const COMPONENT_FACTORY_RESOLVER: StaticProvider = {\n  provide: viewEngine_ComponentFactoryResolver,\n  useFactory: () => new ComponentFactoryResolver(),\n  deps: [],\n};\n\nexport class NgModuleRef<T> extends viewEngine_NgModuleRef<T> implements InternalNgModuleRef<T> {\n  // tslint:disable-next-line:require-internal-with-underscore\n  _bootstrapComponents: Type<any>[] = [];\n  injector: Injector;\n  componentFactoryResolver: viewEngine_ComponentFactoryResolver;\n  instance: T;\n  destroyCbs: (() => void)[]|null = [];\n\n  constructor(ngModuleType: Type<T>, parentInjector: Injector|null) {\n    super();\n    const ngModuleDef = getNgModuleDef(ngModuleType);\n    ngDevMode && assertDefined(\n                     ngModuleDef,\n                     `NgModule '${stringify(ngModuleType)}' is not a subtype of 'NgModuleType'.`);\n\n    this._bootstrapComponents = ngModuleDef !.bootstrap;\n    const additionalProviders: StaticProvider[] = [\n      COMPONENT_FACTORY_RESOLVER, {\n        provide: viewEngine_NgModuleRef,\n        useValue: this,\n      }\n    ];\n    this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n    this.instance = this.injector.get(ngModuleType);\n    this.componentFactoryResolver = new ComponentFactoryResolver();\n  }\n\n  destroy(): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs !.forEach(fn => fn());\n    this.destroyCbs = null;\n  }\n  onDestroy(callback: () => void): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs !.push(callback);\n  }\n}\n\nexport class NgModuleFactory<T> extends viewEngine_NgModuleFactory<T> {\n  constructor(public moduleType: Type<T>) { super(); }\n\n  create(parentInjector: Injector|null): viewEngine_NgModuleRef<T> {\n    return new NgModuleRef(this.moduleType, parentInjector);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {bindingUpdated, bindingUpdated2, bindingUpdated4, updateBinding, getBinding, getCreationMode, bindingUpdated3, getBindingRoot, getTView,} from './instructions';\n\n/**\n * Bindings for pure functions are stored after regular bindings.\n *\n * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n * ------------------------------------------------------------------------------------------\n * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n * ------------------------------------------------------------------------------------------\n *                    ^                      ^\n *      TView.bindingStartIndex      TView.expandoStartIndex\n *\n * Pure function instructions are given an offset from the binding root. Adding the offset to the\n * binding root gives the first index where the bindings are stored. In component views, the binding\n * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n * any directive instances + any hostVars in directives evaluated before it.\n *\n * See VIEW_DATA.md for more information about host binding resolution.\n */\n\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns a value\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nexport function pureFunction0<T>(slotOffset: number, pureFn: () => T, thisArg?: any): T {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  return getCreationMode() ?\n      updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n      getBinding(bindingIndex);\n}\n\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction1(\n    slotOffset: number, pureFn: (v: any) => any, exp: any, thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  return bindingUpdated(bindingIndex, exp) ?\n      updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n      getBinding(bindingIndex + 1);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction2(\n    slotOffset: number, pureFn: (v1: any, v2: any) => any, exp1: any, exp2: any,\n    thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  return bindingUpdated2(bindingIndex, exp1, exp2) ?\n      updateBinding(\n          bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n      getBinding(bindingIndex + 2);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction3(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any) => any, exp1: any, exp2: any, exp3: any,\n    thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n      updateBinding(\n          bindingIndex + 3,\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n      getBinding(bindingIndex + 3);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction4(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any, v4: any) => any, exp1: any, exp2: any,\n    exp3: any, exp4: any, thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n      updateBinding(\n          bindingIndex + 4,\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n      getBinding(bindingIndex + 4);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction5(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any) => any, exp1: any,\n    exp2: any, exp3: any, exp4: any, exp5: any, thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated(bindingIndex + 4, exp5) || different ?\n      updateBinding(\n          bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                                      pureFn(exp1, exp2, exp3, exp4, exp5)) :\n      getBinding(bindingIndex + 5);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction6(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any) => any,\n    exp1: any, exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n      updateBinding(\n          bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                                      pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n      getBinding(bindingIndex + 6);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction7(\n    slotOffset: number,\n    pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any, v7: any) => any, exp1: any,\n    exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, exp7: any, thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  let different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n      updateBinding(\n          bindingIndex + 7, thisArg ?\n              pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n              pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n      getBinding(bindingIndex + 7);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction8(\n    slotOffset: number,\n    pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any, v7: any, v8: any) => any,\n    exp1: any, exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, exp7: any, exp8: any,\n    thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n      updateBinding(\n          bindingIndex + 8, thisArg ?\n              pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n              pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n      getBinding(bindingIndex + 8);\n}\n\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunctionV(\n    slotOffset: number, pureFn: (...v: any[]) => any, exps: any[], thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  let bindingIndex = getBindingRoot() + slotOffset;\n  let different = false;\n  for (let i = 0; i < exps.length; i++) {\n    bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n  }\n  return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n                     getBinding(bindingIndex);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PipeTransform} from '../change_detection/pipe_transform';\n\nimport {getTView, load, store} from './instructions';\nimport {PipeDef, PipeDefList} from './interfaces/definition';\nimport {HEADER_OFFSET} from './interfaces/view';\nimport {pureFunction1, pureFunction2, pureFunction3, pureFunction4, pureFunctionV} from './pure_function';\n\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nexport function pipe(index: number, pipeName: string): any {\n  const tView = getTView();\n  let pipeDef: PipeDef<any>;\n  const adjustedIndex = index + HEADER_OFFSET;\n\n  if (tView.firstTemplatePass) {\n    pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n    tView.data[adjustedIndex] = pipeDef;\n    if (pipeDef.onDestroy) {\n      (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [\n       ])).push(adjustedIndex, pipeDef.onDestroy);\n    }\n  } else {\n    pipeDef = tView.data[adjustedIndex] as PipeDef<any>;\n  }\n\n  const pipeInstance = pipeDef.factory();\n  store(index, pipeInstance);\n  return pipeInstance;\n}\n\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name: string, registry: PipeDefList | null): PipeDef<any> {\n  if (registry) {\n    for (let i = 0; i < registry.length; i++) {\n      const pipeDef = registry[i];\n      if (name === pipeDef.name) {\n        return pipeDef;\n      }\n    }\n  }\n  throw new Error(`Pipe with name '${name}' not found!`);\n}\n\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind1(index: number, slotOffset: number, v1: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n                         pipeInstance.transform(v1);\n}\n\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind2(index: number, slotOffset: number, v1: any, v2: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n                         pipeInstance.transform(v1, v2);\n}\n\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind3(index: number, slotOffset: number, v1: any, v2: any, v3: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return isPure(index) ?\n      pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n      pipeInstance.transform(v1, v2, v3);\n}\n\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind4(\n    index: number, slotOffset: number, v1: any, v2: any, v3: any, v4: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return isPure(index) ?\n      pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n      pipeInstance.transform(v1, v2, v3, v4);\n}\n\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nexport function pipeBindV(index: number, slotOffset: number, values: any[]): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n                         pipeInstance.transform.apply(pipeInstance, values);\n}\n\nfunction isPure(index: number): boolean {\n  return (<PipeDef<any>>getTView().data[index + HEADER_OFFSET]).pure;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject, Subscription} from 'rxjs';\n\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * @usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @publicApi\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  /**\n   * Internal\n   */\n  __isAsync: boolean;  // tslint:disable-line\n\n  /**\n   * Creates an instance of this class that can\n   * deliver events synchronously or asynchronously.\n   *\n   * @param isAsync When true, deliver events asynchronously.\n   *\n   */\n  constructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n\n  /**\n   * Emits an event containing a given value.\n   * @param value The value to emit.\n   */\n  emit(value?: T) { super.next(value); }\n\n  /**\n   * Registers handlers for events emitted by this instance.\n   * @param generatorOrNext When supplied, a custom handler for emitted events.\n   * @param error When supplied, a custom handler for an error notification\n   * from this emitter.\n   * @param complete When supplied, a custom handler for a completion\n   * notification from this emitter.\n   */\n  subscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let schedulerFn: (t: any) => any;\n    let errorFn = (err: any): any => null;\n    let completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    const sink = super.subscribe(schedulerFn, errorFn, completeFn);\n\n    if (generatorOrNext instanceof Subscription) {\n      generatorOrNext.add(sink);\n    }\n\n    return sink;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {R3_TEMPLATE_REF_FACTORY} from '../ivy_switch/runtime/index';\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n\n\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @publicApi\n */\nexport abstract class TemplateRef<C> {\n  /**\n   * The anchor element in the parent view for this embedded view.\n   *\n   * The data-binding and injection contexts of embedded views created from this `TemplateRef`\n   * inherit from the contexts of this location.\n   *\n   * Typically new embedded views are attached to the view container of this location, but in\n   * advanced use-cases, the view can be attached to a different container while keeping the\n   * data-binding and injection context from the original location.\n   *\n   */\n  // TODO(i): rename to anchor or location\n  abstract get elementRef(): ElementRef;\n\n  /**\n   * Creates a view object and attaches it to the view container of the parent view.\n   * @param context The context for the new view, inherited from the anchor element.\n   * @returns The new view object.\n   */\n  abstract createEmbeddedView(context: C): EmbeddedViewRef<C>;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__:\n      () => TemplateRef<any> = () => R3_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef)\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine_from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {ElementRef as ViewEngine_ElementRef} from '../linker/element_ref';\nimport {QueryList as viewEngine_QueryList} from '../linker/query_list';\nimport {TemplateRef as ViewEngine_TemplateRef} from '../linker/template_ref';\nimport {Type} from '../type';\nimport {getSymbolIterator} from '../util';\n\nimport {assertDefined, assertEqual} from './assert';\nimport {NG_ELEMENT_ID} from './fields';\nimport {_getViewData, assertPreviousIsParent, getOrCreateCurrentQueries, store, storeCleanupWithContext} from './instructions';\nimport {DirectiveDef, unusedValueExportToPlacateAjd as unused1} from './interfaces/definition';\nimport {unusedValueExportToPlacateAjd as unused2} from './interfaces/injector';\nimport {TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeFlags, TNodeType, unusedValueExportToPlacateAjd as unused3} from './interfaces/node';\nimport {LQueries, unusedValueExportToPlacateAjd as unused4} from './interfaces/query';\nimport {LViewData, TVIEW} from './interfaces/view';\nimport {flatten, isContentQueryHost} from './util';\nimport {createElementRef, createTemplateRef} from './view_engine_compatibility';\n\nconst unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4;\n\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n */\nexport interface QueryPredicate<T> {\n  /**\n   * If looking for directives then it contains the directive type.\n   */\n  type: Type<T>|null;\n\n  /**\n   * If selector then contains local names to query for.\n   */\n  selector: string[]|null;\n\n  /**\n   * Indicates which token should be read from DI for this query.\n   */\n  read: Type<T>|null;\n}\n\n/**\n * An object representing a query, which is a combination of:\n * - query predicate to determines if a given element/directive should be included in the query\n * - values collected based on a predicate\n * - `QueryList` to which collected values should be reported\n */\nexport interface LQuery<T> {\n  /**\n   * Next query. Used when queries are stored as a linked list in `LQueries`.\n   */\n  next: LQuery<any>|null;\n\n  /**\n   * Destination to which the value should be added.\n   */\n  list: QueryList<T>;\n\n  /**\n   * A predicate which determines if a given element/directive should be included in the query\n   * results.\n   */\n  predicate: QueryPredicate<T>;\n\n  /**\n   * Values which have been located.\n   *\n   * This is what builds up the `QueryList._valuesTree`.\n   */\n  values: any[];\n\n  /**\n   * A pointer to an array that stores collected values from views. This is necessary so we know a\n   * container into which to insert nodes collected from views.\n   */\n  containerValues: any[]|null;\n}\n\nexport class LQueries_ implements LQueries {\n  constructor(\n      public parent: LQueries_|null, private shallow: LQuery<any>|null,\n      private deep: LQuery<any>|null) {}\n\n  track<T>(\n      queryList: viewEngine_QueryList<T>, predicate: Type<T>|string[], descend?: boolean,\n      read?: Type<T>): void {\n    if (descend) {\n      this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n    } else {\n      this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n    }\n  }\n\n  clone(): LQueries { return new LQueries_(this, null, this.deep); }\n\n  container(): LQueries|null {\n    const shallowResults = copyQueriesToContainer(this.shallow);\n    const deepResults = copyQueriesToContainer(this.deep);\n\n    return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n  }\n\n  createView(): LQueries|null {\n    const shallowResults = copyQueriesToView(this.shallow);\n    const deepResults = copyQueriesToView(this.deep);\n\n    return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n  }\n\n  insertView(index: number): void {\n    insertView(index, this.shallow);\n    insertView(index, this.deep);\n  }\n\n  addNode(tNode: TElementNode|TContainerNode|TElementContainerNode): LQueries|null {\n    add(this.deep, tNode);\n\n    if (isContentQueryHost(tNode)) {\n      add(this.shallow, tNode);\n\n      if (tNode.parent && isContentQueryHost(tNode.parent)) {\n        // if node has a content query and parent also has a content query\n        // both queries need to check this node for shallow matches\n        add(this.parent !.shallow, tNode);\n      }\n      return this.parent;\n    }\n\n    isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n    return this;\n  }\n\n  removeView(): void {\n    removeView(this.shallow);\n    removeView(this.deep);\n  }\n}\n\nfunction isRootNodeOfQuery(tNode: TNode) {\n  return tNode.parent === null || isContentQueryHost(tNode.parent);\n}\n\nfunction copyQueriesToContainer(query: LQuery<any>| null): LQuery<any>|null {\n  let result: LQuery<any>|null = null;\n\n  while (query) {\n    const containerValues: any[] = [];  // prepare room for views\n    query.values.push(containerValues);\n    const clonedQuery: LQuery<any> = {\n      next: result,\n      list: query.list,\n      predicate: query.predicate,\n      values: containerValues,\n      containerValues: null\n    };\n    result = clonedQuery;\n    query = query.next;\n  }\n\n  return result;\n}\n\nfunction copyQueriesToView(query: LQuery<any>| null): LQuery<any>|null {\n  let result: LQuery<any>|null = null;\n\n  while (query) {\n    const clonedQuery: LQuery<any> = {\n      next: result,\n      list: query.list,\n      predicate: query.predicate,\n      values: [],\n      containerValues: query.values\n    };\n    result = clonedQuery;\n    query = query.next;\n  }\n\n  return result;\n}\n\nfunction insertView(index: number, query: LQuery<any>| null) {\n  while (query) {\n    ngDevMode &&\n        assertDefined(\n            query.containerValues, 'View queries need to have a pointer to container values.');\n    query.containerValues !.splice(index, 0, query.values);\n    query = query.next;\n  }\n}\n\nfunction removeView(query: LQuery<any>| null) {\n  while (query) {\n    ngDevMode &&\n        assertDefined(\n            query.containerValues, 'View queries need to have a pointer to container values.');\n\n    const containerValues = query.containerValues !;\n    const viewValuesIdx = containerValues.indexOf(query.values);\n    const removed = containerValues.splice(viewValuesIdx, 1);\n\n    // mark a query as dirty only when removed view had matching modes\n    ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n    if (removed[0].length) {\n      query.list.setDirty();\n    }\n\n    query = query.next;\n  }\n}\n\n\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode: TNode, selector: string): number|null {\n  const localNames = tNode.localNames;\n  if (localNames) {\n    for (let i = 0; i < localNames.length; i += 2) {\n      if (localNames[i] === selector) {\n        return localNames[i + 1] as number;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param tNode TNode on which directives are present.\n * @param currentView The view we are currently processing\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(tNode: TNode, currentView: LViewData, type: Type<any>): number|\n    null {\n  const defs = currentView[TVIEW].data;\n  if (defs) {\n    const flags = tNode.flags;\n    const count = flags & TNodeFlags.DirectiveCountMask;\n    const start = flags >> TNodeFlags.DirectiveStartingIndexShift;\n    const end = start + count;\n    for (let i = start; i < end; i++) {\n      const def = defs[i] as DirectiveDef<any>;\n      if (def.type === type && def.diPublic) {\n        return i;\n      }\n    }\n  }\n  return null;\n}\n\n// TODO: \"read\" should be an AbstractType (FW-486)\nfunction queryRead(tNode: TNode, currentView: LViewData, read: any): any {\n  const factoryFn = (read as any)[NG_ELEMENT_ID];\n  if (typeof factoryFn === 'function') {\n    return factoryFn();\n  } else {\n    const matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read as Type<any>);\n    if (matchingIdx !== null) {\n      return currentView[matchingIdx];\n    }\n  }\n  return null;\n}\n\nfunction queryReadByTNodeType(tNode: TNode, currentView: LViewData): any {\n  if (tNode.type === TNodeType.Element || tNode.type === TNodeType.ElementContainer) {\n    return createElementRef(ViewEngine_ElementRef, tNode, currentView);\n  }\n  if (tNode.type === TNodeType.Container) {\n    return createTemplateRef(ViewEngine_TemplateRef, ViewEngine_ElementRef, tNode, currentView);\n  }\n  return null;\n}\n\nfunction add(\n    query: LQuery<any>| null, tNode: TElementNode | TContainerNode | TElementContainerNode) {\n  const currentView = _getViewData();\n\n  while (query) {\n    const predicate = query.predicate;\n    const type = predicate.type;\n    if (type) {\n      // if read token and / or strategy is not specified, use type as read token\n      const result = queryRead(tNode, currentView, predicate.read || type);\n      if (result !== null) {\n        addMatch(query, result);\n      }\n    } else {\n      const selector = predicate.selector !;\n      for (let i = 0; i < selector.length; i++) {\n        const directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n        if (directiveIdx !== null) {\n          let result: any = null;\n          if (predicate.read) {\n            result = queryRead(tNode, currentView, predicate.read);\n          } else {\n            if (directiveIdx > -1) {\n              result = currentView[directiveIdx];\n            } else {\n              // if read token and / or strategy is not specified,\n              // detect it using appropriate tNode type\n              result = queryReadByTNodeType(tNode, currentView);\n            }\n          }\n\n          if (result !== null) {\n            addMatch(query, result);\n          }\n        }\n      }\n    }\n    query = query.next;\n  }\n}\n\nfunction addMatch(query: LQuery<any>, matchingValue: any): void {\n  query.values.push(matchingValue);\n  query.list.setDirty();\n}\n\nfunction createPredicate<T>(predicate: Type<T>| string[], read: Type<T>| null): QueryPredicate<T> {\n  const isArray = Array.isArray(predicate);\n  return {\n    type: isArray ? null : predicate as Type<T>,\n    selector: isArray ? predicate as string[] : null,\n    read: read\n  };\n}\n\nfunction createQuery<T>(\n    previous: LQuery<any>| null, queryList: QueryList<T>, predicate: Type<T>| string[],\n    read: Type<T>| null): LQuery<T> {\n  return {\n    next: previous,\n    list: queryList,\n    predicate: createPredicate(predicate, read),\n    values: (queryList as any as QueryList_<T>)._valuesTree,\n    containerValues: null\n  };\n}\n\nclass QueryList_<T>/* implements viewEngine_QueryList<T> */ {\n  readonly dirty = true;\n  readonly changes: Observable<T> = new EventEmitter();\n  private _values: T[] = [];\n  /** @internal */\n  _valuesTree: any[] = [];\n\n  get length(): number { return this._values.length; }\n\n  get first(): T|null {\n    let values = this._values;\n    return values.length ? values[0] : null;\n  }\n\n  get last(): T|null {\n    let values = this._values;\n    return values.length ? values[values.length - 1] : null;\n  }\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._values.map(fn); }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._values.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._values.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._values.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void { this._values.forEach(fn); }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._values.some(fn);\n  }\n\n  toArray(): T[] { return this._values.slice(0); }\n\n  [getSymbolIterator()](): Iterator<T> { return (this._values as any)[getSymbolIterator()](); }\n\n  toString(): string { return this._values.toString(); }\n\n  reset(res: (any[]|T)[]): void {\n    this._values = flatten(res);\n    (this as{dirty: boolean}).dirty = false;\n  }\n\n  notifyOnChanges(): void { (this.changes as EventEmitter<any>).emit(this); }\n  setDirty(): void { (this as{dirty: boolean}).dirty = true; }\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n}\n\n// NOTE: this hack is here because IQueryList has private members and therefore\n// it can't be implemented only extended.\nexport type QueryList<T> = viewEngine_QueryList<T>;\nexport const QueryList: typeof viewEngine_QueryList = QueryList_ as any;\n\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nexport function query<T>(\n    memoryIndex: number | null, predicate: Type<any>| string[], descend?: boolean,\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read?: any): QueryList<T> {\n  ngDevMode && assertPreviousIsParent();\n  const queryList = new QueryList<T>();\n  const queries = getOrCreateCurrentQueries(LQueries_);\n  queries.track(queryList, predicate, descend, read);\n  storeCleanupWithContext(null, queryList, queryList.destroy);\n  if (memoryIndex != null) {\n    store(memoryIndex, queryList);\n  }\n  return queryList;\n}\n\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nexport function queryRefresh(queryList: QueryList<any>): boolean {\n  const queryListImpl = (queryList as any as QueryList_<any>);\n  if (queryList.dirty) {\n    queryList.reset(queryListImpl._valuesTree);\n    queryList.notifyOnChanges();\n    return true;\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef as ViewEngine_ElementRef} from '../linker/element_ref';\nimport {TemplateRef as ViewEngine_TemplateRef} from '../linker/template_ref';\n\nimport {TNode} from './interfaces/node';\nimport {LViewData} from './interfaces/view';\nimport {createTemplateRef} from './view_engine_compatibility';\n\n\n\n/**\n * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n * `<ng-template>` element.\n */\nexport function templateRefExtractor(tNode: TNode, currentView: LViewData) {\n  return createTemplateRef(ViewEngine_TemplateRef, ViewEngine_ElementRef, tNode, currentView);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst BRAND = '__SANITIZER_TRUSTED_BRAND__';\n\nexport const enum BypassType {\n  Url = 'Url',\n  Html = 'Html',\n  ResourceUrl = 'ResourceUrl',\n  Script = 'Script',\n  Style = 'Style',\n}\n\n/**\n * A branded trusted string used with sanitization.\n *\n * See: {@link TrustedHtmlString}, {@link TrustedResourceUrlString}, {@link TrustedScriptString},\n * {@link TrustedStyleString}, {@link TrustedUrlString}\n */\nexport interface TrustedString extends String { [BRAND]: BypassType; }\n\n/**\n * A branded trusted string used with sanitization of `html` strings.\n *\n * See: {@link bypassSanitizationTrustHtml} and {@link htmlSanitizer}.\n */\nexport interface TrustedHtmlString extends TrustedString { [BRAND]: BypassType.Html; }\n\n/**\n * A branded trusted string used with sanitization of `style` strings.\n *\n * See: {@link bypassSanitizationTrustStyle} and {@link styleSanitizer}.\n */\nexport interface TrustedStyleString extends TrustedString { [BRAND]: BypassType.Style; }\n\n/**\n * A branded trusted string used with sanitization of `url` strings.\n *\n * See: {@link bypassSanitizationTrustScript} and {@link scriptSanitizer}.\n */\nexport interface TrustedScriptString extends TrustedString { [BRAND]: BypassType.Script; }\n\n/**\n * A branded trusted string used with sanitization of `url` strings.\n *\n * See: {@link bypassSanitizationTrustUrl} and {@link urlSanitizer}.\n */\nexport interface TrustedUrlString extends TrustedString { [BRAND]: BypassType.Url; }\n\n/**\n * A branded trusted string used with sanitization of `resourceUrl` strings.\n *\n * See: {@link bypassSanitizationTrustResourceUrl} and {@link resourceUrlSanitizer}.\n */\nexport interface TrustedResourceUrlString extends TrustedString { [BRAND]: BypassType.ResourceUrl; }\n\nexport function allowSanitizationBypass(value: any, type: BypassType): boolean {\n  return (value instanceof String && (value as TrustedStyleString)[BRAND] === type) ? true : false;\n}\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustHtml(trustedHtml: string): TrustedHtmlString {\n  return bypassSanitizationTrustString(trustedHtml, BypassType.Html);\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustStyle(trustedStyle: string): TrustedStyleString {\n  return bypassSanitizationTrustString(trustedStyle, BypassType.Style);\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustScript(trustedScript: string): TrustedScriptString {\n  return bypassSanitizationTrustString(trustedScript, BypassType.Script);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustUrl(trustedUrl: string): TrustedUrlString {\n  return bypassSanitizationTrustString(trustedUrl, BypassType.Url);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustResourceUrl(trustedResourceUrl: string):\n    TrustedResourceUrlString {\n  return bypassSanitizationTrustString(trustedResourceUrl, BypassType.ResourceUrl);\n}\n\n\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: BypassType.Html): TrustedHtmlString;\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: BypassType.Style): TrustedStyleString;\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: BypassType.Script): TrustedScriptString;\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: BypassType.Url): TrustedUrlString;\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: BypassType.ResourceUrl): TrustedResourceUrlString;\nfunction bypassSanitizationTrustString(trustedString: string, mode: BypassType): TrustedString {\n  const trusted = new String(trustedString) as TrustedString;\n  trusted[BRAND] = mode;\n  return trusted;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n *\n * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n * please see [BAZEL.md](./docs/BAZEL.md).\n */\n\nlet _devMode: boolean = true;\nlet _runModeLocked: boolean = false;\n\n\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @publicApi\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @publicApi\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nexport class InertBodyHelper {\n  private inertBodyElement: HTMLElement;\n  private inertDocument: Document;\n\n  constructor(private defaultDoc: Document) {\n    this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n    this.inertBodyElement = this.inertDocument.body;\n\n    if (this.inertBodyElement == null) {\n      // usually there should be only one body element in the document, but IE doesn't have any, so\n      // we need to create one.\n      const inertHtml = this.inertDocument.createElement('html');\n      this.inertDocument.appendChild(inertHtml);\n      this.inertBodyElement = this.inertDocument.createElement('body');\n      inertHtml.appendChild(this.inertBodyElement);\n    }\n\n    this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n      // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n      // so use the XHR strategy.\n      this.getInertBodyElement = this.getInertBodyElement_XHR;\n      return;\n    }\n\n    this.inertBodyElement.innerHTML =\n        '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n    if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n      // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n      // so use the DOMParser strategy, if it is available.\n      // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n      // fall through to the default strategy below.\n      if (isDOMParserAvailable()) {\n        this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n        return;\n      }\n    }\n\n    // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n    this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n  }\n\n  /**\n   * Get an inert DOM element containing DOM created from the dirty HTML string provided.\n   * The implementation of this is determined in the constructor, when the class is instantiated.\n   */\n  getInertBodyElement: (html: string) => HTMLElement | null;\n\n  /**\n   * Use XHR to create and fill an inert body element (on Safari 10.1)\n   * See\n   * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n   */\n  private getInertBodyElement_XHR(html: string) {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag.\n    html = '<body><remove></remove>' + html + '</body>';\n    try {\n      html = encodeURI(html);\n    } catch (e) {\n      return null;\n    }\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = 'document';\n    xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n    xhr.send(undefined);\n    const body: HTMLBodyElement = xhr.response.body;\n    body.removeChild(body.firstChild !);\n    return body;\n  }\n\n  /**\n   * Use DOMParser to create and fill an inert body element (on Firefox)\n   * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n   *\n   */\n  private getInertBodyElement_DOMParser(html: string) {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag.\n    html = '<body><remove></remove>' + html + '</body>';\n    try {\n      const body = new (window as any)\n                       .DOMParser()\n                       .parseFromString(html, 'text/html')\n                       .body as HTMLBodyElement;\n      body.removeChild(body.firstChild !);\n      return body;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * Use an HTML5 `template` element, if supported, or an inert body element created via\n   * `createHtmlDocument` to create and fill an inert DOM element.\n   * This is the default sane strategy to use if the browser does not require one of the specialised\n   * strategies above.\n   */\n  private getInertBodyElement_InertDocument(html: string) {\n    // Prefer using <template> element if supported.\n    const templateEl = this.inertDocument.createElement('template');\n    if ('content' in templateEl) {\n      templateEl.innerHTML = html;\n      return templateEl;\n    }\n\n    this.inertBodyElement.innerHTML = html;\n\n    // Support: IE 9-11 only\n    // strip custom-namespaced attributes on IE<=11\n    if ((this.defaultDoc as any).documentMode) {\n      this.stripCustomNsAttrs(this.inertBodyElement);\n    }\n\n    return this.inertBodyElement;\n  }\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n   * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n   * 'ns1:xlink:foo').\n   *\n   * This is undesirable since we don't want to allow any of these custom attributes. This method\n   * strips them all.\n   */\n  private stripCustomNsAttrs(el: Element) {\n    const elAttrs = el.attributes;\n    // loop backwards so that we can support removals.\n    for (let i = elAttrs.length - 1; 0 < i; i--) {\n      const attrib = elAttrs.item(i);\n      const attrName = attrib !.name;\n      if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n        el.removeAttribute(attrName);\n      }\n    }\n    let childNode = el.firstChild as Node | null;\n    while (childNode) {\n      if (childNode.nodeType === Node.ELEMENT_NODE) this.stripCustomNsAttrs(childNode as Element);\n      childNode = childNode.nextSibling;\n    }\n  }\n}\n\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n  try {\n    return !!(window as any).DOMParser;\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../is_dev_mode';\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/* A pattern that matches safe srcset values */\nconst SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nconst DATA_URL_PATTERN =\n    /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n\nexport function _sanitizeUrl(url: string): string {\n  url = String(url);\n  if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN)) return url;\n\n  if (isDevMode()) {\n    console.warn(`WARNING: sanitizing unsafe URL value ${url} (see http://g.co/ng/security#xss)`);\n  }\n\n  return 'unsafe:' + url;\n}\n\nexport function sanitizeSrcset(srcset: string): string {\n  srcset = String(srcset);\n  return srcset.split(',').map((srcset) => _sanitizeUrl(srcset.trim())).join(', ');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../is_dev_mode';\nimport {InertBodyHelper} from './inert_body';\nimport {_sanitizeUrl, sanitizeSrcset} from './url_sanitizer';\n\nfunction tagSet(tags: string): {[k: string]: boolean} {\n  const res: {[k: string]: boolean} = {};\n  for (const t of tags.split(',')) res[t] = true;\n  return res;\n}\n\nfunction merge(...sets: {[k: string]: boolean}[]): {[k: string]: boolean} {\n  const res: {[k: string]: boolean} = {};\n  for (const s of sets) {\n    for (const v in s) {\n      if (s.hasOwnProperty(v)) res[v] = true;\n    }\n  }\n  return res;\n}\n\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nconst VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nconst OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nconst OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nconst OPTIONAL_END_TAG_ELEMENTS =\n    merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n\n// Safe Block Elements - HTML5\nconst BLOCK_ELEMENTS = merge(\n    OPTIONAL_END_TAG_BLOCK_ELEMENTS,\n    tagSet(\n        'address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n\n// Inline Elements - HTML5\nconst INLINE_ELEMENTS = merge(\n    OPTIONAL_END_TAG_INLINE_ELEMENTS,\n    tagSet(\n        'a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n\nconst VALID_ELEMENTS =\n    merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n\n// Attributes that have href and hence need to be sanitized\nconst URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n\n// Attributes that have special href set hence need to be sanitized\nconst SRCSET_ATTRS = tagSet('srcset');\n\nconst HTML_ATTRS = tagSet(\n    'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\n\nconst VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nclass SanitizingHtmlSerializer {\n  // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n  // because characters were re-encoded.\n  public sanitizedSomething = false;\n  private buf: string[] = [];\n\n  sanitizeChildren(el: Element): string {\n    // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n    // However this code never accesses properties off of `document` before deleting its contents\n    // again, so it shouldn't be vulnerable to DOM clobbering.\n    let current: Node = el.firstChild !;\n    while (current) {\n      if (current.nodeType === Node.ELEMENT_NODE) {\n        this.startElement(current as Element);\n      } else if (current.nodeType === Node.TEXT_NODE) {\n        this.chars(current.nodeValue !);\n      } else {\n        // Strip non-element, non-text nodes.\n        this.sanitizedSomething = true;\n      }\n      if (current.firstChild) {\n        current = current.firstChild !;\n        continue;\n      }\n      while (current) {\n        // Leaving the element. Walk up and to the right, closing tags as we go.\n        if (current.nodeType === Node.ELEMENT_NODE) {\n          this.endElement(current as Element);\n        }\n\n        let next = this.checkClobberedElement(current, current.nextSibling !);\n\n        if (next) {\n          current = next;\n          break;\n        }\n\n        current = this.checkClobberedElement(current, current.parentNode !);\n      }\n    }\n    return this.buf.join('');\n  }\n\n  private startElement(element: Element) {\n    const tagName = element.nodeName.toLowerCase();\n    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.sanitizedSomething = true;\n      return;\n    }\n    this.buf.push('<');\n    this.buf.push(tagName);\n    const elAttrs = element.attributes;\n    for (let i = 0; i < elAttrs.length; i++) {\n      const elAttr = elAttrs.item(i);\n      const attrName = elAttr !.name;\n      const lower = attrName.toLowerCase();\n      if (!VALID_ATTRS.hasOwnProperty(lower)) {\n        this.sanitizedSomething = true;\n        continue;\n      }\n      let value = elAttr !.value;\n      // TODO(martinprobst): Special case image URIs for data:image/...\n      if (URI_ATTRS[lower]) value = _sanitizeUrl(value);\n      if (SRCSET_ATTRS[lower]) value = sanitizeSrcset(value);\n      this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n    }\n    this.buf.push('>');\n  }\n\n  private endElement(current: Element) {\n    const tagName = current.nodeName.toLowerCase();\n    if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.buf.push('</');\n      this.buf.push(tagName);\n      this.buf.push('>');\n    }\n  }\n\n  private chars(chars: string) { this.buf.push(encodeEntities(chars)); }\n\n  checkClobberedElement(node: Node, nextNode: Node): Node {\n    if (nextNode &&\n        (node.compareDocumentPosition(nextNode) &\n         Node.DOCUMENT_POSITION_CONTAINED_BY) ===Â Node.DOCUMENT_POSITION_CONTAINED_BY) {\n      throw new Error(\n          `Failed to sanitize html because the element is clobbered: ${(node as Element).outerHTML}`);\n    }\n    return nextNode;\n  }\n}\n\n// Regular Expressions for parsing tags and attributes\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value: string) {\n  return value.replace(/&/g, '&amp;')\n      .replace(\n          SURROGATE_PAIR_REGEXP,\n          function(match: string) {\n            const hi = match.charCodeAt(0);\n            const low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n          })\n      .replace(\n          NON_ALPHANUMERIC_REGEXP,\n          function(match: string) { return '&#' + match.charCodeAt(0) + ';'; })\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n}\n\nlet inertBodyHelper: InertBodyHelper;\n\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nexport function _sanitizeHtml(defaultDoc: any, unsafeHtmlInput: string): string {\n  let inertBodyElement: HTMLElement|null = null;\n  try {\n    inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n    // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n    let unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n    inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n\n    // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n    // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n    let mXSSAttempts = 5;\n    let parsedHtml = unsafeHtml;\n\n    do {\n      if (mXSSAttempts === 0) {\n        throw new Error('Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      unsafeHtml = parsedHtml;\n      parsedHtml = inertBodyElement !.innerHTML;\n      inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    } while (unsafeHtml !== parsedHtml);\n\n    const sanitizer = new SanitizingHtmlSerializer();\n    const safeHtml = sanitizer.sanitizeChildren(\n        getTemplateContent(inertBodyElement !) as Element || inertBodyElement);\n    if (isDevMode() && sanitizer.sanitizedSomething) {\n      console.warn(\n          'WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n    }\n\n    return safeHtml;\n  } finally {\n    // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n    if (inertBodyElement) {\n      const parent = getTemplateContent(inertBodyElement) || inertBodyElement;\n      while (parent.firstChild) {\n        parent.removeChild(parent.firstChild);\n      }\n    }\n  }\n}\n\nfunction getTemplateContent(el: Node): Node|null {\n  return 'content' in (el as any /** Microsoft/TypeScript#21517 */) && isTemplateElement(el) ?\n      el.content :\n      null;\n}\nfunction isTemplateElement(el: Node): el is HTMLTemplateElement {\n  return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @publicApi\n */\nexport enum SecurityContext {\n  NONE = 0,\n  HTML = 1,\n  STYLE = 2,\n  SCRIPT = 3,\n  URL = 4,\n  RESOURCE_URL = 5,\n}\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * @publicApi\n */\nexport abstract class Sanitizer {\n  abstract sanitize(context: SecurityContext, value: {}|string|null): string|null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../is_dev_mode';\nimport {_sanitizeUrl} from './url_sanitizer';\n\n\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nconst VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nconst TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nconst COLOR_FNS = '(?:rgb|hsl)a?';\nconst GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nconst CSS3_FNS = '(?:calc|attr)';\nconst FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nconst SAFE_STYLE_VALUE = new RegExp(\n    `^(${VALUES}|` +\n        `(?:${TRANSFORMATION_FNS}|${COLOR_FNS}|${GRADIENTS}|${CSS3_FNS})` +\n        `${FN_ARGS})$`,\n    'g');\n\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nconst URL_RE = /^url\\(([^)]+)\\)$/;\n\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value: string) {\n  let outsideSingle = true;\n  let outsideDouble = true;\n  for (let i = 0; i < value.length; i++) {\n    const c = value.charAt(i);\n    if (c === '\\'' && outsideDouble) {\n      outsideSingle = !outsideSingle;\n    } else if (c === '\"' && outsideSingle) {\n      outsideDouble = !outsideDouble;\n    }\n  }\n  return outsideSingle && outsideDouble;\n}\n\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nexport function _sanitizeStyle(value: string): string {\n  value = String(value).trim();  // Make sure it's actually a string.\n  if (!value) return '';\n\n  // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n  // reasoning behind this.\n  const urlMatch = value.match(URL_RE);\n  if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n      value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n    return value;  // Safe style values.\n  }\n\n  if (isDevMode()) {\n    console.warn(\n        `WARNING: sanitizing unsafe style value ${value} (see http://g.co/ng/security#xss).`);\n  }\n\n  return 'unsafe';\n}\n\n\n/**\n * Used to intercept and sanitize style values before they are written to the renderer.\n *\n * This function is designed to be called in two modes. When a value is not provided\n * then the function will return a boolean whether a property will be sanitized later.\n * If a value is provided then the sanitized version of that will be returned.\n */\nexport interface StyleSanitizeFn {\n  /** This mode is designed to instruct whether the property will be used for sanitization\n   * at a later point */\n  (prop: string): boolean;\n  /** This mode is designed to sanitize the provided value */\n  (prop: string, value: string): string;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getCurrentSanitizer} from '../render3/instructions';\nimport {stringify} from '../render3/util';\n\nimport {BypassType, allowSanitizationBypass} from './bypass';\nimport {_sanitizeHtml as _sanitizeHtml} from './html_sanitizer';\nimport {SecurityContext} from './security';\nimport {StyleSanitizeFn, _sanitizeStyle as _sanitizeStyle} from './style_sanitizer';\nimport {_sanitizeUrl as _sanitizeUrl} from './url_sanitizer';\n\n\n\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nexport function sanitizeHtml(unsafeHtml: any): string {\n  const s = getCurrentSanitizer();\n  if (s) {\n    return s.sanitize(SecurityContext.HTML, unsafeHtml) || '';\n  }\n  if (allowSanitizationBypass(unsafeHtml, BypassType.Html)) {\n    return unsafeHtml.toString();\n  }\n  return _sanitizeHtml(document, stringify(unsafeHtml));\n}\n\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nexport function sanitizeStyle(unsafeStyle: any): string {\n  const s = getCurrentSanitizer();\n  if (s) {\n    return s.sanitize(SecurityContext.STYLE, unsafeStyle) || '';\n  }\n  if (allowSanitizationBypass(unsafeStyle, BypassType.Style)) {\n    return unsafeStyle.toString();\n  }\n  return _sanitizeStyle(stringify(unsafeStyle));\n}\n\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nexport function sanitizeUrl(unsafeUrl: any): string {\n  const s = getCurrentSanitizer();\n  if (s) {\n    return s.sanitize(SecurityContext.URL, unsafeUrl) || '';\n  }\n  if (allowSanitizationBypass(unsafeUrl, BypassType.Url)) {\n    return unsafeUrl.toString();\n  }\n  return _sanitizeUrl(stringify(unsafeUrl));\n}\n\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nexport function sanitizeResourceUrl(unsafeResourceUrl: any): string {\n  const s = getCurrentSanitizer();\n  if (s) {\n    return s.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n  }\n  if (allowSanitizationBypass(unsafeResourceUrl, BypassType.ResourceUrl)) {\n    return unsafeResourceUrl.toString();\n  }\n  throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\nexport function sanitizeScript(unsafeScript: any): string {\n  const s = getCurrentSanitizer();\n  if (s) {\n    return s.sanitize(SecurityContext.SCRIPT, unsafeScript) || '';\n  }\n  if (allowSanitizationBypass(unsafeScript, BypassType.Script)) {\n    return unsafeScript.toString();\n  }\n  throw new Error('unsafe value used in a script context');\n}\n\n/**\n * The default style sanitizer will handle sanitization for style properties by\n * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n */\nexport const defaultStyleSanitizer = (function(prop: string, value?: string): string | boolean {\n  if (value === undefined) {\n    return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n        prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n        prop === 'list-style-image';\n  }\n\n  return sanitizeStyle(value);\n} as StyleSanitizeFn);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {defineInjectable, defineInjector,} from '../../di/defs';\nimport {inject} from '../../di/injector';\nimport * as r3 from '../index';\nimport * as sanitization from '../../sanitization/sanitization';\n\n\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nexport const angularCoreEnv: {[name: string]: Function} = {\n  'ÉµdefineBase': r3.defineBase,\n  'ÉµdefineComponent': r3.defineComponent,\n  'ÉµdefineDirective': r3.defineDirective,\n  'defineInjectable': defineInjectable,\n  'defineInjector': defineInjector,\n  'ÉµdefineNgModule': r3.defineNgModule,\n  'ÉµdefinePipe': r3.definePipe,\n  'ÉµdirectiveInject': r3.directiveInject,\n  'ÉµgetFactoryOf': r3.getFactoryOf,\n  'ÉµgetInheritedFactory': r3.getInheritedFactory,\n  'inject': inject,\n  'ÉµinjectAttribute': r3.injectAttribute,\n  'ÉµtemplateRefExtractor': r3.templateRefExtractor,\n  'ÉµNgOnChangesFeature': r3.NgOnChangesFeature,\n  'ÉµPublicFeature': r3.PublicFeature,\n  'ÉµInheritDefinitionFeature': r3.InheritDefinitionFeature,\n  'ÉµelementAttribute': r3.elementAttribute,\n  'Éµbind': r3.bind,\n  'Éµcontainer': r3.container,\n  'ÉµnextContext': r3.nextContext,\n  'ÉµcontainerRefreshStart': r3.containerRefreshStart,\n  'ÉµcontainerRefreshEnd': r3.containerRefreshEnd,\n  'ÉµloadQueryList': r3.loadQueryList,\n  'ÉµnamespaceHTML': r3.namespaceHTML,\n  'ÉµnamespaceMathML': r3.namespaceMathML,\n  'ÉµnamespaceSVG': r3.namespaceSVG,\n  'ÉµenableBindings': r3.enableBindings,\n  'ÉµdisableBindings': r3.disableBindings,\n  'ÉµelementStart': r3.elementStart,\n  'ÉµelementEnd': r3.elementEnd,\n  'Éµelement': r3.element,\n  'ÉµEC': r3.elementContainerStart,\n  'ÉµeC': r3.elementContainerEnd,\n  'ÉµpureFunction0': r3.pureFunction0,\n  'ÉµpureFunction1': r3.pureFunction1,\n  'ÉµpureFunction2': r3.pureFunction2,\n  'ÉµpureFunction3': r3.pureFunction3,\n  'ÉµpureFunction4': r3.pureFunction4,\n  'ÉµpureFunction5': r3.pureFunction5,\n  'ÉµpureFunction6': r3.pureFunction6,\n  'ÉµpureFunction7': r3.pureFunction7,\n  'ÉµpureFunction8': r3.pureFunction8,\n  'ÉµpureFunctionV': r3.pureFunctionV,\n  'ÉµgetCurrentView': r3.getCurrentView,\n  'ÉµrestoreView': r3.restoreView,\n  'Éµinterpolation1': r3.interpolation1,\n  'Éµinterpolation2': r3.interpolation2,\n  'Éµinterpolation3': r3.interpolation3,\n  'Éµinterpolation4': r3.interpolation4,\n  'Éµinterpolation5': r3.interpolation5,\n  'Éµinterpolation6': r3.interpolation6,\n  'Éµinterpolation7': r3.interpolation7,\n  'Éµinterpolation8': r3.interpolation8,\n  'ÉµinterpolationV': r3.interpolationV,\n  'ÉµelementClassProp': r3.elementClassProp,\n  'Éµlistener': r3.listener,\n  'Éµload': r3.load,\n  'Éµprojection': r3.projection,\n  'ÉµelementProperty': r3.elementProperty,\n  'ÉµpipeBind1': r3.pipeBind1,\n  'ÉµpipeBind2': r3.pipeBind2,\n  'ÉµpipeBind3': r3.pipeBind3,\n  'ÉµpipeBind4': r3.pipeBind4,\n  'ÉµpipeBindV': r3.pipeBindV,\n  'ÉµprojectionDef': r3.projectionDef,\n  'Éµpipe': r3.pipe,\n  'Éµquery': r3.query,\n  'ÉµqueryRefresh': r3.queryRefresh,\n  'ÉµregisterContentQuery': r3.registerContentQuery,\n  'Éµreference': r3.reference,\n  'ÉµelementStyling': r3.elementStyling,\n  'ÉµelementStylingMap': r3.elementStylingMap,\n  'ÉµelementStyleProp': r3.elementStyleProp,\n  'ÉµelementStylingApply': r3.elementStylingApply,\n  'Éµtemplate': r3.template,\n  'Éµtext': r3.text,\n  'ÉµtextBinding': r3.textBinding,\n  'ÉµembeddedViewStart': r3.embeddedViewStart,\n  'ÉµembeddedViewEnd': r3.embeddedViewEnd,\n  'Éµi18nAttribute': r3.i18nAttribute,\n  'Éµi18nExp': r3.i18nExp,\n  'Éµi18nStart': r3.i18nStart,\n  'Éµi18nEnd': r3.i18nEnd,\n  'Éµi18nApply': r3.i18nApply,\n\n  'ÉµsanitizeHtml': sanitization.sanitizeHtml,\n  'ÉµsanitizeStyle': sanitization.sanitizeStyle,\n  'ÉµdefaultStyleSanitizer': sanitization.defaultStyleSanitizer,\n  'ÉµsanitizeResourceUrl': sanitization.sanitizeResourceUrl,\n  'ÉµsanitizeScript': sanitization.sanitizeScript,\n  'ÉµsanitizeUrl': sanitization.sanitizeUrl\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Host, Inject, Optional, Self, SkipSelf} from '../../di/metadata';\nimport {Attribute} from '../../metadata/di';\nimport {ReflectionCapabilities} from '../../reflection/reflection_capabilities';\nimport {Type} from '../../type';\n\nimport {CompilerFacade, R3DependencyMetadataFacade, getCompilerFacade} from './compiler_facade';\n\nlet _reflect: ReflectionCapabilities|null = null;\n\nexport function getReflect(): ReflectionCapabilities {\n  return (_reflect = _reflect || new ReflectionCapabilities());\n}\n\nexport function reflectDependencies(type: Type<any>): R3DependencyMetadataFacade[] {\n  return convertDependencies(getReflect().parameters(type));\n}\n\nexport function convertDependencies(deps: any[]): R3DependencyMetadataFacade[] {\n  const compiler = getCompilerFacade();\n  return deps.map(dep => reflectDependency(compiler, dep));\n}\n\nfunction reflectDependency(compiler: CompilerFacade, dep: any | any[]): R3DependencyMetadataFacade {\n  const meta: R3DependencyMetadataFacade = {\n    token: null,\n    host: false,\n    optional: false,\n    resolved: compiler.R3ResolvedDependencyType.Token,\n    self: false,\n    skipSelf: false,\n  };\n\n  function setTokenAndResolvedType(token: any): void {\n    meta.resolved = compiler.R3ResolvedDependencyType.Token;\n    meta.token = token;\n  }\n\n  if (Array.isArray(dep)) {\n    if (dep.length === 0) {\n      throw new Error('Dependency array must have arguments.');\n    }\n    for (let j = 0; j < dep.length; j++) {\n      const param = dep[j];\n      if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n        meta.optional = true;\n      } else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n        meta.skipSelf = true;\n      } else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n        meta.self = true;\n      } else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n        meta.host = true;\n      } else if (param instanceof Inject) {\n        meta.token = param.token;\n      } else if (param instanceof Attribute) {\n        if (param.attributeName === undefined) {\n          throw new Error(`Attribute name must be defined.`);\n        }\n        meta.token = param.attributeName;\n        meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n      } else {\n        setTokenAndResolvedType(param);\n      }\n    }\n  } else {\n    setTokenAndResolvedType(dep);\n  }\n  return meta;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModuleWithProviders, NgModule, NgModuleDef, NgModuleTransitiveScopes} from '../../metadata/ng_module';\nimport {Type} from '../../type';\nimport {getComponentDef, getDirectiveDef, getNgModuleDef, getPipeDef} from '../definition';\nimport {NG_COMPONENT_DEF, NG_DIRECTIVE_DEF, NG_INJECTOR_DEF, NG_MODULE_DEF, NG_PIPE_DEF} from '../fields';\nimport {ComponentDef} from '../interfaces/definition';\n\nimport {R3InjectorMetadataFacade, getCompilerFacade} from './compiler_facade';\nimport {angularCoreEnv} from './environment';\nimport {reflectDependencies} from './util';\n\nconst EMPTY_ARRAY: Type<any>[] = [];\n\n/**\n * Compiles a module in JIT mode.\n *\n * This function automatically gets called when a class has a `@NgModule` decorator.\n */\nexport function compileNgModule(moduleType: Type<any>, ngModule: NgModule): void {\n  compileNgModuleDefs(moduleType, ngModule);\n  setScopeOnDeclaredComponents(moduleType, ngModule);\n}\n\n/**\n * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n */\nexport function compileNgModuleDefs(moduleType: Type<any>, ngModule: NgModule): void {\n  const declarations: Type<any>[] = flatten(ngModule.declarations || EMPTY_ARRAY);\n\n  let ngModuleDef: any = null;\n  Object.defineProperty(moduleType, NG_MODULE_DEF, {\n    configurable: true,\n    get: () => {\n      if (ngModuleDef === null) {\n        ngModuleDef = getCompilerFacade().compileNgModule(\n            angularCoreEnv, `ng://${moduleType.name}/ngModuleDef.js`, {\n              type: moduleType,\n              bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY),\n              declarations: declarations,\n              imports: flatten(ngModule.imports || EMPTY_ARRAY).map(expandModuleWithProviders),\n              exports: flatten(ngModule.exports || EMPTY_ARRAY).map(expandModuleWithProviders),\n              emitInline: true,\n            });\n      }\n      return ngModuleDef;\n    }\n  });\n\n  let ngInjectorDef: any = null;\n  Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n    get: () => {\n      if (ngInjectorDef === null) {\n        const meta: R3InjectorMetadataFacade = {\n          name: moduleType.name,\n          type: moduleType,\n          deps: reflectDependencies(moduleType),\n          providers: ngModule.providers || EMPTY_ARRAY,\n          imports: [\n            ngModule.imports || EMPTY_ARRAY,\n            ngModule.exports || EMPTY_ARRAY,\n          ],\n        };\n        ngInjectorDef = getCompilerFacade().compileInjector(\n            angularCoreEnv, `ng://${moduleType.name}/ngInjectorDef.js`, meta);\n      }\n      return ngInjectorDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\n/**\n * Some declared components may be compiled asynchronously, and thus may not have their\n * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n * the `ngSelectorScope` property of the declared type.\n */\nfunction setScopeOnDeclaredComponents(moduleType: Type<any>, ngModule: NgModule) {\n  const declarations: Type<any>[] = flatten(ngModule.declarations || EMPTY_ARRAY);\n\n  const transitiveScopes = transitiveScopesFor(moduleType);\n\n  declarations.forEach(declaration => {\n    if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n      // An `ngComponentDef` field exists - go ahead and patch the component directly.\n      const component = declaration as Type<any>& {ngComponentDef: ComponentDef<any>};\n      const componentDef = getComponentDef(component) !;\n      patchComponentDefWithScope(componentDef, transitiveScopes);\n    } else if (\n        !declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n      // Set `ngSelectorScope` for future reference when the component compilation finishes.\n      (declaration as Type<any>& {ngSelectorScope?: any}).ngSelectorScope = moduleType;\n    }\n  });\n}\n\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nexport function patchComponentDefWithScope<C>(\n    componentDef: ComponentDef<C>, transitiveScopes: NgModuleTransitiveScopes) {\n  componentDef.directiveDefs = () => Array.from(transitiveScopes.compilation.directives)\n                                         .map(dir => getDirectiveDef(dir) || getComponentDef(dir) !)\n                                         .filter(def => !!def);\n  componentDef.pipeDefs = () =>\n      Array.from(transitiveScopes.compilation.pipes).map(pipe => getPipeDef(pipe) !);\n}\n\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n */\nexport function transitiveScopesFor<T>(moduleType: Type<T>): NgModuleTransitiveScopes {\n  if (!isNgModule(moduleType)) {\n    throw new Error(`${moduleType.name} does not have an ngModuleDef`);\n  }\n  const def = getNgModuleDef(moduleType) !;\n\n  if (def.transitiveCompileScopes !== null) {\n    return def.transitiveCompileScopes;\n  }\n\n  const scopes: NgModuleTransitiveScopes = {\n    compilation: {\n      directives: new Set<any>(),\n      pipes: new Set<any>(),\n    },\n    exported: {\n      directives: new Set<any>(),\n      pipes: new Set<any>(),\n    },\n  };\n\n  def.declarations.forEach(declared => {\n    const declaredWithDefs = declared as Type<any>& { ngPipeDef?: any; };\n\n    if (getPipeDef(declaredWithDefs)) {\n      scopes.compilation.pipes.add(declared);\n    } else {\n      // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n      // had its template compiled yet. In either case, it gets added to the compilation's\n      // directives.\n      scopes.compilation.directives.add(declared);\n    }\n  });\n\n  def.imports.forEach(<I>(imported: Type<I>) => {\n    const importedTyped = imported as Type<I>& {\n      // If imported is an @NgModule:\n      ngModuleDef?: NgModuleDef<I>;\n    };\n\n    if (!isNgModule<I>(importedTyped)) {\n      throw new Error(`Importing ${importedTyped.name} which does not have an ngModuleDef`);\n    }\n\n    // When this module imports another, the imported module's exported directives and pipes are\n    // added to the compilation scope of this module.\n    const importedScope = transitiveScopesFor(importedTyped);\n    importedScope.exported.directives.forEach(entry => scopes.compilation.directives.add(entry));\n    importedScope.exported.pipes.forEach(entry => scopes.compilation.pipes.add(entry));\n  });\n\n  def.exports.forEach(<E>(exported: Type<E>) => {\n    const exportedTyped = exported as Type<E>& {\n      // Components, Directives, NgModules, and Pipes can all be exported.\n      ngComponentDef?: any;\n      ngDirectiveDef?: any;\n      ngModuleDef?: NgModuleDef<E>;\n      ngPipeDef?: any;\n    };\n\n    // Either the type is a module, a pipe, or a component/directive (which may not have an\n    // ngComponentDef as it might be compiled asynchronously).\n    if (isNgModule(exportedTyped)) {\n      // When this module exports another, the exported module's exported directives and pipes are\n      // added to both the compilation and exported scopes of this module.\n      const exportedScope = transitiveScopesFor(exportedTyped);\n      exportedScope.exported.directives.forEach(entry => {\n        scopes.compilation.directives.add(entry);\n        scopes.exported.directives.add(entry);\n      });\n      exportedScope.exported.pipes.forEach(entry => {\n        scopes.compilation.pipes.add(entry);\n        scopes.exported.pipes.add(entry);\n      });\n    } else if (getNgModuleDef(exportedTyped)) {\n      scopes.exported.pipes.add(exportedTyped);\n    } else {\n      scopes.exported.directives.add(exportedTyped);\n    }\n  });\n\n  def.transitiveCompileScopes = scopes;\n  return scopes;\n}\n\nfunction flatten<T>(values: any[]): T[] {\n  const out: T[] = [];\n  values.forEach(value => {\n    if (Array.isArray(value)) {\n      out.push(...flatten<T>(value));\n    } else {\n      out.push(value);\n    }\n  });\n  return out;\n}\n\nfunction expandModuleWithProviders(value: Type<any>| ModuleWithProviders<{}>): Type<any> {\n  if (isModuleWithProviders(value)) {\n    return value.ngModule;\n  }\n  return value;\n}\n\nfunction isModuleWithProviders(value: any): value is ModuleWithProviders<{}> {\n  return (value as{ngModule?: any}).ngModule !== undefined;\n}\n\nfunction isNgModule<T>(value: Type<T>): value is Type<T>&{ngModuleDef: NgModuleDef<T>} {\n  return !!getNgModuleDef(value);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Query} from '../../metadata/di';\nimport {Component, Directive} from '../../metadata/directives';\nimport {componentNeedsResolution, maybeQueueResolutionOfComponentResources} from '../../metadata/resource_loading';\nimport {ViewEncapsulation} from '../../metadata/view';\nimport {Type} from '../../type';\nimport {stringify} from '../../util';\nimport {EMPTY_ARRAY} from '../definition';\nimport {NG_COMPONENT_DEF, NG_DIRECTIVE_DEF} from '../fields';\n\nimport {R3DirectiveMetadataFacade, getCompilerFacade} from './compiler_facade';\nimport {R3ComponentMetadataFacade, R3QueryMetadataFacade} from './compiler_facade_interface';\nimport {angularCoreEnv} from './environment';\nimport {patchComponentDefWithScope, transitiveScopesFor} from './module';\nimport {getReflect, reflectDependencies} from './util';\n\n\n\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nexport function compileComponent(type: Type<any>, metadata: Component): void {\n  let ngComponentDef: any = null;\n  // Metadata may have resources which need to be resolved.\n  maybeQueueResolutionOfComponentResources(metadata);\n  Object.defineProperty(type, NG_COMPONENT_DEF, {\n    get: () => {\n      const compiler = getCompilerFacade();\n      if (ngComponentDef === null) {\n        if (componentNeedsResolution(metadata)) {\n          const error = [`Component '${stringify(type)}' is not resolved:`];\n          if (metadata.templateUrl) {\n            error.push(` - templateUrl: ${stringify(metadata.templateUrl)}`);\n          }\n          if (metadata.styleUrls && metadata.styleUrls.length) {\n            error.push(` - styleUrls: ${JSON.stringify(metadata.styleUrls)}`);\n          }\n          error.push(`Did you run and wait for 'resolveComponentResources()'?`);\n          throw new Error(error.join('\\n'));\n        }\n        const meta: R3ComponentMetadataFacade = {\n          ...directiveMetadata(type, metadata),\n          template: metadata.template || '',\n          preserveWhitespaces: metadata.preserveWhitespaces || false,\n          styles: metadata.styles || EMPTY_ARRAY,\n          animations: metadata.animations,\n          viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery),\n          directives: new Map(),\n          pipes: new Map(),\n          encapsulation: metadata.encapsulation || ViewEncapsulation.Emulated,\n          viewProviders: metadata.viewProviders || null,\n        };\n        ngComponentDef = compiler.compileComponent(\n            angularCoreEnv, `ng://${stringify(type)}/template.html`, meta);\n\n        // If component compilation is async, then the @NgModule annotation which declares the\n        // component may execute and set an ngSelectorScope property on the component type. This\n        // allows the component to patch itself with directiveDefs from the module after it\n        // finishes compiling.\n        if (hasSelectorScope(type)) {\n          const scopes = transitiveScopesFor(type.ngSelectorScope);\n          patchComponentDefWithScope(ngComponentDef, scopes);\n        }\n      }\n      return ngComponentDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nfunction hasSelectorScope<T>(component: Type<T>): component is Type<T>&\n    {ngSelectorScope: Type<any>} {\n  return (component as{ngSelectorScope?: any}).ngSelectorScope !== undefined;\n}\n\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nexport function compileDirective(type: Type<any>, directive: Directive): void {\n  let ngDirectiveDef: any = null;\n  Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n    get: () => {\n      if (ngDirectiveDef === null) {\n        const facade = directiveMetadata(type, directive);\n        ngDirectiveDef = getCompilerFacade().compileDirective(\n            angularCoreEnv, `ng://${type && type.name}/ngDirectiveDef.js`, facade);\n      }\n      return ngDirectiveDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nexport function extendsDirectlyFromObject(type: Type<any>): boolean {\n  return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type: Type<any>, metadata: Directive): R3DirectiveMetadataFacade {\n  // Reflect inputs and outputs.\n  const propMetadata = getReflect().propMetadata(type);\n\n  return {\n    name: type.name,\n    type: type,\n    typeArgumentCount: 0,\n    selector: metadata.selector !,\n    deps: reflectDependencies(type),\n    host: metadata.host || EMPTY_OBJ,\n    propMetadata: propMetadata,\n    inputs: metadata.inputs || EMPTY_ARRAY,\n    outputs: metadata.outputs || EMPTY_ARRAY,\n    queries: extractQueriesMetadata(propMetadata, isContentQuery),\n    lifecycle: {\n      usesOnChanges: type.prototype.ngOnChanges !== undefined,\n    },\n    typeSourceSpan: null !,\n    usesInheritance: !extendsDirectlyFromObject(type),\n    exportAs: metadata.exportAs || null,\n    providers: metadata.providers || null,\n  };\n}\n\nconst EMPTY_OBJ = {};\n\nfunction convertToR3QueryPredicate(selector: any): any|string[] {\n  return typeof selector === 'string' ? splitByComma(selector) : selector;\n}\n\nexport function convertToR3QueryMetadata(propertyName: string, ann: Query): R3QueryMetadataFacade {\n  return {\n    propertyName: propertyName,\n    predicate: convertToR3QueryPredicate(ann.selector),\n    descendants: ann.descendants,\n    first: ann.first,\n    read: ann.read ? ann.read : null\n  };\n}\nfunction extractQueriesMetadata(\n    propMetadata: {[key: string]: any[]},\n    isQueryAnn: (ann: any) => ann is Query): R3QueryMetadataFacade[] {\n  const queriesMeta: R3QueryMetadataFacade[] = [];\n  for (const field in propMetadata) {\n    if (propMetadata.hasOwnProperty(field)) {\n      propMetadata[field].forEach(ann => {\n        if (isQueryAnn(ann)) {\n          queriesMeta.push(convertToR3QueryMetadata(field, ann));\n        }\n      });\n    }\n  }\n  return queriesMeta;\n}\n\nfunction isContentQuery(value: any): value is Query {\n  const name = value.ngMetadataName;\n  return name === 'ContentChild' || name === 'ContentChildren';\n}\n\nfunction isViewQuery(value: any): value is Query {\n  const name = value.ngMetadataName;\n  return name === 'ViewChild' || name === 'ViewChildren';\n}\n\nfunction splitByComma(value: string): string[] {\n  return value.split(',').map(piece => piece.trim());\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../../di/injectable';\nimport {ClassSansProvider, ExistingSansProvider, FactorySansProvider, ValueProvider, ValueSansProvider} from '../../di/provider';\nimport {Type} from '../../type';\nimport {getClosureSafeProperty} from '../../util/property';\nimport {NG_INJECTABLE_DEF} from '../fields';\n\nimport {R3InjectableMetadataFacade, getCompilerFacade} from './compiler_facade';\nimport {angularCoreEnv} from './environment';\nimport {convertDependencies, reflectDependencies} from './util';\n\n\n\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nexport function compileInjectable(type: Type<any>, srcMeta?: Injectable): void {\n  // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n  const meta: Injectable = srcMeta || {providedIn: null};\n\n  let def: any = null;\n  Object.defineProperty(type, NG_INJECTABLE_DEF, {\n    get: () => {\n      if (def === null) {\n        const meta: Injectable = srcMeta || {providedIn: null};\n        const hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n            isUseValueProvider(meta) || isUseExistingProvider(meta);\n\n\n        const compilerMeta: R3InjectableMetadataFacade = {\n          name: type.name,\n          type: type,\n          providedIn: meta.providedIn,\n          ctorDeps: reflectDependencies(type),\n          userDeps: undefined\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n          compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (!hasAProvider) {\n          // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n          // The deps will have been reflected above, causing the factory to create the class by\n          // calling\n          // its constructor with injected deps.\n          compilerMeta.useClass = type;\n        } else if (isUseClassProvider(meta)) {\n          // The user explicitly specified useClass, and may or may not have provided deps.\n          compilerMeta.useClass = meta.useClass;\n        } else if (isUseValueProvider(meta)) {\n          // The user explicitly specified useValue.\n          compilerMeta.useValue = meta.useValue;\n        } else if (isUseFactoryProvider(meta)) {\n          // The user explicitly specified useFactory.\n          compilerMeta.useFactory = meta.useFactory;\n        } else if (isUseExistingProvider(meta)) {\n          // The user explicitly specified useExisting.\n          compilerMeta.useExisting = meta.useExisting;\n        } else {\n          // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n          throw new Error(`Unreachable state.`);\n        }\n        def = getCompilerFacade().compileInjectable(\n            angularCoreEnv, `ng://${type.name}/ngInjectableDef.js`, compilerMeta);\n      }\n      return def;\n    },\n  });\n}\n\ntype UseClassProvider = Injectable & ClassSansProvider & {deps?: any[]};\n\nconst USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\n\nfunction isUseClassProvider(meta: Injectable): meta is UseClassProvider {\n  return (meta as UseClassProvider).useClass !== undefined;\n}\n\nfunction isUseValueProvider(meta: Injectable): meta is Injectable&ValueSansProvider {\n  return USE_VALUE in meta;\n}\n\nfunction isUseFactoryProvider(meta: Injectable): meta is Injectable&FactorySansProvider {\n  return (meta as FactorySansProvider).useFactory !== undefined;\n}\n\nfunction isUseExistingProvider(meta: Injectable): meta is Injectable&ExistingSansProvider {\n  return (meta as ExistingSansProvider).useExisting !== undefined;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe} from '../../metadata/directives';\nimport {Type} from '../../type';\nimport {NG_PIPE_DEF} from '../fields';\nimport {stringify} from '../util';\n\nimport {getCompilerFacade} from './compiler_facade';\nimport {angularCoreEnv} from './environment';\nimport {reflectDependencies} from './util';\n\nexport function compilePipe(type: Type<any>, meta: Pipe): void {\n  let ngPipeDef: any = null;\n  Object.defineProperty(type, NG_PIPE_DEF, {\n    get: () => {\n      if (ngPipeDef === null) {\n        ngPipeDef = getCompilerFacade().compilePipe(\n            angularCoreEnv, `ng://${stringify(type)}/ngPipeDef.js`, {\n              type: type,\n              name: type.name,\n              deps: reflectDependencies(type),\n              pipeName: meta.name,\n              pure: meta.pure !== undefined ? meta.pure : true\n            });\n      }\n      return ngPipeDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {compileComponent, compileDirective} from '../../render3/jit/directive';\nimport {compileInjectable} from '../../render3/jit/injectable';\nimport {compileNgModule, compileNgModuleDefs, patchComponentDefWithScope} from '../../render3/jit/module';\nimport {compilePipe} from '../../render3/jit/pipe';\n\nexport const ivyEnabled = true;\nexport const R3_COMPILE_COMPONENT = compileComponent;\nexport const R3_COMPILE_DIRECTIVE = compileDirective;\nexport const R3_COMPILE_INJECTABLE = compileInjectable;\nexport const R3_COMPILE_NGMODULE = compileNgModule;\nexport const R3_COMPILE_PIPE = compilePipe;\nexport const R3_COMPILE_NGMODULE_DEFS = compileNgModuleDefs;\nexport const R3_PATCH_COMPONENT_DEF_WTIH_SCOPE = patchComponentDefWithScope;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectableType, InjectorType, defineInjectable, defineInjector, getInjectableDef} from '../../di/defs';\nimport {InjectableProvider} from '../../di/injectable';\nimport {inject, injectArgs} from '../../di/injector';\nimport {ClassSansProvider, ConstructorSansProvider, ExistingSansProvider, FactorySansProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from '../../di/provider';\nimport {NgModule} from '../../metadata';\nimport {ReflectionCapabilities} from '../../reflection/reflection_capabilities';\nimport {Type} from '../../type';\nimport {getClosureSafeProperty} from '../../util/property';\n\nimport * as ivyOn from './ivy_switch_on';\n\nfunction noop() {}\n\nexport interface DirectiveCompiler { (type: any, meta: any): void; }\n\nexport const R3_COMPILE_COMPONENT__POST_NGCC__: DirectiveCompiler = ivyOn.R3_COMPILE_COMPONENT;\nexport const R3_COMPILE_DIRECTIVE__POST_NGCC__: DirectiveCompiler = ivyOn.R3_COMPILE_DIRECTIVE;\nexport const R3_COMPILE_INJECTABLE__POST_NGCC__: DirectiveCompiler = ivyOn.R3_COMPILE_INJECTABLE;\nexport const R3_COMPILE_NGMODULE__POST_NGCC__: DirectiveCompiler = ivyOn.R3_COMPILE_NGMODULE;\nexport const R3_COMPILE_PIPE__POST_NGCC__: DirectiveCompiler = ivyOn.R3_COMPILE_PIPE;\nexport const R3_COMPILE_NGMODULE_DEFS__POST_NGCC__: DirectiveCompiler =\n    ivyOn.R3_COMPILE_NGMODULE_DEFS;\nexport const R3_PATCH_COMPONENT_DEF_WTIH_SCOPE__POST_NGCC__: DirectiveCompiler =\n    ivyOn.R3_PATCH_COMPONENT_DEF_WTIH_SCOPE;\n\nexport const ivyEnable__POST_NGCC__: boolean = ivyOn.ivyEnabled;\n\nconst R3_COMPILE_COMPONENT__PRE_NGCC__: DirectiveCompiler = noop;\nconst R3_COMPILE_DIRECTIVE__PRE_NGCC__: DirectiveCompiler = noop;\nconst R3_COMPILE_INJECTABLE__PRE_NGCC__: DirectiveCompiler = preR3InjectableCompile;\nconst R3_COMPILE_NGMODULE__PRE_NGCC__: DirectiveCompiler = preR3NgModuleCompile;\nconst R3_COMPILE_PIPE__PRE_NGCC__: DirectiveCompiler = noop;\nconst R3_COMPILE_NGMODULE_DEFS__PRE_NGCC__: DirectiveCompiler = noop;\nconst R3_PATCH_COMPONENT_DEF_WTIH_SCOPE__PRE_NGCC__: DirectiveCompiler = noop;\n\nconst ivyEnable__PRE_NGCC__ = false;\n\nexport const ivyEnabled = ivyEnable__PRE_NGCC__;\nexport let R3_COMPILE_COMPONENT: DirectiveCompiler = R3_COMPILE_COMPONENT__PRE_NGCC__;\nexport let R3_COMPILE_DIRECTIVE: DirectiveCompiler = R3_COMPILE_DIRECTIVE__PRE_NGCC__;\nexport let R3_COMPILE_INJECTABLE: DirectiveCompiler = R3_COMPILE_INJECTABLE__PRE_NGCC__;\nexport let R3_COMPILE_NGMODULE: DirectiveCompiler = R3_COMPILE_NGMODULE__PRE_NGCC__;\nexport let R3_COMPILE_PIPE: DirectiveCompiler = R3_COMPILE_PIPE__PRE_NGCC__;\nexport let R3_COMPILE_NGMODULE_DEFS: DirectiveCompiler = R3_COMPILE_NGMODULE_DEFS__PRE_NGCC__;\nexport let R3_PATCH_COMPONENT_DEF_WTIH_SCOPE: DirectiveCompiler =\n    R3_PATCH_COMPONENT_DEF_WTIH_SCOPE__PRE_NGCC__;\n\n\n////////////////////////////////////////////////////////////\n// Glue code which should be removed after Ivy is default //\n////////////////////////////////////////////////////////////\n\nfunction preR3NgModuleCompile(moduleType: InjectorType<any>, metadata: NgModule): void {\n  let imports = (metadata && metadata.imports) || [];\n  if (metadata && metadata.exports) {\n    imports = [...imports, metadata.exports];\n  }\n\n  moduleType.ngInjectorDef = defineInjector({\n    factory: convertInjectableProviderToFactory(moduleType, {useClass: moduleType}),\n    providers: metadata && metadata.providers,\n    imports: imports,\n  });\n}\n\nconst USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\nconst EMPTY_ARRAY: any[] = [];\n\nfunction convertInjectableProviderToFactory(type: Type<any>, provider?: InjectableProvider): () =>\n    any {\n  if (!provider) {\n    const reflectionCapabilities = new ReflectionCapabilities();\n    const deps = reflectionCapabilities.parameters(type);\n    // TODO - convert to flags.\n    return () => new type(...injectArgs(deps as any[]));\n  }\n\n  if (USE_VALUE in provider) {\n    const valueProvider = (provider as ValueSansProvider);\n    return () => valueProvider.useValue;\n  } else if ((provider as ExistingSansProvider).useExisting) {\n    const existingProvider = (provider as ExistingSansProvider);\n    return () => inject(existingProvider.useExisting);\n  } else if ((provider as FactorySansProvider).useFactory) {\n    const factoryProvider = (provider as FactorySansProvider);\n    return () => factoryProvider.useFactory(...injectArgs(factoryProvider.deps || EMPTY_ARRAY));\n  } else if ((provider as StaticClassSansProvider | ClassSansProvider).useClass) {\n    const classProvider = (provider as StaticClassSansProvider | ClassSansProvider);\n    let deps = (provider as StaticClassSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new classProvider.useClass(...injectArgs(deps));\n  } else {\n    let deps = (provider as ConstructorSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new type(...injectArgs(deps !));\n  }\n}\n\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction preR3InjectableCompile(\n    injectableType: InjectableType<any>,\n    options: {providedIn?: Type<any>| 'root' | null} & InjectableProvider): void {\n  if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n    injectableType.ngInjectableDef = defineInjectable({\n      providedIn: options.providedIn,\n      factory: convertInjectableProviderToFactory(injectableType, options),\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di';\nimport {R3_COMPILE_COMPONENT, R3_COMPILE_DIRECTIVE, R3_COMPILE_PIPE} from '../ivy_switch/compiler/index';\nimport {NG_BASE_DEF} from '../render3/fields';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator, makePropDecorator} from '../util/decorators';\nimport {fillProperties} from '../util/property';\n\nimport {ViewEncapsulation} from './view';\n\n\n\n/**\n * Type of the Directive decorator / constructor function.\n * @publicApi\n */\nexport interface DirectiveDecorator {\n  /**\n   * Marks a class as an Angular directive. You can define your own\n   * directives to attach custom behavior to elements in the DOM.\n   * The options provide configuration metadata that determines\n   * how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directive classes, like component classes, can implement\n   * [life-cycle hooks](guide/lifecycle-hooks) to influence their configuration and behavior.\n   *\n   *\n   * @usageNotes\n   * To define a directive, mark the class with the decorator and provide metadata.\n   *\n   * ```\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * ...\n   * }\n   * ```\n   *\n   * ### Declaring directives\n   *\n   * Directives are [declarables](guide/glossary#declarable).\n   * They must be declared by an NgModule\n   * in order to be usable in an app.\n   *\n   * A directive must belong to exactly one NgModule. Do not re-declare\n   * a directive imported from another module.\n   * List the directive class in the `declarations` field of an NgModule.\n   *\n   * ```\n   * declarations: [\n   *  AppComponent,\n   *  MyDirective\n   * ],\n   * ```\n   *\n   * @Annotation\n   */\n  (obj: Directive): TypeDecorator;\n\n  /**\n   * See the `Directive` decorator.\n   */\n  new (obj: Directive): Directive;\n}\n\nexport interface Directive {\n  /**\n   * The CSS selector that triggers the instantiation of a directive.\n   *\n   * Declare as one of the following:\n   *\n   * - `element-name`: select by element name.\n   * - `.class`: select by class name.\n   * - `[attribute]`: select by attribute name.\n   * - `[attribute=value]`: select by attribute name and value.\n   * - `:not(sub_selector)`: select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: select if either `selector1` or `selector2` matches.\n   *\n   * Angular only allows directives to trigger on CSS selectors that do not cross element\n   * boundaries. For example, consider a directive with an `input[type=text]` selector.\n   * For the following HTML, the directive is instantiated only on the\n   * `<input type=\"text\">` element.\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   *\n   * ```\n   *\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * in the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   * ```\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * A set of injection tokens that allow the DI system to\n   * provide a dependency to this directive or component.\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * @usageNotes\n   *\n   * ### Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   * ```\n   *\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * The following example shows how queries are defined\n   * and when their results are available in lifecycle hooks:\n   *\n   * ```\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   *\n   * @Annotation\n   */\n  queries?: {[key: string]: any};\n\n  /**\n   * If true, this directive/component will be skipped by the AOT compiler and so will always be\n   * compiled using JIT.\n   *\n   * This exists to support future Ivy work and has no effect currently.\n   */\n  jit?: true;\n}\n\n/**\n * Directive decorator and metadata.\n *\n * @Annotation\n */\nexport interface Directive {\n  /**\n   * The CSS selector that identifies this directive in a template\n   * and triggers instantiation of the directive.\n   *\n   * Declare as one of the following:\n   *\n   * - `element-name`: Select by element name.\n   * - `.class`: Select by class name.\n   * - `[attribute]`: Select by attribute name.\n   * - `[attribute=value]`: Select by attribute name and value.\n   * - `:not(sub_selector)`: Select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: Select if either `selector1` or `selector2` matches.\n   *\n   * Angular only allows directives to apply on CSS selectors that do not cross\n   * element boundaries.\n   *\n   * For the following template HTML, a directive with an `input[type=text]` selector,\n   * would be instantiated only on the `<input type=\"text\">` element.\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   */\n  selector?: string;\n\n  /**\n   * The set of event-bound output properties.\n   * When an output property emits an event, an event handler attached\n   * to that event in the template is invoked.\n   *\n   * Each output property maps a `directiveProperty` to a `bindingProperty`:\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the HTML attribute the event handler is attached to.\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Maps class properties to host element bindings for properties,\n   * attributes, and events, using a set of key-value pairs.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, Angular updates the directive's host element.\n   *\n   * When the key is a property of the host element, the property value is\n   * the propagated to the specified DOM property.\n   *\n   * When the key is a static attribute in the DOM, the attribute value\n   * is propagated to the specified property in the host element.\n   *\n   * For event handling:\n   * - The key is the DOM event that the directive listens to.\n   * To listen to global events, add the target to the event name.\n   * The target can be `window`, `document` or `body`.\n   * - The value is the statement to execute when the event occurs. If the\n   * statement evalueates to `false`, then `preventDefault` is applied on the DOM\n   * event. A handler method can refer to the `$event` local variable.\n   *\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * Configures the [injector](guide/glossary#injector) of this\n   * directive or component with a [token](guide/glossary#di-token)\n   * that maps to a [provider](guide/glossary#provider) of a dependency.\n   */\n  providers?: Provider[];\n\n  /**\n   * The name or names that can be used in the template to assign this directive to a variable.\n   * For multiple names, use a comma-separated string.\n   *\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   */\n  queries?: {[key: string]: any};\n}\n\n/**\n * Type of the Directive metadata.\n *\n * @publicApi\n */\nexport const Directive: DirectiveDecorator = makeDecorator(\n    'Directive', (dir: Directive = {}) => dir, undefined, undefined,\n    (type: Type<any>, meta: Directive) => R3_COMPILE_DIRECTIVE(type, meta));\n\n/**\n * Component decorator interface\n *\n * @publicApi\n */\nexport interface ComponentDecorator {\n  /**\n   * Decorator that marks a class as an Angular component and provides configuration\n   * metadata that determines how the component should be processed,\n   * instantiated, and used at runtime.\n   *\n   * Components are the most basic UI building block of an Angular app.\n   * An Angular app contains a tree of Angular components.\n   *\n   * Angular components are a subset of directives, always associated with a template.\n   * Unlike other directives, only one component can be instantiated per an element in a template.\n   *\n   * A component must belong to an NgModule in order for it to be available\n   * to another component or application. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `@NgModule` metadata.\n   *\n   * Note that, in addition to these options for configuring a directive,\n   * you can control a component's runtime behavior by implementing\n   * life-cycle hooks. For more information, see the\n   * [Lifecycle Hooks](guide/lifecycle-hooks) guide.\n   *\n   * @usageNotes\n   *\n   * ### Setting component inputs\n   *\n   * The following example creates a component with two data-bound properties,\n   * specified by the `inputs` value.\n   *\n   * <code-example path=\"core/ts/metadata/directives.ts\" region=\"component-input\">\n   * </code-example>\n   *\n   *\n   * ### Setting component outputs\n   *\n   * The following example shows two event emitters that emit on an interval. One\n   * emits an output every second, while the other emits every five seconds.\n   *\n   * {@example core/ts/metadata/directives.ts region='component-output-interval'}\n   *\n   * ### Injecting a class with a view provider\n   *\n   * The following simple example injects a class into a component\n   * using the view provider specified in component metadata:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   *\n   * ### Preserving whitespace\n   *\n   * Removing whitespace can greatly reduce AOT-generated code size and speed up view creation.\n   * As of Angular 6, the default for `preserveWhitespaces` is false (whitespace is removed).\n   * To change the default setting for all components in your application, set\n   * the `preserveWhitespaces` option of the AOT compiler.\n   *\n   * By default, the AOT compiler removes whitespace characters as follows:\n   * * Trims all whitespaces at the beginning and the end of a template.\n   * * Removes whitespace-only text nodes. For example,\n   *\n   * ```\n   * <button>Action 1</button>  <button>Action 2</button>\n   * ```\n   *\n   * becomes:\n   *\n   * ```\n   * <button>Action 1</button><button>Action 2</button>\n   * ```\n   *\n   * * Replaces a series of whitespace characters in text nodes with a single space.\n   * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n   * * Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n   * where whitespace characters are significant.\n   *\n   * Note that these transformations can influence DOM nodes layout, although impact\n   * should be minimal.\n   *\n   * You can override the default behavior to preserve whitespace characters\n   * in certain fragments of a template. For example, you can exclude an entire\n   * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n   *\n   * ```html\n   * <div ngPreserveWhitespaces>\n   *     whitespaces are preserved here\n   *     <span>    and here </span>\n   * </div>\n   * ```\n   *\n   * You can force a single space to be preserved in a text node by using `&ngsp;`,\n   * which is replaced with a space character by Angular's template\n   * compiler:\n   *\n   * ```html\n   * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n   * <!-->compiled to be equivalent to:</>\n   *  <a>Spaces</a> <a>between</a> <a>links.</a>\n   * ```\n   *\n   * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n   * the `preserveWhitespaces` option is set to `false`.\n   *\n   * ```html\n   * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n   * <!-->compiled to be equivalent to:</>\n   *  <a>Spaces</a> <a>between</a> <a>links.</a>\n   * ```\n   *\n   * To preserve sequences of whitespace characters, use the\n   * `ngPreserveWhitespaces` attribute.\n   *\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the `@Component` decorator.\n   */\n  new (obj: Component): Component;\n}\n\n/**\n * Supplies configuration metadata for an Angular component.\n */\nexport interface Component extends Directive {\n  /**\n   * The change-detection strategy to use for this component.\n   *\n   * When a component is instantiated, Angular creates a change detector,\n   * which is responsible for propagating the component's bindings.\n   * The strategy is one of:\n   * - `ChangeDetectionStrategy#OnPush` sets the strategy to `CheckOnce` (on demand).\n   * - `ChangeDetectionStrategy#Default` sets the strategy to `CheckAlways`.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   * See [example](#injecting-a-class-with-a-view-provider).\n   *\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module ID of the module that contains the component.\n   * The component must be able to resolve relative URLs for templates and styles.\n   * SystemJS exposes the `__moduleName` variable within each module.\n   * In CommonJS, this can  be set to `module.id`.\n   *\n   */\n  moduleId?: string;\n\n  /**\n   * The URL of a template file for an Angular component. If provided,\n   * do not supply an inline template using `template`.\n   *\n   */\n  templateUrl?: string;\n\n  /**\n   * An inline template for an Angular component. If provided,\n   * do not supply a template file using `templateUrl`.\n   *\n   */\n  template?: string;\n\n  /**\n   * One or more URLs for files containing CSS stylesheets to use\n   * in this component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * One or more inline CSS stylesheets to use\n   * in this component.\n   */\n  styles?: string[];\n\n  /**\n   * One or more animation `trigger()` calls, containing\n   * `state()` and `transition()` definitions.\n   * See the [Animations guide](/guide/animations) and animations API documentation.\n   *\n   */\n  animations?: any[];\n\n  /**\n   * An encapsulation policy for the template and CSS styles. One of:\n   * - `ViewEncapsulation.Native`: Use shadow roots. This works\n   * only if natively available on the platform.\n   * - `ViewEncapsulation.Emulated`: Use shimmed CSS that\n   * emulates the native behavior.\n   * - `ViewEncapsulation.None`: Use global CSS without any\n   * encapsulation.\n   *\n   * If not supplied, the value is taken from `CompilerOptions`. The default compiler option is\n   * `ViewEncapsulation.Emulated`.\n   *\n   * If the policy is set to `ViewEncapsulation.Emulated` and the component has no `styles`\n   * or `styleUrls` specified, the policy is automatically switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default encapsulation start and end delimiters (`{{` and `}}`)\n   */\n  interpolation?: [string, string];\n\n  /**\n   * A set of components that should be compiled along with\n   * this component. For each component listed here,\n   * Angular creates a {@link ComponentFactory} and stores it in the\n   * {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * True to preserve or false to remove potentially superfluous whitespace characters\n   * from the compiled template. Whitespace characters are those matching the `\\s`\n   * character class in JavaScript regular expressions. Default is false, unless\n   * overridden in compiler options.\n   */\n  preserveWhitespaces?: boolean;\n}\n\n/**\n * Component decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Component: ComponentDecorator = makeDecorator(\n    'Component', (c: Component = {}) => ({changeDetection: ChangeDetectionStrategy.Default, ...c}),\n    Directive, undefined, (type: Type<any>, meta: Component) => R3_COMPILE_COMPONENT(type, meta));\n\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * @publicApi\n */\nexport interface PipeDecorator {\n  /**\n   * Declares a reusable pipe function, and supplies configuration metadata.\n   *\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the `Pipe` decorator.\n   */\n  new (obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n */\nexport interface Pipe {\n  /**\n   * The pipe name to use in template bindings.\n   *\n   */\n  name: string;\n\n  /**\n   * When true, the pipe is pure, meaning that the\n   * `transform()` method is invoked only when its input arguments\n   * change. Pipes are pure by default.\n   *\n   * If the pipe has internal state (that is, the result\n   * depends on state other than its arguments), set `pure` to false.\n   * In this case, the pipe is invoked on each change-detection cycle,\n   * even if the arguments have not changed.\n   */\n  pure?: boolean;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Pipe: PipeDecorator = makeDecorator(\n    'Pipe', (p: Pipe) => ({pure: true, ...p}), undefined, undefined,\n    (type: Type<any>, meta: Pipe) => R3_COMPILE_PIPE(type, meta));\n\n\n/**\n * @publicApi\n */\nexport interface InputDecorator {\n  /**\n   * Decorator that marks a class as pipe and supplies configuration metadata.\n   *\n   * A pipe class must implement the `PipeTransform` interface.\n   * For example, if the name is \"myPipe\", use a template binding expression\n   * such as the following:\n   *\n   * ```\n   * {{ exp | myPipe }}\n   * ```\n   *\n   * The result of the expression is passed to the pipe's `transform()` method.\n   *\n   * A pipe must belong to an NgModule in order for it to be available\n   * to a template. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `@NgModule` metadata.\n   *\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of metadata for an `Input` property.\n *\n *\n */\nexport interface Input {\n  /**\n   * Decorator that marks a class field as an input property and supplies configuration metadata.\n   * Declares a data-bound input property, which Angular automatically updates\n   * during change detection.\n   *\n   * @usageNotes\n   *\n   * You can supply an optional name to use in templates when the\n   * component is instantiated, that maps to the\n   * name of the bound property. By default, the original\n   * name of the bound property is used for input binding.\n   *\n   * The following example creates a component with two input properties,\n   * one of which is given a special binding name.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   // This property is bound using its original name.\n   *   @Input() bankName: string;\n   *   // this property value is bound to a different property name\n   *   // when this component is instantiated in a template.\n   *   @Input('account-id') id: string;\n   *\n   *   // this property is not bound, and is not automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bankName=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   *\n   * class App {}\n   * ```\n   *\n   */\n  bindingPropertyName?: string;\n}\n\nconst initializeBaseDef = (target: any): void => {\n  const constructor = target.constructor;\n  const inheritedBaseDef = constructor.ngBaseDef;\n\n  const baseDef = constructor.ngBaseDef = {\n    inputs: {},\n    outputs: {},\n    declaredInputs: {},\n  };\n\n  if (inheritedBaseDef) {\n    fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n    fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n    fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n  }\n};\n\n/**\n * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n * @param key \"inputs\" or \"outputs\"\n */\nconst updateBaseDefFromIOProp = (getProp: (baseDef: {inputs?: any, outputs?: any}) => any) =>\n    (target: any, name: string, ...args: any[]) => {\n      const constructor = target.constructor;\n\n      if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n        initializeBaseDef(target);\n      }\n\n      const baseDef = constructor.ngBaseDef;\n      const defProp = getProp(baseDef);\n      defProp[name] = args[0];\n    };\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Input: InputDecorator = makePropDecorator(\n    'Input', (bindingPropertyName?: string) => ({bindingPropertyName}), undefined,\n    updateBaseDefFromIOProp(baseDef => baseDef.inputs || {}));\n\n/**\n * Type of the Output decorator / constructor function.\n *\n * @publicApi\n */\nexport interface OutputDecorator {\n  /**\n  * Decorator that marks a class field as an output property and supplies configuration metadata.\n  * Declares a data-bound output property, which Angular automatically updates\n  * during change detection.\n  *\n  * @usageNotes\n  *\n  * You can supply an optional name to use in templates when the\n  * component is instantiated, that maps to the\n  * name of the bound property. By default, the original\n  * name of the bound property is used for output binding.\n  *\n  * See `@Input` decorator for an example of providing a binding name.\n  *\n  */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n */\nexport interface Output { bindingPropertyName?: string; }\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Output: OutputDecorator = makePropDecorator(\n    'Output', (bindingPropertyName?: string) => ({bindingPropertyName}), undefined,\n    updateBaseDefFromIOProp(baseDef => baseDef.outputs || {}));\n\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostBindingDecorator {\n  /**\n   * Decorator that marks a DOM property as a host-binding property and supplies configuration\n   * metadata.\n   * Angular automatically checks host property bindings during change detection, and\n   * if a binding changes it updates the host element of the directive.\n   *\n   * @usageNotes\n   *\n   * The following example creates a directive that sets the `valid` and `invalid`\n   * properties on the DOM element that has an `ngModel` directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control: NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   *\n   */\n  (hostPropertyName?: string): any;\n  new (hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n */\nexport interface HostBinding { hostPropertyName?: string; }\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', (hostPropertyName?: string) => ({hostPropertyName}));\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostListenerDecorator {\n  (eventName: string, args?: string[]): any;\n  new (eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n */\nexport interface HostListener {\n  /**\n   * The CSS event to listen for.\n   */\n  eventName?: string;\n  /**\n   * A set of arguments to pass to the handler method when the event occurs.\n   */\n  args?: string[];\n}\n\n/**\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n * @publicApi\n */\nexport const HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', (eventName?: string, args?: string[]) => ({eventName, args}));\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {Provider} from '../di/provider';\nimport {R3_COMPILE_NGMODULE} from '../ivy_switch/compiler/index';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\n/**\n * Represents the expansion of an `NgModule` into its scopes.\n *\n * A scope is a set of directives and pipes that are visible in a particular context. Each\n * `NgModule` has two scopes. The `compilation` scope is the set of directives and pipes that will\n * be recognized in the templates of components declared by the module. The `exported` scope is the\n * set of directives and pipes exported by a module (that is, module B's exported scope gets added\n * to module A's compilation scope when module A imports B).\n */\nexport interface NgModuleTransitiveScopes {\n  compilation: {directives: Set<any>; pipes: Set<any>;};\n  exported: {directives: Set<any>; pipes: Set<any>;};\n}\n\nexport type NgModuleDefWithMeta<T, Declarations, Imports, Exports> = NgModuleDef<T>;\n\n/**\n * Runtime link information for NgModules.\n *\n * This is the internal data structure used by the runtime to assemble components, directives,\n * pipes, and injectors.\n *\n * NOTE: Always use `defineNgModule` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n */\nexport interface NgModuleDef<T> {\n  /** Token representing the module. Used by DI. */\n  type: T;\n\n  /** List of components to bootstrap. */\n  bootstrap: Type<any>[];\n\n  /** List of components, directives, and pipes declared by this module. */\n  declarations: Type<any>[];\n\n  /** List of modules or `ModuleWithProviders` imported by this module. */\n  imports: Type<any>[];\n\n  /**\n   * List of modules, `ModuleWithProviders`, components, directives, or pipes exported by this\n   * module.\n   */\n  exports: Type<any>[];\n\n  /**\n   * Cached value of computed `transitiveCompileScopes` for this module.\n   *\n   * This should never be read directly, but accessed via `transitiveScopesFor`.\n   */\n  transitiveCompileScopes: NgModuleTransitiveScopes|null;\n}\n\n/**\n * A wrapper around an NgModule that associates it with the providers.\n *\n * @param T the module type. In Ivy applications, this must be explicitly\n * provided.\n *\n * @publicApi\n */\nexport interface ModuleWithProviders<\n    T = any /** TODO(alxhub): remove default when callers pass explicit type param */> {\n  ngModule: Type<T>;\n  providers?: Provider[];\n}\n\n/**\n * A schema definition associated with an NgModule.\n *\n * @see `@NgModule`, `CUSTOM_ELEMENTS_SCHEMA`, `NO_ERRORS_SCHEMA`\n *\n * @param name The name of a defined schema.\n *\n * @publicApi\n */\nexport interface SchemaMetadata { name: string; }\n\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n * @publicApi\n */\nexport const CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n\n/**\n * Defines a schema that allows any property on any element.\n *\n * @publicApi\n */\nexport const NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n */\nexport interface NgModuleDecorator {\n  /**\n   * Marks a class as an NgModule and supplies configuration metadata.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new (obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n */\nexport interface NgModule {\n  /**\n   * The set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * @see [Dependency Injection guide](guide/dependency-injection)\n   * @see [NgModule guide](guide/providers)\n   *\n   * @usageNotes\n   *\n   * Dependencies whose providers are listed here become available for injection\n   * into any component, directive, pipe or service that is a child of this injector.\n   * The NgModule used for bootstrapping uses the root injector, and can provide dependencies\n   * to any part of the app.\n   *\n   * A lazy-loaded module has its own injector, typically a child of the app root injector.\n   * Lazy-loaded services are scoped to the lazy-loaded module's injector.\n   * If a lazy-loaded module also provides the `UserService`, any component created\n   * within that module's context (such as by router navigation) gets the local instance\n   * of the service, not the instance in the root injector.\n   * Components in external modules continue to receive the instance provided by their injectors.\n   *\n   * ### Example\n   *\n   * The following example defines a class that is injected in\n   * the HelloWorld NgModule:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * The set of components, directives, and pipes ([declarables](guide/glossary#declarable))\n   * that belong to this module.\n   *\n   * @usageNotes\n   *\n   * The set of selectors that are available to a template include those declared here, and\n   * those that are exported from imported NgModules.\n   *\n   * Declarables must belong to exactly one module.\n   * The compiler emits an error if you try to declare the same class in more than one module.\n   * Be careful not to declare a class that is imported from another module.\n   *\n   * ### Example\n   *\n   * The following example allows the CommonModule to use the `NgFor`\n   * directive.\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of NgModules whose exported [declarables](guide/glossary#declarable)\n   * are available to templates in this module.\n   *\n   * @usageNotes\n   *\n   * A template can use exported declarables from any\n   * imported module, including those from modules that are imported indirectly\n   * and re-exported.\n   * For example, `ModuleA` imports `ModuleB`, and also exports\n   * it, which makes the declarables from `ModuleB` available\n   * wherever `ModuleA` is imported.\n   *\n   * ### Example\n   *\n   * The following example allows MainModule to use anthing exported by\n   * `CommonModule`:\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   *\n   */\n  imports?: Array<Type<any>|ModuleWithProviders<{}>|any[]>;\n\n  /**\n   * The set of components, directives, and pipes declared in this\n   * NgModule that can be used in the template of any component that is part of an\n   * NgModule that imports this NgModule. Exported declarations are the module's public API.\n   *\n   * A declarable belongs to one and only one NgModule.\n   * A module can list another module among its exports, in which case all of that module's\n   * public declaration are exported.\n   *\n   * @usageNotes\n   *\n   * Declarations are private by default.\n   * If this ModuleA does not export UserComponent, then only the components within this\n   * ModuleA can use UserComponent.\n   *\n   * ModuleA can import ModuleB and also export it, making exports from ModuleB\n   * available to an NgModule that imports ModuleA.\n   *\n   * ### Example\n   *\n   * The following example exports the `NgFor` directive from CommonModule.\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components to compile when this NgModule is defined,\n   * so that they can be dynamically loaded into the view.\n   *\n   * For each component listed here, Angular creates a `ComponentFactory`\n   * and stores it in the `ComponentFactoryResolver`.\n   *\n   * Angular automatically adds components in the module's bootstrap\n   * and route definitions into the `entryComponents` list. Use this\n   * option to add components that are bootstrapped\n   * using one of the imperative techniques, such as `ViewContainerRef.createComponent()`.\n   *\n   * @see [Entry Components](guide/entry-components)\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components that are bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * are automatically added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of schemas that declare elements to be allowed in the NgModule.\n   * Elements and properties that are neither Angular components nor directives\n   * must be declared in a schema.\n   *\n   * Allowed value are `NO_ERRORS_SCHEMA` and `CUSTOM_ELEMENTS_SCHEMA`.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA`\n   * you must ensure that allowed elements and properties securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * A name or path that uniquely identifies this NgModule in `getModuleFactory`.\n   * If left `undefined`, the NgModule is not registered with\n   * `getModuleFactory`.\n   */\n  id?: string;\n\n  /**\n   * If true, this module will be skipped by the AOT compiler and so will always be compiled\n   * using JIT.\n   *\n   * This exists to support future Ivy work and has no effect currently.\n   */\n  jit?: true;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const NgModule: NgModuleDecorator = makeDecorator(\n    'NgModule', (ngModule: NgModule) => ngModule, undefined, undefined,\n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    (type: Type<any>, meta: NgModule) => R3_COMPILE_NGMODULE(type, meta));\n\n/**\n * @description\n * Hook for manual bootstrapping of the application instead of using bootstrap array in @NgModule\n * annotation.\n *\n * Reference to the current application is provided as a parameter.\n *\n * See [\"Bootstrapping\"](guide/bootstrapping) and [\"Entry components\"](guide/entry-components).\n *\n * @usageNotes\n * ```typescript\n * class AppModule implements DoBootstrap {\n *   ngDoBootstrap(appRef: ApplicationRef) {\n *     appRef.bootstrap(AppComponent); // Or some other component\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport interface DoBootstrap { ngDoBootstrap(appRef: ApplicationRef): void; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description Represents the version of Angular\n *\n * @publicApi\n */\nexport class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    this.major = full.split('.')[0];\n    this.minor = full.split('.')[1];\n    this.patch = full.split('.').slice(2).join('.');\n  }\n}\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('7.0.4');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {R3_COMPILE_INJECTABLE} from '../ivy_switch/compiler/index';\nimport {Type} from '../type';\nimport {makeDecorator} from '../util/decorators';\n\nimport {InjectableDef, InjectableType} from './defs';\nimport {ClassSansProvider, ConstructorSansProvider, ExistingSansProvider, FactorySansProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from './provider';\n\n/**\n * Injectable providers used in `@Injectable` decorator.\n *\n * @publicApi\n */\nexport type InjectableProvider = ValueSansProvider | ExistingSansProvider |\n    StaticClassSansProvider | ConstructorSansProvider | FactorySansProvider | ClassSansProvider;\n\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * @publicApi\n */\nexport interface InjectableDecorator {\n  /**\n   * A marker metadata that marks a class as available to `Injector` for creation.\n   *\n   * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Injectable'}\n   *\n   * `Injector` will throw an error when trying to instantiate a class that\n   * does not have `@Injectable` marker, as shown in the example below.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectableThrows'}\n   *\n   */\n  (): any;\n  (options?: {providedIn: Type<any>| 'root' | null}&InjectableProvider): any;\n  new (): Injectable;\n  new (options?: {providedIn: Type<any>| 'root' | null}&InjectableProvider): Injectable;\n}\n\n/**\n * Type of the Injectable metadata.\n *\n * @publicApi\n */\nexport interface Injectable { providedIn?: Type<any>|'root'|null; }\n\n/**\n * Injectable decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Injectable: InjectableDecorator = makeDecorator(\n    'Injectable', undefined, undefined, undefined,\n    (type: Type<any>, meta: Injectable) => R3_COMPILE_INJECTABLE(type, meta));\n\n/**\n * Type representing injectable service.\n *\n * @publicApi\n */\nexport interface InjectableType<T> extends Type<T> { ngInjectableDef: InjectableDef<T>; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugContext} from './view';\n\nexport const ERROR_TYPE = 'ngType';\nexport const ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const ERROR_LOGGER = 'ngErrorLogger';\n\n\nexport function getType(error: Error): Function {\n  return (error as any)[ERROR_TYPE];\n}\n\nexport function getDebugContext(error: Error): DebugContext {\n  return (error as any)[ERROR_DEBUG_CONTEXT];\n}\n\nexport function getOriginalError(error: Error): Error {\n  return (error as any)[ERROR_ORIGINAL_ERROR];\n}\n\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return (error as any)[ERROR_LOGGER] || defaultErrorLogger;\n}\n\n\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  (<any>console.error)(...values);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n\n\n\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * @publicApi\n */\nexport class ErrorHandler {\n  /**\n   * @internal\n   */\n  _console: Console = console;\n\n  handleError(error: any): void {\n    const originalError = this._findOriginalError(error);\n    const context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n\n  /** @internal */\n  _findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n\n  /** @internal */\n  _findOriginalError(error: Error): any {\n    let e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nexport function wrappedError(message: string, originalError: any): Error {\n  const msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const error = Error(msg);\n  (error as any)[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {wrappedError} from '../error_handler';\nimport {ERROR_ORIGINAL_ERROR, getOriginalError} from '../errors';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const res: any[] = [];\n  for (let i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const reversed = findFirstClosedCycle(keys.slice().reverse());\n    const tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n\nexport interface InjectionError extends Error {\n  keys: ReflectiveKey[];\n  injectors: ReflectiveInjector[];\n  constructResolvingMessage: (keys: ReflectiveKey[]) => string;\n  addKey(injector: ReflectiveInjector, key: ReflectiveKey): void;\n}\n\nfunction injectionError(\n    injector: ReflectiveInjector, key: ReflectiveKey,\n    constructResolvingMessage: (keys: ReflectiveKey[]) => string,\n    originalError?: Error): InjectionError {\n  const keys = [key];\n  const errMsg = constructResolvingMessage(keys);\n  const error =\n      (originalError ? wrappedError(errMsg, originalError) : Error(errMsg)) as InjectionError;\n  error.addKey = addKey;\n  error.keys = keys;\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  (error as any)[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n\nfunction addKey(this: InjectionError, injector: ReflectiveInjector, key: ReflectiveKey): void {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  // Note: This updated message won't be reflected in the `.stack` property\n  this.message = this.constructResolvingMessage(this.keys);\n}\n\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nexport function noProviderError(injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const first = stringify(keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(keys)}`;\n  });\n}\n\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nexport function cyclicDependencyError(\n    injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n  });\n}\n\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nexport function instantiationError(\n    injector: ReflectiveInjector, originalException: any, originalStack: any,\n    key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const first = stringify(keys[0].token);\n    return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n  }, originalException);\n}\n\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nexport function invalidProviderError(provider: any) {\n  return Error(\n      `Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nexport function noAnnotationError(typeOrFunc: Type<any>| Function, params: any[][]): Error {\n  const signature: string[] = [];\n  for (let i = 0, ii = params.length; i < ii; i++) {\n    const parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error(\n      'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n      signature.join(', ') + '). ' +\n      'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n      stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nexport function outOfBoundsError(index: number) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nexport function mixingMultiProvidersWithRegularProvidersError(\n    provider1: any, provider2: any): Error {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringify} from '../util';\nimport {resolveForwardRef} from './forward_ref';\n\n\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n *\n * @deprecated No replacement\n * @publicApi\n */\nexport class ReflectiveKey {\n  public readonly displayName: string;\n  /**\n   * Private\n   */\n  constructor(public token: Object, public id: number) {\n    if (!token) {\n      throw new Error('Token must be defined!');\n    }\n    this.displayName = stringify(this.token);\n  }\n\n  /**\n   * Retrieves a `Key` for a token.\n   */\n  static get(token: Object): ReflectiveKey {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n\n  /**\n   * @returns the number of keys registered in the system.\n   */\n  static get numberOfKeys(): number { return _globalKeyRegistry.numberOfKeys; }\n}\n\nexport class KeyRegistry {\n  private _allKeys = new Map<Object, ReflectiveKey>();\n\n  get(token: Object): ReflectiveKey {\n    if (token instanceof ReflectiveKey) return token;\n\n    if (this._allKeys.has(token)) {\n      return this._allKeys.get(token) !;\n    }\n\n    const newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n\n  get numberOfKeys(): number { return this._allKeys.size; }\n}\n\nconst _globalKeyRegistry = new KeyRegistry();\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities};\nexport {GetterFn, MethodFn, SetterFn};\n\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector {\n  constructor(public reflectionCapabilities: PlatformReflectionCapabilities) {}\n\n  updateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n\n  factory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n\n  parameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n\n  propMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n\n  getter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n\n  setter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n\n  method(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n\n  importUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n\n  resourceUri(type: any): string { return this.reflectionCapabilities.resourceUri(type); }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n\n  resolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReflectionCapabilities} from './reflection_capabilities';\nimport {Reflector} from './reflector';\n\nexport {Reflector} from './reflector';\n\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexport const reflector = new Reflector(new ReflectionCapabilities());\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {reflector} from '../reflection/reflection';\nimport {Type} from '../type';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ClassProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ValueProvider} from './provider';\nimport {invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\n\n\ninterface NormalizedProvider extends TypeProvider, ValueProvider, ClassProvider, ExistingProvider,\n    FactoryProvider {}\n\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport class ReflectiveDependency {\n  constructor(\n      public key: ReflectiveKey, public optional: boolean, public visibility: Self|SkipSelf|null) {}\n\n  static fromKey(key: ReflectiveKey): ReflectiveDependency {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\n\nconst _EMPTY_LIST: any[] = [];\n\n/**\n * An internal resolved representation of a `Provider` used by the `Injector`.\n *\n * @usageNotes\n * This is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * @publicApi\n */\nexport interface ResolvedReflectiveProvider {\n  /**\n   * A key, usually a `Type<any>`.\n   */\n  key: ReflectiveKey;\n\n  /**\n   * Factory function which can return an instance of an object represented by a key.\n   */\n  resolvedFactories: ResolvedReflectiveFactory[];\n\n  /**\n   * Indicates if the provider is a multi-provider or a regular provider.\n   */\n  multiProvider: boolean;\n}\n\nexport class ResolvedReflectiveProvider_ implements ResolvedReflectiveProvider {\n  readonly resolvedFactory: ResolvedReflectiveFactory;\n\n  constructor(\n      public key: ReflectiveKey, public resolvedFactories: ResolvedReflectiveFactory[],\n      public multiProvider: boolean) {\n    this.resolvedFactory = this.resolvedFactories[0];\n  }\n}\n\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @publicApi\n */\nexport class ResolvedReflectiveFactory {\n  constructor(\n      /**\n       * Factory function which can return an instance of an object represented by a key.\n       */\n      public factory: Function,\n\n      /**\n       * Arguments (dependencies) to the `factory` function.\n       */\n      public dependencies: ReflectiveDependency[]) {}\n}\n\n\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider: NormalizedProvider): ResolvedReflectiveFactory {\n  let factoryFn: Function;\n  let resolvedDeps: ReflectiveDependency[];\n  if (provider.useClass) {\n    const useClass = resolveForwardRef(provider.useClass);\n    factoryFn = reflector.factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = (aliasInstance: any) => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider: NormalizedProvider): ResolvedReflectiveProvider {\n  return new ResolvedReflectiveProvider_(\n      ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)],\n      provider.multi || false);\n}\n\n/**\n * Resolve a list of Providers.\n */\nexport function resolveReflectiveProviders(providers: Provider[]): ResolvedReflectiveProvider[] {\n  const normalized = _normalizeProviders(providers, []);\n  const resolved = normalized.map(resolveReflectiveProvider);\n  const resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nexport function mergeResolvedReflectiveProviders(\n    providers: ResolvedReflectiveProvider[],\n    normalizedProvidersMap: Map<number, ResolvedReflectiveProvider>):\n    Map<number, ResolvedReflectiveProvider> {\n  for (let i = 0; i < providers.length; i++) {\n    const provider = providers[i];\n    const existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let resolvedProvider: ResolvedReflectiveProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(\n            provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n\nfunction _normalizeProviders(providers: Provider[], res: Provider[]): Provider[] {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({provide: b, useClass: b});\n\n    } else if (b && typeof b == 'object' && (b as any).provide !== undefined) {\n      res.push(b as NormalizedProvider);\n\n    } else if (b instanceof Array) {\n      _normalizeProviders(b, res);\n\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n\n  return res;\n}\n\nexport function constructDependencies(\n    typeOrFunc: any, dependencies?: any[]): ReflectiveDependency[] {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const params: any[][] = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n\nfunction _dependenciesFor(typeOrFunc: any): ReflectiveDependency[] {\n  const params = reflector.parameters(typeOrFunc);\n\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n\nfunction _extractToken(\n    typeOrFunc: any, metadata: any[] | any, params: any[][]): ReflectiveDependency {\n  let token: any = null;\n  let optional = false;\n\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata.token, optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n\n  let visibility: Self|SkipSelf|null = null;\n\n  for (let i = 0; i < metadata.length; ++i) {\n    const paramMetadata = metadata[i];\n\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata.token;\n\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n\n  token = resolveForwardRef(token);\n\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n\nfunction _createDependency(\n    token: any, optional: boolean, visibility: Self | SkipSelf | null): ReflectiveDependency {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from './injector';\nimport {Self, SkipSelf} from './metadata';\nimport {Provider} from './provider';\nimport {cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\nimport {ReflectiveDependency, ResolvedReflectiveFactory, ResolvedReflectiveProvider, resolveReflectiveProviders} from './reflective_provider';\n\n// Threshold for the dynamic version\nconst UNDEFINED = new Object();\n\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @publicApi\n */\nexport abstract class ReflectiveInjector implements Injector {\n  /**\n   * Turns an array of provider definitions into an array of resolved providers.\n   *\n   * A resolution is a process of flattening multiple nested arrays and converting individual\n   * providers into an array of `ResolvedReflectiveProvider`s.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n   *\n   * expect(providers.length).toEqual(2);\n   *\n   * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n   * expect(providers[0].key.displayName).toBe(\"Car\");\n   * expect(providers[0].dependencies.length).toEqual(1);\n   * expect(providers[0].factory).toBeDefined();\n   *\n   * expect(providers[1].key.displayName).toBe(\"Engine\");\n   * });\n   * ```\n   *\n   */\n  static resolve(providers: Provider[]): ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n\n  /**\n   * Resolves an array of providers and creates an injector from those providers.\n   *\n   * The passed-in providers can be an array of `Type`, `Provider`,\n   * or a recursive array of more providers.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n   * expect(injector.get(Car) instanceof Car).toBe(true);\n   * ```\n   */\n  static resolveAndCreate(providers: Provider[], parent?: Injector): ReflectiveInjector {\n    const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n\n  /**\n   * Creates an injector from previously resolved providers.\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var providers = ReflectiveInjector.resolve([Car, Engine]);\n   * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n   * expect(injector.get(Car) instanceof Car).toBe(true);\n   * ```\n   */\n  static fromResolvedProviders(providers: ResolvedReflectiveProvider[], parent?: Injector):\n      ReflectiveInjector {\n    return new ReflectiveInjector_(providers, parent);\n  }\n\n\n  /**\n   * Parent of this injector.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   */\n  abstract get parent(): Injector|null;\n\n  /**\n   * Resolves an array of providers and creates a child injector from those providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * The passed-in providers can be an array of `Type`, `Provider`,\n   * or a recursive array of more providers.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n   * var child = parent.resolveAndCreateChild([ChildProvider]);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   */\n  abstract resolveAndCreateChild(providers: Provider[]): ReflectiveInjector;\n\n  /**\n   * Creates a child injector from previously resolved providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n   * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n   *\n   * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n   * var child = parent.createChildFromResolved(childProviders);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   */\n  abstract createChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector;\n\n  /**\n   * Resolves a provider and instantiates an object in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   *\n   * var car = injector.resolveAndInstantiate(Car);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n   * ```\n   */\n  abstract resolveAndInstantiate(provider: Provider): any;\n\n  /**\n   * Instantiates an object using a resolved provider in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   * var carProvider = ReflectiveInjector.resolve([Car])[0];\n   * var car = injector.instantiateResolved(carProvider);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n   * ```\n   */\n  abstract instantiateResolved(provider: ResolvedReflectiveProvider): any;\n\n  abstract get(token: any, notFoundValue?: any): any;\n}\n\nexport class ReflectiveInjector_ implements ReflectiveInjector {\n  private static INJECTOR_KEY = ReflectiveKey.get(Injector);\n  /** @internal */\n  _constructionCounter: number = 0;\n  /** @internal */\n  public _providers: ResolvedReflectiveProvider[];\n  public readonly parent: Injector|null;\n\n  keyIds: number[];\n  objs: any[];\n  /**\n   * Private\n   */\n  constructor(_providers: ResolvedReflectiveProvider[], _parent?: Injector) {\n    this._providers = _providers;\n    this.parent = _parent || null;\n\n    const len = _providers.length;\n\n    this.keyIds = new Array(len);\n    this.objs = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n\n  get(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n\n  resolveAndCreateChild(providers: Provider[]): ReflectiveInjector {\n    const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n\n  createChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    const inj = new ReflectiveInjector_(providers);\n    (inj as{parent: Injector | null}).parent = this;\n    return inj;\n  }\n\n  resolveAndInstantiate(provider: Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n\n  instantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n\n  getProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n\n  /** @internal */\n  _new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n\n  private _getMaxNumberOfObjects(): number { return this.objs.length; }\n\n  private _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      const res = new Array(provider.resolvedFactories.length);\n      for (let i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n\n  private _instantiate(\n      provider: ResolvedReflectiveProvider,\n      ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    const factory = ResolvedReflectiveFactory.factory;\n\n    let deps: any[];\n    try {\n      deps =\n          ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch (e) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    let obj: any;\n    try {\n      obj = factory(...deps);\n    } catch (e) {\n      throw instantiationError(this, e, e.stack, provider.key);\n    }\n\n    return obj;\n  }\n\n  private _getByReflectiveDependency(dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n\n  private _getByKey(key: ReflectiveKey, visibility: Self|SkipSelf|null, notFoundValue: any): any {\n    if (key === ReflectiveInjector_.INJECTOR_KEY) {\n      return this;\n    }\n\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n\n  private _getObjByKeyId(keyId: number): any {\n    for (let i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n\n  /** @internal */\n  _throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n\n  /** @internal */\n  _getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    const obj = this._getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n\n  /** @internal */\n  _getByKeyDefault(key: ReflectiveKey, notFoundValue: any, visibility: Self|SkipSelf|null): any {\n    let inj: Injector|null;\n\n    if (visibility instanceof SkipSelf) {\n      inj = this.parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      const inj_ = <ReflectiveInjector_>inj;\n      const obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_.parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n\n  get displayName(): string {\n    const providers =\n        _mapProviders(this, (b: ResolvedReflectiveProvider) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n\n  toString(): string { return this.displayName; }\n}\n\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  const res: any[] = new Array(injector._providers.length);\n  for (let i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n\n/**\n * Determine if the argument is an Observable\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO: use isObservable once we update pass rxjs 6.1\n  // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n  return !!obj && typeof obj.subscribe === 'function';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n\n\n/**\n * A function that will be executed when an application is initialized.\n *\n * @publicApi\n */\nexport const APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @publicApi\n */\n@Injectable()\nexport class ApplicationInitStatus {\n  // TODO(issue/24571): remove '!'.\n  private resolve !: Function;\n  // TODO(issue/24571): remove '!'.\n  private reject !: Function;\n  private initialized = false;\n  public readonly donePromise: Promise<any>;\n  public readonly done = false;\n\n  constructor(@Inject(APP_INITIALIZER) @Optional() private appInits: (() => any)[]) {\n    this.donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n\n  /** @internal */\n  runInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const asyncInitPromises: Promise<any>[] = [];\n\n    const complete = () => {\n      (this as{done: boolean}).done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let i = 0; i < this.appInits.length; i++) {\n        const initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n\n\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @publicApi\n */\nexport const APP_ID = new InjectionToken<string>('AppId');\n\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @publicApi\n */\nexport const APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: <any[]>[],\n};\n\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n\n/**\n * A function that will be executed when a platform is initialized.\n * @publicApi\n */\nexport const PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n\n/**\n * A token that indicates an opaque platform id.\n * @publicApi\n */\nexport const PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @publicApi\n */\nexport const APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n\n/**\n * A token which indicates the root directory of the application\n * @publicApi\n */\nexport const PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from './di';\n\n@Injectable()\nexport class Console {\n  log(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n  // Note: for reporting errors use `DOM.logError()` as it is platform specific\n  warn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di/injectable';\nimport {InjectionToken} from '../di/injection_token';\nimport {StaticProvider} from '../di/provider';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n\n\n\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @publicApi\n */\nexport class ModuleWithComponentFactories<T> {\n  constructor(\n      public ngModuleFactory: NgModuleFactory<T>,\n      public componentFactories: ComponentFactory<any>[]) {}\n}\n\n\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n * @publicApi\n */\n@Injectable()\nexport class Compiler {\n  /**\n   * Compiles the given NgModule and all of its components. All templates of the components listed\n   * in `entryComponents` have to be inlined.\n   */\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> { throw _throwError(); }\n\n  /**\n   * Compiles the given NgModule and all of its components\n   */\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> { throw _throwError(); }\n\n  /**\n   * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    throw _throwError();\n  }\n\n  /**\n   * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    throw _throwError();\n  }\n\n  /**\n   * Clears all caches.\n   */\n  clearCache(): void {}\n\n  /**\n   * Clears the cache for the given component/ngModule.\n   */\n  clearCacheFor(type: Type<any>) {}\n\n  /**\n   * Returns the id for a given NgModule, if one is defined and known to the compiler.\n   */\n  getModuleId(moduleType: Type<any>): string|undefined { return undefined; }\n}\n\n/**\n * Options for creating a compiler\n *\n * @publicApi\n */\nexport type CompilerOptions = {\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: StaticProvider[],\n  missingTranslation?: MissingTranslationStrategy,\n  preserveWhitespaces?: boolean,\n};\n\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @publicApi\n */\nexport const COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n\n/**\n * A factory for creating a Compiler\n *\n * @publicApi\n */\nexport abstract class CompilerFactory {\n  abstract createCompiler(options?: CompilerOptions[]): Compiler;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @publicApi\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet trace: Trace;\nlet events: Events;\n\nexport function detectWTF(): boolean {\n  const wtf: WTF = (global as any /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WtfScopeFn, createScope, detectWTF, endTimeRange, leave, startTimeRange} from './wtf_impl';\n\nexport {WtfScopeFn} from './wtf_impl';\n\n\n/**\n * True if WTF is enabled.\n */\nexport const wtfEnabled = detectWTF();\n\nfunction noopScope(arg0?: any, arg1?: any): any {\n  return null;\n}\n\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @publicApi\n */\nexport const wtfCreateScope: (signature: string, flags?: any) => WtfScopeFn =\n    wtfEnabled ? createScope : (signature: string, flags?: any) => noopScope;\n\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @publicApi\n */\nexport const wtfLeave: <T>(scope: any, returnValue?: T) => T =\n    wtfEnabled ? leave : (s: any, r?: any) => r;\n\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @publicApi\n */\nexport const wtfStartTimeRange: (rangeType: string, action: string) => any =\n    wtfEnabled ? startTimeRange : (rangeType: string, action: string) => null;\n\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @publicApi\n */\nexport const wtfEndTimeRange: (range: any) => void = wtfEnabled ? endTimeRange : (r: any) => null;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter} from '../event_emitter';\n\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport class NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n\n  /**\n   * Whether there are no outstanding microtasks or macrotasks.\n   */\n  readonly isStable: boolean = true;\n\n  /**\n   * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n   */\n  readonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when there is no more microtasks enqueued in the current VM Turn.\n   * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n   * For this reason this event can fire multiple times per VM Turn.\n   */\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n   * implies we are about to relinquish VM turn.\n   * This event gets called just once.\n   */\n  readonly onStable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies that an error has been delivered.\n   */\n  readonly onError: EventEmitter<any> = new EventEmitter(false);\n\n  constructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error(`In this configuration Angular requires Zone.js`);\n    }\n\n    Zone.assertZonePatched();\n    const self = this as any as NgZonePrivate;\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if ((Zone as any)['wtfZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['wtfZoneSpec']);\n    }\n\n    if ((Zone as any)['TaskTrackingZoneSpec']) {\n      self._inner = self._inner.fork(new ((Zone as any)['TaskTrackingZoneSpec'] as any));\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n\n    forkInnerZoneWithAngularBehavior(self);\n  }\n\n  static isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n\n  static assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n\n  static assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n   * the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  run<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.run(fn, applyThis, applyArgs) as T;\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n   * returned by the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  runTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\n    const zone = (this as any as NgZonePrivate)._inner;\n    const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n    try {\n      return zone.runTask(task, applyThis, applyArgs) as T;\n    } finally {\n      zone.cancelTask(task);\n    }\n  }\n\n  /**\n   * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n   * rethrown.\n   */\n  runGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.runGuarded(fn, applyThis, applyArgs) as T;\n  }\n\n  /**\n   * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n   * the function.\n   *\n   * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n   * work that\n   * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * outside of the Angular zone.\n   *\n   * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n   */\n  runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return (this as any as NgZonePrivate)._outer.run(fn) as T;\n  }\n}\n\nfunction noop() {}\nconst EMPTY_PAYLOAD = {};\n\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n\n  hasPendingMicrotasks: boolean;\n  hasPendingMacrotasks: boolean;\n  isStable: boolean;\n}\n\nfunction checkStable(zone: NgZonePrivate) {\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: <any>{'isAngularZone': true},\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any,\n                   applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n               applyThis: any, applyArgs: any[], source: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n    onHasTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n          delegate.hasTask(target, hasTaskState);\n          if (current === target) {\n            // We are only interested in hasTask events which originate from our zone\n            // (A child hasTask event is not interesting to us)\n            if (hasTaskState.change == 'microTask') {\n              zone.hasPendingMicrotasks = hasTaskState.microTask;\n              checkStable(zone);\n            } else if (hasTaskState.change == 'macroTask') {\n              zone.hasPendingMacrotasks = hasTaskState.macroTask;\n            }\n          }\n        },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nexport class NoopNgZone implements NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n  readonly isStable: boolean = true;\n  readonly onUnstable: EventEmitter<any> = new EventEmitter();\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter();\n  readonly onStable: EventEmitter<any> = new EventEmitter();\n  readonly onError: EventEmitter<any> = new EventEmitter();\n\n  run(fn: () => any): any { return fn(); }\n\n  runGuarded(fn: () => any): any { return fn(); }\n\n  runOutsideAngular(fn: () => any): any { return fn(); }\n\n  runTask<T>(fn: () => any): any { return fn(); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @publicApi\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function, timeout?: number, updateCallback?: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n\n// Angular internal, not intended for public API.\nexport interface PendingMacrotask {\n  source: string;\n  creationLocation: Error;\n  runCount?: number;\n  data: TaskData;\n}\n\nexport interface TaskData {\n  target?: XMLHttpRequest;\n  delay?: number;\n  isPeriodic?: boolean;\n}\n\n// Angular internal, not intended for public API.\nexport type DoneCallback = (didWork: boolean, tasks?: PendingMacrotask[]) => void;\nexport type UpdateCallback = (tasks: PendingMacrotask[]) => boolean;\n\ninterface WaitCallback {\n  // Needs to be 'any' - setTimeout returns a number according to ES6, but\n  // on NodeJS it returns a Timer.\n  timeoutId: any;\n  doneCb: DoneCallback;\n  updateCb?: UpdateCallback;\n}\n\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @publicApi\n */\n@Injectable()\nexport class Testability implements PublicTestability {\n  private _pendingCount: number = 0;\n  private _isZoneStable: boolean = true;\n  /**\n   * Whether any work was done since the last 'whenStable' callback. This is\n   * useful to detect if this could have potentially destabilized another\n   * component while it is stabilizing.\n   * @internal\n   */\n  private _didWork: boolean = false;\n  private _callbacks: WaitCallback[] = [];\n\n  private taskTrackingZone: any;\n\n  constructor(private _ngZone: NgZone) {\n    this._watchAngularEvents();\n    _ngZone.run(() => { this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n  }\n\n  private _watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Increases the number of pending request\n   * @deprecated pending requests are now tracked with zones.\n   */\n  increasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n\n  /**\n   * Decreases the number of pending request\n   * @deprecated pending requests are now tracked with zones\n   */\n  decreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n\n  /**\n   * Whether an associated application is stable\n   */\n  isStable(): boolean {\n    return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n\n  private _runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          let cb = this._callbacks.pop() !;\n          clearTimeout(cb.timeoutId);\n          cb.doneCb(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Still not stable, send updates.\n      let pending = this.getPendingTasks();\n      this._callbacks = this._callbacks.filter((cb) => {\n        if (cb.updateCb && cb.updateCb(pending)) {\n          clearTimeout(cb.timeoutId);\n          return false;\n        }\n\n        return true;\n      });\n\n      this._didWork = true;\n    }\n  }\n\n  private getPendingTasks(): PendingMacrotask[] {\n    if (!this.taskTrackingZone) {\n      return [];\n    }\n\n    // Copy the tasks data so that we don't leak tasks.\n    return this.taskTrackingZone.macroTasks.map((t: Task) => {\n      return {\n        source: t.source,\n        // From TaskTrackingZone:\n        // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n        creationLocation: (t as any).creationLocation as Error,\n        data: t.data\n      };\n    });\n  }\n\n  private addCallback(cb: DoneCallback, timeout?: number, updateCb?: UpdateCallback) {\n    let timeoutId: any = -1;\n    if (timeout && timeout > 0) {\n      timeoutId = setTimeout(() => {\n        this._callbacks = this._callbacks.filter((cb) => cb.timeoutId !== timeoutId);\n        cb(this._didWork, this.getPendingTasks());\n      }, timeout);\n    }\n    this._callbacks.push(<WaitCallback>{doneCb: cb, timeoutId: timeoutId, updateCb: updateCb});\n  }\n\n  /**\n   * Wait for the application to be stable with a timeout. If the timeout is reached before that\n   * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n   *\n   * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n   *    whichever comes first.\n   * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n   *    specified, whenStable() will wait forever.\n   * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n   *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n   *    and no further updates will be issued.\n   */\n  whenStable(doneCb: Function, timeout?: number, updateCb?: Function): void {\n    if (updateCb && !this.taskTrackingZone) {\n      throw new Error(\n          'Task tracking zone is required when passing an update callback to ' +\n          'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n    }\n    // These arguments are 'Function' above to keep the public API simple.\n    this.addCallback(doneCb as DoneCallback, timeout, updateCb as UpdateCallback);\n    this._runCallbacksIfReady();\n  }\n\n  /**\n   * Get the number of pending requests\n   * @deprecated pending requests are now tracked with zones\n   */\n  getPendingRequestCount(): number { return this._pendingCount; }\n\n  /**\n   * Find providers by name\n   * @param using The root element to search from\n   * @param provider The name of binding variable\n   * @param exactMatch Whether using exactMatch\n   */\n  findProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n}\n\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @publicApi\n */\n@Injectable()\nexport class TestabilityRegistry {\n  /** @internal */\n  _applications = new Map<any, Testability>();\n\n  constructor() { _testabilityGetter.addToWindow(this); }\n\n  /**\n   * Registers an application with a testability hook so that it can be tracked\n   * @param token token of application, root element\n   * @param testability Testability hook\n   */\n  registerApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n\n  /**\n   * Unregisters an application.\n   * @param token token of application, root element\n   */\n  unregisterApplication(token: any) { this._applications.delete(token); }\n\n  /**\n   * Unregisters all applications\n   */\n  unregisterAllApplications() { this._applications.clear(); }\n\n  /**\n   * Get a testability hook associated with the application\n   * @param elem root element\n   */\n  getTestability(elem: any): Testability|null { return this._applications.get(elem) || null; }\n\n  /**\n   * Get all registered testabilities\n   */\n  getAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n\n  /**\n   * Get all registered applications(root elements)\n   */\n  getAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n\n  /**\n   * Find testability of a node in the Tree\n   * @param elem node\n   * @param findInAncestors whether finding testability in ancestors if testability was not found in\n   * current node\n   */\n  findTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability|null {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\n}\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @publicApi\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null;\n}\n\nclass _NoopGetTestability implements GetTestability {\n  addToWindow(registry: TestabilityRegistry): void {}\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    return null;\n  }\n}\n\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @publicApi\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet _testabilityGetter: GetTestability = new _NoopGetTestability();\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Observer, Subscription, merge} from 'rxjs';\nimport {share} from 'rxjs/operators';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, StaticProvider} from './di';\nimport {ErrorHandler} from './error_handler';\nimport {isDevMode} from './is_dev_mode';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {assertNgModuleType} from './render3/assert';\nimport {NgModuleFactory as R3NgModuleFactory} from './render3/ng_module_ref';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {scheduleMicroTask, stringify} from './util';\nimport {isPromise} from './util/lang';\nimport {NgZone, NoopNgZone} from './zone/ng_zone';\n\nlet _platform: PlatformRef;\n\nlet compileNgModuleFactory:\n    <M>(injector: Injector, options: CompilerOptions, moduleType: Type<M>) =>\n        Promise<NgModuleFactory<M>> = compileNgModuleFactory__PRE_NGCC__;\n\nfunction compileNgModuleFactory__PRE_NGCC__<M>(\n    injector: Injector, options: CompilerOptions,\n    moduleType: Type<M>): Promise<NgModuleFactory<M>> {\n  const compilerFactory: CompilerFactory = injector.get(CompilerFactory);\n  const compiler = compilerFactory.createCompiler([options]);\n  return compiler.compileModuleAsync(moduleType);\n}\n\nexport function compileNgModuleFactory__POST_NGCC__<M>(\n    injector: Injector, options: CompilerOptions,\n    moduleType: Type<M>): Promise<NgModuleFactory<M>> {\n  ngDevMode && assertNgModuleType(moduleType);\n  return Promise.resolve(new R3NgModuleFactory(moduleType));\n}\n\nexport const ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n\n\n\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @publicApi\n */\nexport class NgProbeToken {\n  constructor(public name: string, public token: any) {}\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @publicApi\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach((init: any) => init());\n  return _platform;\n}\n\n/**\n * Creates a factory for a platform\n *\n * @publicApi\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: ((extraProviders?: StaticProvider[]) => PlatformRef) | null,\n    name: string, providers: StaticProvider[] = []): (extraProviders?: StaticProvider[]) =>\n    PlatformRef {\n  const desc = `Platform: ${name}`;\n  const marker = new InjectionToken(desc);\n  return (extraProviders: StaticProvider[] = []) => {\n    let platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        const injectedProviders: StaticProvider[] =\n            providers.concat(extraProviders).concat({provide: marker, useValue: true});\n        createPlatform(Injector.create({providers: injectedProviders, name: desc}));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @publicApi\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n\n/**\n * Destroy the existing platform.\n *\n * @publicApi\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n\n/**\n * Returns the current platform.\n *\n * @publicApi\n */\nexport function getPlatform(): PlatformRef|null {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n\n/**\n * Provides additional options to the bootstraping process.\n *\n *\n */\nexport interface BootstrapOptions {\n  /**\n   * Optionally specify which `NgZone` should be used.\n   *\n   * - Provide your own `NgZone` instance.\n   * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n   * - `noop` - Use `NoopNgZone` which does nothing.\n   */\n  ngZone?: NgZone|'zone.js'|'noop';\n}\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n * @publicApi\n */\n@Injectable()\nexport class PlatformRef {\n  private _modules: NgModuleRef<any>[] = [];\n  private _destroyListeners: Function[] = [];\n  private _destroyed: boolean = false;\n\n  /** @internal */\n  constructor(private _injector: Injector) {}\n\n  /**\n   * Creates an instance of an `@NgModule` for the given platform\n   * for offline compilation.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * my_module.ts:\n   *\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * main.ts:\n   * import {MyModuleNgFactory} from './my_module.ngfactory';\n   * import {platformBrowser} from '@angular/platform-browser';\n   *\n   * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n   * ```\n   */\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>, options?: BootstrapOptions):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    const ngZoneOption = options ? options.ngZone : undefined;\n    const ngZone = getNgZone(ngZoneOption);\n    const providers: StaticProvider[] = [{provide: NgZone, useValue: ngZone}];\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const ngZoneInjector = Injector.create(\n          {providers: providers, parent: this.injector, name: moduleFactory.moduleType.name});\n      const moduleRef = <InternalNgModuleRef<M>>moduleFactory.create(ngZoneInjector);\n      const exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef));\n      ngZone !.runOutsideAngular(\n          () => ngZone !.onError.subscribe(\n              {next: (error: any) => { exceptionHandler.handleError(error); }}));\n      return _callAndReportToErrorHandler(exceptionHandler, ngZone !, () => {\n        const initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   *\n   */\n  bootstrapModule<M>(\n      moduleType: Type<M>, compilerOptions: (CompilerOptions&BootstrapOptions)|\n      Array<CompilerOptions&BootstrapOptions> = []): Promise<NgModuleRef<M>> {\n    const options = optionsReducer({}, compilerOptions);\n    return compileNgModuleFactory(this.injector, options, moduleType)\n        .then(moduleFactory => this.bootstrapModuleFactory(moduleFactory, options));\n  }\n\n  private _moduleDoBootstrap(moduleRef: InternalNgModuleRef<any>): void {\n    const appRef = moduleRef.injector.get(ApplicationRef) as ApplicationRef;\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\n\n  /**\n   * Register a listener to be called when the platform is disposed.\n   */\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n\n  /**\n   * Retrieve the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  get injector(): Injector { return this._injector; }\n\n  /**\n   * Destroy the Angular platform and all Angular applications on the page.\n   */\n  destroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n\n  get destroyed() { return this._destroyed; }\n}\n\nfunction getNgZone(ngZoneOption?: NgZone | 'zone.js' | 'noop'): NgZone {\n  let ngZone: NgZone;\n\n  if (ngZoneOption === 'noop') {\n    ngZone = new NoopNgZone();\n  } else {\n    ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n        new NgZone({enableLongStackTrace: isDevMode()});\n  }\n  return ngZone;\n}\n\nfunction _callAndReportToErrorHandler(\n    errorHandler: ErrorHandler, ngZone: NgZone, callback: () => any): any {\n  try {\n    const result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch (e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n\nfunction optionsReducer<T extends Object>(dst: any, objs: T | T[]): T {\n  if (Array.isArray(objs)) {\n    dst = objs.reduce(optionsReducer, dst);\n  } else {\n    dst = {...dst, ...(objs as any)};\n  }\n  return dst;\n}\n\n/**\n * A reference to an Angular application running on a page.\n *\n * @publicApi\n */\n@Injectable()\nexport class ApplicationRef {\n  /** @internal */\n  static _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\n  private _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\n  private _views: InternalViewRef[] = [];\n  private _runningTick: boolean = false;\n  private _enforceNoNewChanges: boolean = false;\n  private _stable = true;\n\n  /**\n   * Get a list of component types registered to this application.\n   * This list is populated even before the component is created.\n   */\n  public readonly componentTypes: Type<any>[] = [];\n\n  /**\n   * Get a list of components registered to this application.\n   */\n  public readonly components: ComponentRef<any>[] = [];\n\n  /**\n   * Returns an Observable that indicates when the application is stable or unstable.\n   */\n  // TODO(issue/24571): remove '!'.\n  public readonly isStable !: Observable<boolean>;\n\n  /** @internal */\n  constructor(\n      private _zone: NgZone, private _console: Console, private _injector: Injector,\n      private _exceptionHandler: ErrorHandler,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _initStatus: ApplicationInitStatus) {\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      // Create the subscription to onStable outside the Angular Zone so that\n      // the callback is run outside the Angular Zone.\n      let stableSub: Subscription;\n      this._zone.runOutsideAngular(() => {\n        stableSub = this._zone.onStable.subscribe(() => {\n          NgZone.assertNotInAngularZone();\n\n          // Check whether there are no pending macro/micro tasks in the next tick\n          // to allow for NgZone to update the state.\n          scheduleMicroTask(() => {\n            if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks) {\n              this._stable = true;\n              observer.next(true);\n            }\n          });\n        });\n      });\n\n      const unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    (this as{isStable: Observable<boolean>}).isStable =\n        merge(isCurrentlyStable, isStable.pipe(share()));\n  }\n\n  /**\n   * Bootstrap a new component at the root level of the application.\n   *\n   * @usageNotes\n   * ### Bootstrap process\n   *\n   * When bootstrapping a new root component into an application, Angular mounts the\n   * specified application component onto DOM elements identified by the componentType's\n   * selector and kicks off automatic change detection to finish initializing the component.\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * componentType's selector.\n   *\n   * ### Example\n   * {@example core/ts/platform/platform.ts region='longform'}\n   */\n  bootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory =\n          this._componentFactoryResolver.resolveComponentFactory(componentOrFactory) !;\n    }\n    this.componentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   */\n  tick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const scope = ApplicationRef._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } catch (e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n\n  /**\n   * Attaches a view so that it will be dirty checked.\n   * The view will be automatically detached when it is destroyed.\n   * This will throw if the view is already attached to a ViewContainer.\n   */\n  attachView(viewRef: ViewRef): void {\n    const view = (viewRef as InternalViewRef);\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n\n  /**\n   * Detaches a view from dirty checking again.\n   */\n  detachView(viewRef: ViewRef): void {\n    const view = (viewRef as InternalViewRef);\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n\n  private _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this.components.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n\n  private _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this.components, componentRef);\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n\n  /**\n   * Returns the number of attached views.\n   */\n  get viewCount() { return this._views.length; }\n}\n\nfunction remove<T>(list: T[], el: T): void {\n  const index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModuleFactory} from './ng_module_factory';\n\n/**\n * Used to load ng module factories.\n *\n * @publicApi\n */\nexport abstract class NgModuleFactoryLoader {\n  abstract load(path: string): Promise<NgModuleFactory<any>>;\n}\n\nlet moduleFactories = new Map<string, NgModuleFactory<any>>();\n\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @publicApi\n */\nexport function registerModuleFactory(id: string, factory: NgModuleFactory<any>) {\n  const existing = moduleFactories.get(id);\n  if (existing) {\n    throw new Error(`Duplicate module registered for ${id\n                    } - ${existing.moduleType.name} vs ${factory.moduleType.name}`);\n  }\n  moduleFactories.set(id, factory);\n}\n\nexport function clearModulesForTest() {\n  moduleFactories = new Map<string, NgModuleFactory<any>>();\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @publicApi\n */\nexport function getModuleFactory(id: string): NgModuleFactory<any> {\n  const factory = moduleFactories.get(id);\n  if (!factory) throw new Error(`No module with ID ${id} loaded`);\n  return factory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n\n\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * @publicApi\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\n  public readonly dirty = true;\n  private _results: Array<T> = [];\n  public readonly changes: Observable<any> = new EventEmitter();\n\n  readonly length: number = 0;\n  // TODO(issue/24571): remove '!'.\n  readonly first !: T;\n  // TODO(issue/24571): remove '!'.\n  readonly last !: T;\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._results.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n\n  toArray(): T[] { return this._results.slice(); }\n\n  [getSymbolIterator()](): Iterator<T> { return (this._results as any)[getSymbolIterator()](); }\n\n  toString(): string { return this._results.toString(); }\n\n  reset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    (this as{dirty: boolean}).dirty = false;\n    (this as{length: number}).length = this._results.length;\n    (this as{last: T}).last = this._results[this.length - 1];\n    (this as{first: T}).first = this._results[0];\n  }\n\n  notifyOnChanges(): void { (this.changes as EventEmitter<any>).emit(this); }\n\n  /** internal */\n  setDirty() { (this as{dirty: boolean}).dirty = true; }\n\n  /** internal */\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n}\n\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const flatItem = Array.isArray(item) ? flatten(item) : item;\n    return (<T[]>flat).concat(flatItem);\n  }, []);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst _SEPARATOR = '#';\n\nconst FACTORY_CLASS_SUFFIX = 'NgFactory';\ndeclare var System: any;\n\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @publicApi\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n  /**\n   * Prefix to add when computing the name of the factory module for a given module name.\n   */\n  // TODO(issue/24571): remove '!'.\n  factoryPathPrefix !: string;\n\n  /**\n   * Suffix to add when computing the name of the factory module for a given module name.\n   */\n  // TODO(issue/24571): remove '!'.\n  factoryPathSuffix !: string;\n}\n\nconst DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @publicApi\n */\n@Injectable()\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\n  private _config: SystemJsNgModuleLoaderConfig;\n\n  constructor(private _compiler: Compiler, @Optional() config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n\n  load(path: string): Promise<NgModuleFactory<any>> {\n    const offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n\n  private loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n\n  private loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\n}\n\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {R3_VIEW_CONTAINER_REF_FACTORY} from '../ivy_switch/runtime/index';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n\n\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nexport abstract class ViewContainerRef {\n  /**\n   * Anchor element that specifies the location of this container in the containing view.\n   * Each view container can have only one anchor element, and each anchor element\n   * can have only a single view container.\n   *\n   * Root elements of views attached to this container become siblings of the anchor element in\n   * the rendered view.\n   *\n   * Access the `ViewContainerRef` of an element by placing a `Directive` injected\n   * with `ViewContainerRef` on the element, or use a `ViewChild` query.\n   *\n   * <!-- TODO: rename to anchorElement -->\n   */\n  abstract get element(): ElementRef;\n\n  /**\n   * The [dependency injector](guide/glossary#injector) for this view container.\n   */\n  abstract get injector(): Injector;\n\n  /** @deprecated No replacement */\n  abstract get parentInjector(): Injector;\n\n  /**\n   * Destroys all views in this container.\n   */\n  abstract clear(): void;\n\n  /**\n   * Retrieves a view from this container.\n   * @param index The 0-based index of the view to retrieve.\n   * @returns The `ViewRef` instance, or null if the index is out of range.\n   */\n  abstract get(index: number): ViewRef|null;\n\n  /**\n   * Reports how many views are currently attached to this container.\n   * @returns The number of views.\n   */\n  abstract get length(): number;\n\n  /**\n   * Instantiates an embedded view and inserts it\n   * into this container.\n   * @param templateRef The HTML template that defines the view.\n   * @param index The 0-based index at which to insert the new view into this container.\n   * If not specified, appends the new view as the last entry.\n   *\n   * @returns The `ViewRef` instance for the newly created view.\n   */\n  abstract createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C>;\n\n  /**\n   * Instantiates a single component and inserts its host view into this container.\n   *\n   * @param componentFactory The factory to use.\n   * @param index The index at which to insert the new component's host view into this container.\n   * If not specified, appends the new view as the last entry.\n   * @param injector The injector to use as the parent for the new component.\n   * @param projectableNodes\n   * @param ngModule\n   *\n   * @returns The new component instance, containing the host view.\n   *\n   */\n  abstract createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModule?: NgModuleRef<any>): ComponentRef<C>;\n\n  /**\n   * Inserts a view into this container.\n   * @param viewRef The view to insert.\n   * @param index The 0-based index at which to insert the view.\n   * If not specified, appends the new view as the last entry.\n   * @returns The inserted `ViewRef` instance.\n   *\n   */\n  abstract insert(viewRef: ViewRef, index?: number): ViewRef;\n\n  /**\n   * Moves a view to a new location in this container.\n   * @param viewRef The view to move.\n   * @param index The 0-based index of the new location.\n   * @returns The moved `ViewRef` instance.\n   */\n  abstract move(viewRef: ViewRef, currentIndex: number): ViewRef;\n\n  /**\n   * Returns the index of a view within the current container.\n   * @param viewRef The view to query.\n   * @returns The 0-based index of the view's position in this container,\n   * or `-1` if this container doesn't contain the view.\n   */\n  abstract indexOf(viewRef: ViewRef): number;\n\n  /**\n   * Destroys a view attached to this container\n   * @param index The 0-based index of the view to destroy.\n   * If not specified, the last view in the container is removed.\n   */\n  abstract remove(index?: number): void;\n\n  /**\n   * Detaches a view from this container without destroying it.\n   * Use along with `insert()` to move a view within the current container.\n   * @param index The 0-based index of the view to detach.\n   * If not specified, the last view in the container is detached.\n   */\n  abstract detach(index?: number): ViewRef|null;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__:\n      () => ViewContainerRef = () => R3_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef)\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {R3_CHANGE_DETECTOR_REF_FACTORY} from '../ivy_switch/runtime/index';\n\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * @usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @publicApi\n */\nexport abstract class ChangeDetectorRef {\n  /**\n   * When a view uses the {@link ChangeDetectionStrategy#OnPush OnPush} (checkOnce)\n   * change detection strategy, explicitly marks the view as changed so that\n   * it can be checked again.\n   *\n   * Components are normally marked as dirty (in need of rerendering) when inputs\n   * have changed or events have fired in the view. Call this method to ensure that\n   * a component is checked even if these triggers have not occured.\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   */\n  abstract markForCheck(): void;\n\n  /**\n   * Detaches this view from the change-detection tree.\n   * A detached view is  not checked until it is reattached.\n   * Use in combination with `detectChanges()` to implement local change detection checks.\n   *\n   * Detached views are not checked during change detection runs until they are\n   * re-attached, even if they are marked as dirty.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   */\n  abstract detach(): void;\n\n  /**\n   * Checks this view and its children. Use in combination with {@link ChangeDetectorRef#detach\n   * detach}\n   * to implement local change detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   */\n  abstract detectChanges(): void;\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * Use in development mode to verify that running change detection doesn't introduce\n   * other changes.\n   */\n  abstract checkNoChanges(): void;\n\n  /**\n   * Re-attaches the previously detached view to the change detection tree.\n   * Views are attached to the tree by default.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   */\n  abstract reattach(): void;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => ChangeDetectorRef = () => R3_CHANGE_DETECTOR_REF_FACTORY();\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detector_ref';\n\n/**\n * Represents an Angular [view](guide/glossary#view),\n * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n * Also serves as the base class\n * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n *\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nexport abstract class ViewRef extends ChangeDetectorRef {\n  /**\n   * Destroys this view and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Reports whether this view has been destroyed.\n   * @returns True after the `destroy()` method has been called, false otherwise.\n   */\n  abstract get destroyed(): boolean;\n\n  /**\n   * A lifecycle hook that provides additional developer-defined cleanup\n   * functionality for views.\n   * @param callback A handler function that cleans up developer-defined data\n   * associated with a view. Called when the `destroy()` method is invoked.\n   */\n  abstract onDestroy(callback: Function): any /** TODO #9100 */;\n}\n\n/**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * @usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @publicApi\n */\nexport abstract class EmbeddedViewRef<C> extends ViewRef {\n  /**\n   * The context for this view, inherited from the anchor element.\n   */\n  abstract get context(): C;\n\n  /**\n   * The root nodes for this embedded view.\n   */\n  abstract get rootNodes(): any[];\n}\n\nexport interface InternalViewRef extends ViewRef {\n  detachFromAppRef(): void;\n  attachToAppRef(appRef: ApplicationRef): void;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {DebugContext} from '../view/index';\n\nexport class EventListener {\n  constructor(public name: string, public callback: Function) {}\n}\n\n/**\n * @publicApi\n */\nexport class DebugNode {\n  listeners: EventListener[] = [];\n  parent: DebugElement|null = null;\n\n  constructor(public nativeNode: any, parent: DebugNode|null, private _debugContext: DebugContext) {\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    }\n  }\n\n  get injector(): Injector { return this._debugContext.injector; }\n\n  get componentInstance(): any { return this._debugContext.component; }\n\n  get context(): any { return this._debugContext.context; }\n\n  get references(): {[key: string]: any} { return this._debugContext.references; }\n\n  get providerTokens(): any[] { return this._debugContext.providerTokens; }\n}\n\n/**\n * @publicApi\n */\nexport class DebugElement extends DebugNode {\n  name !: string;\n  properties: {[key: string]: any} = {};\n  attributes: {[key: string]: string | null} = {};\n  classes: {[key: string]: boolean} = {};\n  styles: {[key: string]: string | null} = {};\n  childNodes: DebugNode[] = [];\n  nativeElement: any;\n\n  constructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.nativeElement = nativeNode;\n  }\n\n  addChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n\n  removeChild(child: DebugNode) {\n    const childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n\n  insertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          c.parent.removeChild(c);\n        }\n        c.parent = this;\n      });\n    }\n  }\n\n  insertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        newChild.parent.removeChild(newChild);\n      }\n      newChild.parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n\n  get children(): DebugElement[] {\n    return this.childNodes.filter((node) => node instanceof DebugElement) as DebugElement[];\n  }\n\n  triggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\n/**\n * @publicApi\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst _nativeNodeToDebugNode = new Map<any, DebugNode>();\n\n/**\n * @publicApi\n */\nexport function getDebugNode(nativeNode: any): DebugNode|null {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @publicApi\n */\nexport interface Predicate<T> { (value: T): boolean; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isListLikeIterable, iterateListLike} from '../change_detection_util';\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\n\n\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\n  constructor() {}\n  supports(obj: Object|null|undefined): boolean { return isListLikeIterable(obj); }\n\n  create<V>(trackByFn?: TrackByFunction<V>): DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn);\n  }\n}\n\nconst trackByIdentity = (index: number, item: any) => item;\n\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @publicApi\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\n  public readonly length: number = 0;\n  // TODO(issue/24571): remove '!'.\n  public readonly collection !: V[] | Iterable<V>| null;\n  // Keeps track of the used records at any point in time (during & across `_check()` calls)\n  private _linkedRecords: _DuplicateMap<V>|null = null;\n  // Keeps track of the removed records at any point in time during `_check()` calls.\n  private _unlinkedRecords: _DuplicateMap<V>|null = null;\n  private _previousItHead: IterableChangeRecord_<V>|null = null;\n  private _itHead: IterableChangeRecord_<V>|null = null;\n  private _itTail: IterableChangeRecord_<V>|null = null;\n  private _additionsHead: IterableChangeRecord_<V>|null = null;\n  private _additionsTail: IterableChangeRecord_<V>|null = null;\n  private _movesHead: IterableChangeRecord_<V>|null = null;\n  private _movesTail: IterableChangeRecord_<V>|null = null;\n  private _removalsHead: IterableChangeRecord_<V>|null = null;\n  private _removalsTail: IterableChangeRecord_<V>|null = null;\n  // Keeps track of records where custom track by is the same, but item identity has changed\n  private _identityChangesHead: IterableChangeRecord_<V>|null = null;\n  private _identityChangesTail: IterableChangeRecord_<V>|null = null;\n  private _trackByFn: TrackByFunction<V>;\n\n  constructor(trackByFn?: TrackByFunction<V>) { this._trackByFn = trackByFn || trackByIdentity; }\n\n  forEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachOperation(\n      fn: (item: IterableChangeRecord<V>, previousIndex: number|null, currentIndex: number|null) =>\n          void) {\n    let nextIt = this._itHead;\n    let nextRemove = this._removalsHead;\n    let addRemoveOffset = 0;\n    let moveOffsets: number[]|null = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const record: IterableChangeRecord<V> = !nextRemove ||\n              nextIt &&\n                  nextIt.currentIndex ! <\n                      getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n          nextIt ! :\n          nextRemove;\n      const adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = nextIt !._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const localCurrentIndex = currentIndex ! - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let i = 0; i < localMovePreviousIndex; i++) {\n              const offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n\n  forEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  forEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n\n  diff(collection: NgIterable<V>): DefaultIterableDiffer<V>|null {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(\n          `Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n\n  onDestroy() {}\n\n  check(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let record: IterableChangeRecord_<V>|null = this._itHead;\n    let mayBeDirty: boolean = false;\n    let index: number;\n    let item: V;\n    let itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      (this as{length: number}).length = collection.length;\n\n      for (let index = 0; index < this.length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      (this as{length: number}).length = index;\n    }\n\n    this._truncate(record);\n    (this as{collection: V[] | Iterable<V>}).collection = collection;\n    return this.isDirty;\n  }\n\n  /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n   * changes.\n   */\n  get isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n\n  /**\n   * Reset the state of the change objects to show no changes. This means set previousKey to\n   * currentKey, and clear all of the queues (additions, moves, removals).\n   * Set the previousIndexes of moved and added items to their currentIndexes\n   * Reset the list of additions, moves and removals\n   *\n   * @internal\n   */\n  _reset() {\n    if (this.isDirty) {\n      let record: IterableChangeRecord_<V>|null;\n      let nextRecord: IterableChangeRecord_<V>|null;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // TODO(vicb): when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n\n  /**\n   * This is the core function which handles differences between collections.\n   *\n   * - `record` is the record which we saw at this position last time. If null then it is a new\n   *   item.\n   * - `item` is the current item in the collection\n   * - `index` is the position of the item in the collection\n   *\n   * @internal\n   */\n  _mismatch(record: IterableChangeRecord_<V>|null, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let previousRecord: IterableChangeRecord_<V>|null;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n\n  /**\n   * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n   *\n   * Use case: `[a, a]` => `[b, a, a]`\n   *\n   * If we did not have this check then the insertion of `b` would:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) leave `a` at index `1` as is. <-- this is wrong!\n   *   3) reinsert `a` at index 2. <-- this is wrong!\n   *\n   * The correct behavior is:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) reinsert `a` at index 1.\n   *   3) move `a` at from `1` to `2`.\n   *\n   *\n   * Double check that we have not evicted a duplicate item. We need to check if the item type may\n   * have already been removed:\n   * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n   * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n   * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n   * at the end.\n   *\n   * @internal\n   */\n  _verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let reinsertRecord: IterableChangeRecord_<V>|null =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, record._prev !, index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n\n  /**\n   * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n   *\n   * - `record` The first excess {@link IterableChangeRecord_}.\n   *\n   * @internal\n   */\n  _truncate(record: IterableChangeRecord_<V>|null) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const nextRecord: IterableChangeRecord_<V>|null = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n\n  /** @internal */\n  _reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const prev = record._prevRemoved;\n    const next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n\n  /** @internal */\n  _moveAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n\n  /** @internal */\n  _addAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // TODO(vicb):\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // TODO(vicb):\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n\n  /** @internal */\n  _insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    // TODO(vicb):\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const next: IterableChangeRecord_<V>|null =\n        prevRecord === null ? this._itHead : prevRecord._next;\n    // TODO(vicb):\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n\n  /** @internal */\n  _remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n\n  /** @internal */\n  _unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const prev = record._prev;\n    const next = record._next;\n\n    // TODO(vicb):\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n\n  /** @internal */\n  _addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // TODO(vicb):\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // TODO(vicb):\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // TODO(vicb):\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n\n  private _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // TODO(vicb):\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // TODO(vicb):\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n\n  /** @internal */\n  _addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n}\n\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number|null = null;\n  previousIndex: number|null = null;\n\n  /** @internal */\n  _nextPrevious: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prev: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _next: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prevDup: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextDup: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prevRemoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextRemoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextAdded: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextMoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextIdentityChange: IterableChangeRecord_<V>|null = null;\n\n\n  constructor(public item: V, public trackById: any) {}\n}\n\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nclass _DuplicateItemRecordList<V> {\n  /** @internal */\n  _head: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _tail: IterableChangeRecord_<V>|null = null;\n\n  /**\n   * Append the record to the list of duplicates.\n   *\n   * Note: by design all records in the list of duplicates hold the same value in record.item.\n   */\n  add(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else {\n      // TODO(vicb):\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail !._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n\n  // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n  // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n  get(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex !) &&\n          looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * Returns whether the list of duplicates is empty.\n   */\n  remove(record: IterableChangeRecord_<V>): boolean {\n    // TODO(vicb):\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const prev: IterableChangeRecord_<V>|null = record._prevDup;\n    const next: IterableChangeRecord_<V>|null = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n\n  put(record: IterableChangeRecord_<V>) {\n    const key = record.trackById;\n\n    let duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n\n  /**\n   * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n   * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n   *\n   * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n   * have any more `a`s needs to return the second `a`.\n   */\n  get(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    const key = trackById;\n    const recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n  }\n\n  /**\n   * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * The list of duplicates also is removed from the map if it gets empty.\n   */\n  remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const key = record.trackById;\n    const recordList: _DuplicateItemRecordList<V> = this.map.get(key) !;\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n\n  get isEmpty(): boolean { return this.map.size === 0; }\n\n  clear() { this.map.clear(); }\n}\n\nfunction getPreviousIndex(\n    item: any, addRemoveOffset: number, moveOffsets: number[] | null): number {\n  const previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isJsObject} from '../change_detection_util';\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\n\n\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\n  constructor() {}\n  supports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): KeyValueDiffer<K, V> { return new DefaultKeyValueDiffer<K, V>(); }\n}\n\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\n  private _records = new Map<K, KeyValueChangeRecord_<K, V>>();\n  private _mapHead: KeyValueChangeRecord_<K, V>|null = null;\n  // _appendAfter is used in the check loop\n  private _appendAfter: KeyValueChangeRecord_<K, V>|null = null;\n  private _previousMapHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _changesHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _changesTail: KeyValueChangeRecord_<K, V>|null = null;\n  private _additionsHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _additionsTail: KeyValueChangeRecord_<K, V>|null = null;\n  private _removalsHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _removalsTail: KeyValueChangeRecord_<K, V>|null = null;\n\n  get isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  diff(map?: Map<any, any>|{[k: string]: any}|null): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(\n          `Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n\n  onDestroy() {}\n\n  /**\n   * Check the current state of the map vs the previous.\n   * The algorithm is optimised for when the keys do no change.\n   */\n  check(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n\n    let insertBefore = this._mapHead;\n    this._appendAfter = null;\n\n    this._forEach(map, (value: any, key: any) => {\n      if (insertBefore && insertBefore.key === key) {\n        this._maybeAddToChanges(insertBefore, value);\n        this._appendAfter = insertBefore;\n        insertBefore = insertBefore._next;\n      } else {\n        const record = this._getOrCreateRecordForKey(key, value);\n        insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n      }\n    });\n\n    // Items remaining at the end of the list have been deleted\n    if (insertBefore) {\n      if (insertBefore._prev) {\n        insertBefore._prev._next = null;\n      }\n\n      this._removalsHead = insertBefore;\n\n      for (let record: KeyValueChangeRecord_<K, V>|null = insertBefore; record !== null;\n           record = record._nextRemoved) {\n        if (record === this._mapHead) {\n          this._mapHead = null;\n        }\n        this._records.delete(record.key);\n        record._nextRemoved = record._next;\n        record.previousValue = record.currentValue;\n        record.currentValue = null;\n        record._prev = null;\n        record._next = null;\n      }\n    }\n\n    // Make sure tails have no next records from previous runs\n    if (this._changesTail) this._changesTail._nextChanged = null;\n    if (this._additionsTail) this._additionsTail._nextAdded = null;\n\n    return this.isDirty;\n  }\n\n  /**\n   * Inserts a record before `before` or append at the end of the list when `before` is null.\n   *\n   * Notes:\n   * - This method appends at `this._appendAfter`,\n   * - This method updates `this._appendAfter`,\n   * - The return value is the new value for the insertion pointer.\n   */\n  private _insertBeforeOrAppend(\n      before: KeyValueChangeRecord_<K, V>|null,\n      record: KeyValueChangeRecord_<K, V>): KeyValueChangeRecord_<K, V>|null {\n    if (before) {\n      const prev = before._prev;\n      record._next = before;\n      record._prev = prev;\n      before._prev = record;\n      if (prev) {\n        prev._next = record;\n      }\n      if (before === this._mapHead) {\n        this._mapHead = record;\n      }\n\n      this._appendAfter = before;\n      return before;\n    }\n\n    if (this._appendAfter) {\n      this._appendAfter._next = record;\n      record._prev = this._appendAfter;\n    } else {\n      this._mapHead = record;\n    }\n\n    this._appendAfter = record;\n    return null;\n  }\n\n  private _getOrCreateRecordForKey(key: K, value: V): KeyValueChangeRecord_<K, V> {\n    if (this._records.has(key)) {\n      const record = this._records.get(key) !;\n      this._maybeAddToChanges(record, value);\n      const prev = record._prev;\n      const next = record._next;\n      if (prev) {\n        prev._next = next;\n      }\n      if (next) {\n        next._prev = prev;\n      }\n      record._next = null;\n      record._prev = null;\n\n      return record;\n    }\n\n    const record = new KeyValueChangeRecord_<K, V>(key);\n    this._records.set(key, record);\n    record.currentValue = value;\n    this._addToAdditions(record);\n    return record;\n  }\n\n  /** @internal */\n  _reset() {\n    if (this.isDirty) {\n      let record: KeyValueChangeRecord_<K, V>|null;\n      // let `_previousMapHead` contain the state of the map before the changes\n      this._previousMapHead = this._mapHead;\n      for (record = this._previousMapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      // Update `record.previousValue` with the value of the item before the changes\n      // We need to update all changed items (that's those which have been added and changed)\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = null;\n    }\n  }\n\n  // Add the record or a given key to the list of changes only when the value has actually changed\n  private _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n\n  private _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail !._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n\n  private _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail !._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n\n  /** @internal */\n  private _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V|null = null;\n  currentValue: V|null = null;\n\n  /** @internal */\n  _nextPrevious: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _next: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _prev: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextAdded: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextRemoved: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextChanged: KeyValueChangeRecord_<K, V>|null = null;\n\n  constructor(public key: K) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {defineInjectable} from '../../di/defs';\nimport {Optional, SkipSelf} from '../../di/metadata';\nimport {StaticProvider} from '../../di/provider';\nimport {DefaultIterableDifferFactory} from '../differs/default_iterable_differ';\n\n\n/**\n * A type describing supported iterable types.\n *\n * @publicApi\n */\nexport type NgIterable<T> = Array<T>| Iterable<T>;\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * @publicApi\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>): IterableChanges<V>|null;\n}\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * @publicApi\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn:\n          (record: IterableChangeRecord<V>, previousIndex: number|null,\n           currentIndex: number|null) => void): void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all items which had their identity (as computed by the `TrackByFunction`)\n   * changed. */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @publicApi\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  readonly currentIndex: number|null;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  readonly previousIndex: number|null;\n\n  /** The item. */\n  readonly item: V;\n\n  /** Track by identity as computed by the `TrackByFunction`. */\n  readonly trackById: any;\n}\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @publicApi\n */\nexport interface CollectionChangeRecord<V> extends IterableChangeRecord<V> {}\n\n/**\n * An optional function passed into {@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * @publicApi\n */\nexport interface TrackByFunction<T> { (index: number, item: T): any; }\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n * @publicApi\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n}\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n * @publicApi\n */\nexport class IterableDiffers {\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'root',\n    factory: () => new IterableDiffers([new DefaultIterableDifferFactory()])\n  });\n\n  /**\n   * @deprecated v4.0.0 - Should be private\n   */\n  factories: IterableDifferFactory[];\n  constructor(factories: IterableDifferFactory[]) { this.factories = factories; }\n\n  static create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n\n    return new IterableDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n   * inherited {@link IterableDiffers} instance with the provided factories and return a new\n   * {@link IterableDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link IterableDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     IterableDiffers.extend([new ImmutableListDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend(factories: IterableDifferFactory[]): StaticProvider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(iterable: any): IterableDifferFactory {\n    const factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(\n          `Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, SkipSelf, StaticProvider} from '../../di';\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @publicApi\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>|null;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>|null;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @publicApi\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @publicApi\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  readonly key: K;\n\n  /**\n   * Current value for the key or `null` if removed.\n   */\n  readonly currentValue: V|null;\n\n  /**\n   * Previous value for the key or `null` if added.\n   */\n  readonly previousValue: V|null;\n}\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @publicApi\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n}\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n * @publicApi\n */\nexport class KeyValueDiffers {\n  /**\n   * @deprecated v4.0.0 - Should be private.\n   */\n  factories: KeyValueDifferFactory[];\n\n  constructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n\n  static create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n   * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n   * {@link KeyValueDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link KeyValueDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend<S>(factories: KeyValueDifferFactory[]): StaticProvider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(kv: any): KeyValueDifferFactory {\n    const factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n\n\n\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Injector, StaticProvider} from './di';\nimport {TestabilityRegistry} from './testability/testability';\n\nconst _CORE_PLATFORM_PROVIDERS: StaticProvider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  {provide: PlatformRef, deps: [Injector]},\n  {provide: TestabilityRegistry, deps: []},\n  {provide: Console, deps: []},\n];\n\n/**\n * This platform has to be included in any other platform\n *\n * @publicApi\n */\nexport const platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\n\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const LOCALE_ID = new InjectionToken<string>('LocaleId');\n\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const TRANSLATIONS = new InjectionToken<string>('Translations');\n\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\n\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @publicApi\n */\nexport enum MissingTranslationStrategy {\n  Error = 0,\n  Warning = 1,\n  Ignore = 2,\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_INITIALIZER, ApplicationInitStatus} from './application_init';\nimport {ApplicationRef} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {Console} from './console';\nimport {InjectionToken, Injector, StaticProvider} from './di';\nimport {Inject, Optional, SkipSelf} from './di/metadata';\nimport {ErrorHandler} from './error_handler';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {ComponentFactoryResolver} from './linker';\nimport {Compiler} from './linker/compiler';\nimport {NgModule} from './metadata';\nimport {NgZone} from './zone';\n\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n\nexport function _localeFactory(locale?: string): string {\n  return locale || 'en-US';\n}\n\n/**\n * A built-in [dependency injection token](guide/glossary#di-token)\n * that is used to configure the root injector for bootstrapping.\n */\nexport const APPLICATION_MODULE_PROVIDERS: StaticProvider[] = [\n  {\n    provide: ApplicationRef,\n    useClass: ApplicationRef,\n    deps:\n        [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n  },\n  {\n    provide: ApplicationInitStatus,\n    useClass: ApplicationInitStatus,\n    deps: [[new Optional(), APP_INITIALIZER]]\n  },\n  {provide: Compiler, useClass: Compiler, deps: []},\n  APP_ID_RANDOM_PROVIDER,\n  {provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: []},\n  {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: []},\n  {\n    provide: LOCALE_ID,\n    useFactory: _localeFactory,\n    deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n  },\n];\n\n/**\n * Configures the root injector for an app with\n * providers of `@angular/core` dependencies that `ApplicationRef` needs\n * to bootstrap components.\n *\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * @publicApi\n */\n@NgModule({providers: APPLICATION_MODULE_PROVIDERS})\nexport class ApplicationModule {\n  // Inject ApplicationRef to make it eager...\n  constructor(appRef: ApplicationRef) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../sanitization/security';\nimport {Type} from '../type';\n\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface DefinitionFactory<D extends Definition<any>> { (logger: NodeLogger): D; }\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n\nexport interface Definition<DF extends DefinitionFactory<any>> { factory: DF|null; }\n\nexport interface NgModuleDefinition extends Definition<NgModuleDefinitionFactory> {\n  providers: NgModuleProviderDef[];\n  providersByKey: {[tokenKey: string]: NgModuleProviderDef};\n  modules: any[];\n  isRoot: boolean;\n}\n\nexport interface NgModuleDefinitionFactory extends DefinitionFactory<NgModuleDefinition> {}\n\nexport interface ViewDefinition extends Definition<ViewDefinitionFactory> {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef|null;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n\nexport interface ViewDefinitionFactory extends DefinitionFactory<ViewDefinition> {}\n\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline = 0, Dynamic = 1}\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefinition.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  // Index of the node in view data and view definition (those are the same)\n  nodeIndex: number;\n  // Index of the node in the check functions\n  // Differ from nodeIndex when nodes are added or removed at runtime (ie after compilation)\n  checkIndex: number;\n  parent: NodeDef|null;\n  renderParent: NodeDef|null;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number|null;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef|null;\n  provider: ProviderDef|null;\n  text: TextDef|null;\n  query: QueryDef|null;\n  ngContent: NgContentDef|null;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  TypeNgModule = 1 << 30,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string|null;\n  name: string|null;\n  nonMinifiedName: string|null;\n  securityContext: SecurityContext|null;\n  suffix: string|null;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component'|null;\n  eventName: string;\n  propName: string|null;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef = 0,\n  RenderElement = 1,\n  TemplateRef = 2,\n  ViewContainerRef = 3,\n  Provider = 4\n}\n\nexport interface ElementDef {\n  // set to null for `<ng-container>`\n  name: string|null;\n  ns: string|null;\n  /** ns, name, value */\n  attrs: [string, string, string][]|null;\n  template: ViewDefinition|null;\n  componentProvider: NodeDef|null;\n  componentRendererType: RendererType2|null;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory|null;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef}|null;\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef}|null;\n  handleEvent: ElementHandleEventFn|null;\n}\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n\nexport interface ProviderDef {\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface NgModuleProviderDef {\n  flags: NodeFlags;\n  index: number;\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Self = 1 << 2,\n  Value = 1 << 3,\n}\n\nexport interface TextDef { prefix: string; }\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First = 0, All = 1}\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\nexport interface NgModuleData extends Injector, NgModuleRef<any> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _def: NgModuleDefinition;\n  _parent: Injector;\n  _providers: any[];\n}\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef|null;\n  parent: ViewData|null;\n  viewContainerParent: ViewData|null;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[]|null;\n  initIndex: number;\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  BeforeFirstCheck = 1 << 0,\n  FirstCheck = 1 << 1,\n  Attached = 1 << 2,\n  ChecksEnabled = 1 << 3,\n  IsProjectedView = 1 << 4,\n  CheckProjectedView = 1 << 5,\n  CheckProjectedViews = 1 << 6,\n  Destroyed = 1 << 7,\n\n  // InitState Uses 3 bits\n  InitState_Mask = 7 << 8,\n  InitState_BeforeInit = 0 << 8,\n  InitState_CallingOnInit = 1 << 8,\n  InitState_CallingAfterContentInit = 2 << 8,\n  InitState_CallingAfterViewInit = 3 << 8,\n  InitState_AfterInit = 4 << 8,\n\n  CatDetectChanges = Attached | ChecksEnabled,\n  CatInit = BeforeFirstCheck | CatDetectChanges | InitState_BeforeInit\n}\n\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nexport function shiftInitState(\n    view: ViewData, priorInitState: ViewState, newInitState: ViewState): boolean {\n  // Only update the InitState if we are currently in the prior state.\n  // For example, only move into CallingInit if we are in BeforeInit. Only\n  // move into CallingContentInit if we are in CallingInit. Normally this will\n  // always be true because of how checkCycle is called in checkAndUpdateView.\n  // However, if checkAndUpdateView is called recursively or if an exception is\n  // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n  // from the beginning. This ensures the state is monotonically increasing,\n  // terminating in the AfterInit state, which ensures the Init methods are called\n  // at least once and only once.\n  const state = view.state;\n  const initState = state & ViewState.InitState_Mask;\n  if (initState === priorInitState) {\n    view.state = (state & ~ViewState.InitState_Mask) | newInitState;\n    view.initIndex = -1;\n    return true;\n  }\n  return initState === newInitState;\n}\n\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nexport function shouldCallLifecycleInitHook(\n    view: ViewData, initState: ViewState, index: number): boolean {\n  if ((view.state & ViewState.InitState_Mask) === initState && view.initIndex <= index) {\n    view.initIndex = index + 1;\n    return true;\n  }\n  return false;\n}\n\nexport interface DisposableFn { (): void; }\n\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData { private __brand: any; }\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData|null;\n  template: TemplateData;\n}\n\nexport interface ViewContainerData extends ViewContainerRef {\n  // Note: we are using the prefix _ as ViewContainerData is a ViewContainerRef and therefore\n  // directly\n  // exposed to the user.\n  _embeddedViews: ViewData[];\n}\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  // Note: we are using the prefix _ as TemplateData is a TemplateRef and therefore directly\n  // exposed to the user.\n  _projectedViews: ViewData[];\n}\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return <any>view.nodes[index];\n}\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  errorHandler: ErrorHandler;\n  sanitizer: Sanitizer;\n}\n\nexport abstract class DebugContext {\n  abstract get view(): ViewData;\n  abstract get nodeIndex(): number|null;\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get componentRenderElement(): any;\n  abstract get renderNode(): any;\n  abstract logError(console: Console, ...values: any[]): void;\n}\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n\nexport interface ProviderOverride {\n  token: any;\n  flags: NodeFlags;\n  value: any;\n  deps: ([DepFlags, any]|any)[];\n  deprecatedBehavior: boolean;\n}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any):\n      ViewData;\n  createComponentView(\n      parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData;\n  createNgModuleRef(\n      moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n      def: NgModuleDefinition): NgModuleRef<any>;\n  overrideProvider(override: ProviderOverride): void;\n  overrideComponentView(compType: Type<any>, compFactory: ComponentFactory<any>): void;\n  clearOverrides(): void;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef|null, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const Services: Services = {\n  setCurrentNode: undefined !,\n  createRootView: undefined !,\n  createEmbeddedView: undefined !,\n  createComponentView: undefined !,\n  createNgModuleRef: undefined !,\n  overrideProvider: undefined !,\n  overrideComponentView: undefined !,\n  clearOverrides: undefined !,\n  checkAndUpdateView: undefined !,\n  checkNoChangesView: undefined !,\n  destroyView: undefined !,\n  resolveDep: undefined !,\n  createDebugContext: undefined !,\n  handleEvent: undefined !,\n  updateDirectives: undefined !,\n  updateRenderer: undefined !,\n  dirtyParentQueries: undefined !,\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  (err as any)[ERROR_DEBUG_CONTEXT] = context;\n  (err as any)[ERROR_LOGGER] = context.logError.bind(context);\n}\n\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {SOURCE} from '../di/injector';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {BindingDef, BindingFlags, Definition, DefinitionFactory, DepDef, DepFlags, ElementData, NodeDef, NodeFlags, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asTextData} from './types';\n\nexport const NOOP: any = () => {};\n\nconst _tokenKeyCache = new Map<any, string>();\n\nexport function tokenKey(token: any): string {\n  let key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n\nexport function unwrapValue(view: ViewData, nodeIdx: number, bindingIdx: number, value: any): any {\n  if (WrappedValue.isWrapped(value)) {\n    value = WrappedValue.unwrap(value);\n    const globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    const oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\n\nconst UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst EMPTY_RENDERER_TYPE_ID = '$$empty';\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\n\nlet _renderCompCount = 0;\n\nexport function resolveRendererType2(type?: RendererType2 | null): RendererType2|null {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const isFilled =\n        ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n         type.styles.length || Object.keys(type.data).length);\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type || null;\n}\n\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const oldValues = view.oldValues;\n  if ((view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if ((view.state & ViewState.BeforeFirstCheck) || !devModeEqual(oldValue, value)) {\n    const bindingName = def.bindings[bindingIdx].name;\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.nodeIndex), `${bindingName}: ${oldValue}`,\n        `${bindingName}: ${value}`, (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n\nexport function markParentViewsForCheck(view: ViewData) {\n  let currView: ViewData|null = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n\nexport function markParentViewsForCheckProjectedViews(view: ViewData, endView: ViewData) {\n  let currView: ViewData|null = view;\n  while (currView && currView !== endView) {\n    currView.state |= ViewState.CheckProjectedViews;\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean|undefined {\n  try {\n    const nodeDef = view.def.nodes[nodeIndex];\n    const startView = nodeDef.flags & NodeFlags.ComponentView ?\n        asElementData(view, nodeIndex).componentView :\n        view;\n    markParentViewsForCheck(startView);\n    return Services.handleEvent(view, nodeIndex, eventName, event);\n  } catch (e) {\n    // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n    view.root.errorHandler.handleError(e);\n  }\n}\n\nexport function declaredViewContainer(view: ViewData): ElementData|null {\n  if (view.parent) {\n    const parentView = view.parent;\n    return asElementData(parentView, view.parentNodeDef !.nodeIndex);\n  }\n  return null;\n}\n\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nexport function viewParentEl(view: ViewData): NodeDef|null {\n  const parentView = view.parent;\n  if (parentView) {\n    return view.parentNodeDef !.parent;\n  } else {\n    return null;\n  }\n}\n\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.nodeIndex).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.nodeIndex).renderText;\n  }\n}\n\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!(view.parentNodeDef !.flags & NodeFlags.Component);\n}\n\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !(view.parentNodeDef !.flags & NodeFlags.Component);\n}\n\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n\nexport function splitMatchedQueriesDsl(\n    matchedQueriesDsl: [string | number, QueryValueType][] | null): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let matchedQueryIds = 0;\n  const references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n\nexport function splitDepsDsl(deps: ([DepFlags, any] | any)[], sourceName?: string): DepDef[] {\n  return deps.map(value => {\n    let token: any;\n    let flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n      Object.defineProperty(token, SOURCE, {value: sourceName, configurable: true});\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n}\n\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        (renderParent.element !.componentRendererType &&\n         renderParent.element !.componentRendererType !.encapsulation ===\n             ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, def.renderParent !.nodeIndex).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst DEFINITION_CACHE = new WeakMap<any, Definition<any>>();\n\nexport function resolveDefinition<D extends Definition<any>>(factory: DefinitionFactory<D>): D {\n  let value = DEFINITION_CACHE.get(factory) !as D;\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n\nexport function rootRenderNodes(view: ViewData): any[] {\n  const renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n\nexport const enum RenderNodeAction {Collect, AppendChild, InsertBefore, RemoveChild}\n\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target?: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode !));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  let compView: ViewData|null = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const hostView = compView !.parent;\n  const hostElDef = viewParentEl(compView !);\n  const startIndex = hostElDef !.nodeIndex + 1;\n  const endIndex = hostElDef !.nodeIndex + hostElDef !.childCount;\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = hostView !.def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode(hostView !, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (!hostView !.parent) {\n    // a root view\n    const projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, nodeDef.ngContent !.index, action, parentNode, nextSibling, target);\n  } else {\n    const rn = renderNode(view, nodeDef);\n    if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n        (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n        const compView = asElementData(view, nodeDef.nodeIndex).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer !._embeddedViews;\n      for (let k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && !nodeDef.element !.name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  const renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect:\n      target !.push(renderNode);\n      break;\n  }\n}\n\nconst NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const match = name.match(NS_PREFIX_RE) !;\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n\nexport function calcBindingFlags(bindings: BindingDef[]): BindingFlags {\n  let flags = 0;\n  for (let i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let result = '';\n  for (let i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const EMPTY_ARRAY: any[] = [];\nexport const EMPTY_MAP: {[key: string]: any} = {};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {SecurityContext} from '../sanitization/security';\n\nimport {BindingDef, BindingFlags, ElementData, ElementHandleEventFn, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, ViewData, ViewDefinitionFactory, asElementData} from './types';\nimport {NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace} from './util';\n\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: null | [string | number, QueryValueType][],\n    ngContentIndex: null | number, childCount: number, handleEvent?: null | ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const template = templateFactory ? resolveDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    checkIndex: -1,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: null,\n      name: null,\n      attrs: null, template,\n      componentProvider: null,\n      componentView: null,\n      componentRendererType: null,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function elementDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: null | [string | number, QueryValueType][], ngContentIndex: null | number,\n    childCount: number, namespaceAndName: string | null, fixedAttrs: null | [string, string][] = [],\n    bindings?: null | [BindingFlags, string, string | SecurityContext | null][],\n    outputs?: null | ([string, string])[], handleEvent?: null | ElementHandleEventFn,\n    componentView?: null | ViewDefinitionFactory,\n    componentRendererType?: RendererType2 | null): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let ns: string = null !;\n  let name: string = null !;\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let securityContext: SecurityContext = undefined !;\n    let suffix: string = undefined !;\n    switch (bindingFlags & BindingFlags.Types) {\n      case BindingFlags.TypeElementStyle:\n        suffix = <string>suffixOrSecurityContext;\n        break;\n      case BindingFlags.TypeElementAttribute:\n      case BindingFlags.TypeProperty:\n        securityContext = <SecurityContext>suffixOrSecurityContext;\n        break;\n    }\n    bindingDefs[i] =\n        {flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: <any>target, eventName,\n      propName: null\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const attrs = <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  });\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: null,\n      // will bet set by the view definition\n      componentProvider: null,\n      componentView: componentView || null,\n      componentRendererType: componentRendererType,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP,\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const elDef = def.element !;\n  const rootSelectorOrNode = view.root.selectorOrNode;\n  const renderer = view.renderer;\n  let el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n    const preserveContent =\n        (!!elDef.componentRendererType &&\n         elDef.componentRendererType.encapsulation === ViewEncapsulation.ShadowDom);\n    el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n  }\n  if (elDef.attrs) {\n    for (let i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let i = 0; i < def.outputs.length; i++) {\n    const output = def.outputs[i];\n    const handleEventClosure = renderEventHandlerClosure(\n        view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n    let listenTarget: 'window'|'document'|'body'|'component'|null = output.target;\n    let listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const disposable =\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n    view.disposables ![def.outputIndex + i] = disposable;\n  }\n}\n\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n\n\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindLen = def.bindings.length;\n  let changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const binding = def.bindings[bindingIdx];\n  const elData = asElementData(view, def.nodeIndex);\n  const renderNode = elData.renderElement;\n  const name = binding.name !;\n  switch (binding.flags & BindingFlags.Types) {\n    case BindingFlags.TypeElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingFlags.TypeElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingFlags.TypeElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingFlags.TypeProperty:\n      const bindView = (def.flags & NodeFlags.ComponentView &&\n                        binding.flags & BindingFlags.SyntheticHostProperty) ?\n          elData.componentView :\n          view;\n      setElementProperty(bindView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string | null, name: string,\n    value: any) {\n  const securityContext = binding.securityContext;\n  let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let renderValue: string|null =\n      view.root.sanitizer.sanitize(SecurityContext.STYLE, value as{} | string);\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const securityContext = binding.securityContext;\n  let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectableDef, getInjectableDef} from '../di/defs';\nimport {resolveForwardRef} from '../di/forward_ref';\nimport {INJECTOR, InjectFlags, Injector, setCurrentInjector} from '../di/injector';\nimport {APP_ROOT} from '../di/scope';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {stringify} from '../util';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst UNDEFINED_VALUE = new Object();\n\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\n\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n  const depDefs = splitDepsDsl(deps, stringify(token));\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  const modules = [];\n  let isRoot: boolean = false;\n  for (let i = 0; i < providers.length; i++) {\n    const provider = providers[i];\n    if (provider.token === APP_ROOT && provider.value === true) {\n      isRoot = true;\n    }\n    if (provider.flags & NodeFlags.TypeNgModule) {\n      modules.push(provider.token);\n    }\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers,\n    modules,\n    isRoot,\n  };\n}\n\nexport function initNgModule(data: NgModuleData) {\n  const def = data._def;\n  const providers = data._providers = new Array(def.providers.length);\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (!(provDef.flags & NodeFlags.LazyProvider)) {\n      // Make sure the provider has not been already initialized outside this loop.\n      if (providers[i] === undefined) {\n        providers[i] = _createProviderInstance(data, provDef);\n      }\n    }\n  }\n}\n\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  const former = setCurrentInjector(data);\n  try {\n    if (depDef.flags & DepFlags.Value) {\n      return depDef.token;\n    }\n    if (depDef.flags & DepFlags.Optional) {\n      notFoundValue = null;\n    }\n    if (depDef.flags & DepFlags.SkipSelf) {\n      return data._parent.get(depDef.token, notFoundValue);\n    }\n    const tokenKey = depDef.tokenKey;\n    switch (tokenKey) {\n      case InjectorRefTokenKey:\n      case INJECTORRefTokenKey:\n      case NgModuleRefTokenKey:\n        return data;\n    }\n    const providerDef = data._def.providersByKey[tokenKey];\n    let injectableDef: InjectableDef<any>|null;\n    if (providerDef) {\n      let providerInstance = data._providers[providerDef.index];\n      if (providerInstance === undefined) {\n        providerInstance = data._providers[providerDef.index] =\n            _createProviderInstance(data, providerDef);\n      }\n      return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    } else if (\n        (injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n      const index = data._providers.length;\n      data._def.providersByKey[depDef.tokenKey] = {\n        flags: NodeFlags.TypeFactoryProvider | NodeFlags.LazyProvider,\n        value: injectableDef.factory,\n        deps: [], index,\n        token: depDef.token,\n      };\n      data._providers[index] = UNDEFINED_VALUE;\n      return (\n          data._providers[index] =\n              _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n    } else if (depDef.flags & DepFlags.Self) {\n      return notFoundValue;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n  } finally {\n    setCurrentInjector(former);\n  }\n}\n\nfunction moduleTransitivelyPresent(ngModule: NgModuleData, scope: any): boolean {\n  return ngModule._def.modules.indexOf(scope) > -1;\n}\n\nfunction targetsModule(ngModule: NgModuleData, def: InjectableDef<any>): boolean {\n  return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n                                    def.providedIn === 'root' && ngModule._def.isRoot);\n}\n\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n\n  // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n  // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n  // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n  // set (ngOnDestroy was detected statically).\n  if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n      !(providerDef.flags & NodeFlags.OnDestroy) && typeof injectable.ngOnDestroy === 'function') {\n    providerDef.flags |= NodeFlags.OnDestroy;\n  }\n  return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const def = ngModule._def;\n  const destroyed = new Set<any>();\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const instance = ngModule._providers[i];\n      if (instance && instance !== UNDEFINED_VALUE) {\n        const onDestroy: Function|undefined = instance.ngOnDestroy;\n        if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n          onDestroy.apply(instance);\n          destroyed.add(instance);\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementData, NodeDef, NodeFlags, Services, ViewData, ViewDefinition, ViewState} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, visitRootRenderNodes} from './util';\n\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number | undefined | null,\n    view: ViewData) {\n  let embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, viewIndex !, view);\n  attachProjectedView(elementData, view);\n\n  Services.dirtyParentQueries(view);\n\n  const prevView = viewIndex ! > 0 ? embeddedViews[viewIndex ! - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n\nfunction attachProjectedView(vcElementData: ElementData, view: ViewData) {\n  const dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData ||\n      view.state & ViewState.IsProjectedView) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even across component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= ViewState.IsProjectedView;\n  let projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate(view.parent !.def, view.parentNodeDef !);\n}\n\nfunction markNodeAsProjectedTemplate(viewDef: ViewDefinition, nodeDef: NodeDef) {\n  if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n    return;\n  }\n  viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n  nodeDef.flags |= NodeFlags.ProjectedTemplate;\n  let parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n\nexport function detachEmbeddedView(elementData: ElementData, viewIndex?: number): ViewData|null {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n\nexport function detachProjectedView(view: ViewData) {\n  if (!(view.state & ViewState.IsProjectedView)) {\n    return;\n  }\n  const dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  const view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n\nfunction renderAttachEmbeddedView(\n    elementData: ElementData, prevView: ViewData | null, view: ViewData) {\n  const prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode !) :\n                                    elementData.renderElement;\n  const parentNode = view.renderer.parentNode(prevRenderNode);\n  const nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {InjectFlags, Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst EMPTY_CONTEXT = new Object();\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return (componentFactory as ComponentFactory_).viewDefFactory;\n}\n\nclass ComponentFactory_ extends ComponentFactory<any> {\n  /**\n   * @internal\n   */\n  viewDefFactory: ViewDefinitionFactory;\n\n  constructor(\n      public selector: string, public componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory, private _inputs: {[propName: string]: string}|null,\n      private _outputs: {[propName: string]: string}, public ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n\n  get inputs() {\n    const inputsArr: {propName: string, templateName: string}[] = [];\n    const inputs = this._inputs !;\n    for (let propName in inputs) {\n      const templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n\n  get outputs() {\n    const outputsArr: {propName: string, templateName: string}[] = [];\n    for (let propName in this._outputs) {\n      const templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n\n  /**\n   * Creates a new component.\n   */\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const viewDef = resolveDefinition(this.viewDefFactory);\n    const componentNodeIndex = viewDef.nodes[0].element !.componentProvider !.nodeIndex;\n    const view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\n  public readonly hostView: ViewRef;\n  public readonly instance: any;\n  public readonly changeDetectorRef: ChangeDetectorRef;\n  private _elDef: NodeDef;\n  constructor(private _view: ViewData, private _viewRef: ViewRef, private _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n    this.hostView = _viewRef;\n    this.changeDetectorRef = _viewRef;\n    this.instance = _component;\n  }\n  get location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n  }\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n  get componentType(): Type<any> { return <any>this._component.constructor; }\n\n  destroy(): void { this._viewRef.destroy(); }\n  onDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\n\nclass ViewContainerRef_ implements ViewContainerData {\n  /**\n   * @internal\n   */\n  _embeddedViews: ViewData[] = [];\n  constructor(private _view: ViewData, private _elDef: NodeDef, private _data: ElementData) {}\n\n  get element(): ElementRef { return new ElementRef(this._data.renderElement); }\n\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n\n  /** @deprecated No replacement */\n  get parentInjector(): Injector {\n    let view = this._view;\n    let elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent !;\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n\n  clear(): void {\n    const len = this._embeddedViews.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const view = detachEmbeddedView(this._data, i) !;\n      Services.destroyView(view);\n    }\n  }\n\n  get(index: number): ViewRef|null {\n    const view = this._embeddedViews[index];\n    if (view) {\n      const ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n\n  get length(): number { return this._embeddedViews.length; }\n\n  createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const viewRef = templateRef.createEmbeddedView(context || <any>{});\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n\n  createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n\n  insert(viewRef: ViewRef, index?: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const viewRef_ = <ViewRef_>viewRef;\n    const viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n\n  move(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n\n  indexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf((<ViewRef_>viewRef)._view);\n  }\n\n  remove(index?: number): void {\n    const viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n\n  detach(index?: number): ViewRef|null {\n    const view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\n\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n  /** @internal */\n  _view: ViewData;\n  private _viewContainerRef: ViewContainerRef|null;\n  private _appRef: ApplicationRef|null;\n\n  constructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n\n  get rootNodes(): any[] { return rootRenderNodes(this._view); }\n\n  get context() { return this._view.context; }\n\n  get destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n\n  markForCheck(): void { markParentViewsForCheck(this._view); }\n  detach(): void { this._view.state &= ~ViewState.Attached; }\n  detectChanges(): void {\n    const fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    try {\n      Services.checkAndUpdateView(this._view);\n    } finally {\n      if (fs.end) {\n        fs.end();\n      }\n    }\n  }\n  checkNoChanges(): void { Services.checkNoChangesView(this._view); }\n\n  reattach(): void { this._view.state |= ViewState.Attached; }\n  onDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push(<any>callback);\n  }\n\n  destroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n\n  detachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n\n  attachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n\n  attachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\n\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n  /**\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _projectedViews !: ViewData[];\n\n  constructor(private _parentView: ViewData, private _def: NodeDef) { super(); }\n\n  createEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, this._def.element !.template !, context));\n  }\n\n  get elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n  }\n}\n\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\n\nclass Injector_ implements Injector {\n  constructor(private view: ViewData, private elDef: NodeDef|null) {}\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nexport function nodeValue(view: ViewData, index: number): any {\n  const def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const elData = asElementData(view, def.nodeIndex);\n    return def.element !.template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.nodeIndex).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.nodeIndex).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\n\nclass RendererAdapter implements RendererV1 {\n  constructor(private delegate: Renderer2) {}\n  selectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n\n  createElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n\n  createViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n\n  createTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n\n  createText(parentElement: Element|DocumentFragment, value: string): any {\n    const node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n\n  projectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n\n  attachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const parentElement = this.delegate.parentNode(node);\n    const nextSibling = this.delegate.nextSibling(node);\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n\n  detachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      const node = viewRootNodes[i];\n      const parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n\n  destroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let i = 0; i < viewAllNodes.length; i++) {\n      this.delegate.destroyNode !(viewAllNodes[i]);\n    }\n  }\n\n  listen(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, <any>callback);\n  }\n\n  listenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, <any>callback);\n  }\n\n  setElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n\n  setElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue?: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n\n  setBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n\n  setElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n\n  setElementStyle(renderElement: HTMLElement, styleName: string, styleValue?: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n\n  invokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    (renderElement as any)[methodName].apply(renderElement, args);\n  }\n\n  setText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n\n  animate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\n\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\n\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\n  private _destroyListeners: (() => void)[] = [];\n  private _destroyed: boolean = false;\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _providers !: any[];\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _modules !: any[];\n\n  readonly injector: Injector = this;\n\n  constructor(\n      private _moduleType: Type<any>, public _parent: Injector,\n      public _bootstrapComponents: Type<any>[], public _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      injectFlags: InjectFlags = InjectFlags.Default): any {\n    let flags = DepFlags.None;\n    if (injectFlags & InjectFlags.SkipSelf) {\n      flags |= DepFlags.SkipSelf;\n    } else if (injectFlags & InjectFlags.Self) {\n      flags |= DepFlags.Self;\n    }\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: flags}, notFoundValue);\n  }\n\n  get instance() { return this.get(this._moduleType); }\n\n  get componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n\n  destroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges, WrappedValue} from '../change_detection/change_detection';\nimport {INJECTOR, Injector, resolveForwardRef} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {stringify} from '../util';\nimport {isObservable} from '../util/lang';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingFlags, DepDef, DepFlags, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryValueType, Services, ViewData, ViewFlags, ViewState, asElementData, asProviderData, shouldCallLifecycleInitHook} from './types';\nimport {calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst RendererV1TokenKey = tokenKey(RendererV1);\nconst Renderer2TokenKey = tokenKey(Renderer2);\nconst ElementRefTokenKey = tokenKey(ElementRef);\nconst ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst TemplateRefTokenKey = tokenKey(TemplateRef);\nconst ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\n\nexport function directiveDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueries: null | [string | number, QueryValueType][], childCount: number, ctor: any,\n    deps: ([DepFlags, any] | any)[], props?: null | {[name: string]: [number, string]},\n    outputs?: null | {[name: string]: string}): NodeDef {\n  const bindings: BindingDef[] = [];\n  if (props) {\n    for (let prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: BindingFlags.TypeProperty,\n        name: prop, nonMinifiedName,\n        ns: null,\n        securityContext: null,\n        suffix: null\n      };\n    }\n  }\n  const outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(\n      checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: null | [string | number, QueryValueType][], token: any,\n    value: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n\nexport function _def(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: [string | number, QueryValueType][] | null, childCount: number, token: any,\n    value: any, deps: ([DepFlags, any] | any)[], bindings?: BindingDef[],\n    outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n\n  const depDefs = splitDepsDsl(deps, stringify(token));\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: -1, childCount, bindings,\n    bindingFlags: calcBindingFlags(bindings), outputs,\n    element: null,\n    provider: {token, value, deps: depDefs},\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return _createProviderInstance(view, def);\n}\n\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass(\n      compView.parent !, viewParentEl(compView) !, allowPrivateServices, def.provider !.value,\n      def.provider !.deps);\n}\n\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const instance = createClass(\n      view, def.parent !, allowPrivateServices, def.provider !.value, def.provider !.deps);\n  if (def.outputs.length) {\n    for (let i = 0; i < def.outputs.length; i++) {\n      const output = def.outputs[i];\n      const outputObservable = instance[output.propName !];\n      if (isObservable(outputObservable)) {\n        const subscription = outputObservable.subscribe(\n            eventHandlerClosure(view, def.parent !.nodeIndex, output.eventName));\n        view.disposables ![def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n      } else {\n        throw new Error(\n            `@Output ${output.propName} not initialized in '${instance.constructor.name}'.`);\n      }\n    }\n  }\n  return instance;\n}\n\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const providerData = asProviderData(view, def.nodeIndex);\n  const directive = providerData.instance;\n  let changed = false;\n  let changes: SimpleChanges = undefined !;\n  const bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  }\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  }\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  }\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  }\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  }\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  }\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  }\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  }\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((def.flags & NodeFlags.OnInit) &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingOnInit, def.nodeIndex)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const providerData = asProviderData(view, def.nodeIndex);\n  const directive = providerData.instance;\n  let changed = false;\n  let changes: SimpleChanges = undefined !;\n  for (let i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((def.flags & NodeFlags.OnInit) &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingOnInit, def.nodeIndex)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const providerDef = def.provider;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      return createClass(\n          view, def.parent !, allowPrivateServices, providerDef !.value, providerDef !.deps);\n    case NodeFlags.TypeFactoryProvider:\n      return callFactory(\n          view, def.parent !, allowPrivateServices, providerDef !.value, providerDef !.deps);\n    case NodeFlags.TypeUseExistingProvider:\n      return resolveDep(view, def.parent !, allowPrivateServices, providerDef !.deps[0]);\n    case NodeFlags.TypeValueProvider:\n      return providerDef !.value;\n  }\n}\n\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const tokenKey = depDef.tokenKey;\n\n  if (tokenKey === ChangeDetectorRefTokenKey) {\n    // directives on the same element as a component should be able to control the change detector\n    // of that component as well.\n    allowPrivateServices = !!(elDef && elDef.element !.componentView);\n  }\n\n  if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n    allowPrivateServices = false;\n    elDef = elDef.parent !;\n  }\n\n  let searchView: ViewData|null = view;\n  while (searchView) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const compView = findCompView(searchView, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const compView = findCompView(searchView, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(searchView, elDef.nodeIndex).viewContainer;\n        case TemplateRefTokenKey: {\n          if (elDef.element !.template) {\n            return asElementData(searchView, elDef.nodeIndex).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let cdView = findCompView(searchView, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n        case INJECTORRefTokenKey:\n          return createInjector(searchView, elDef);\n        default:\n          const providerDef =\n              (allowPrivateServices ? elDef.element !.allProviders :\n                                      elDef.element !.publicProviders) ![tokenKey];\n          if (providerDef) {\n            let providerData = asProviderData(searchView, providerDef.nodeIndex);\n            if (!providerData) {\n              providerData = {instance: _createProviderInstance(searchView, providerDef)};\n              searchView.nodes[providerDef.nodeIndex] = providerData as any;\n            }\n            return providerData.instance;\n          }\n      }\n    }\n\n    allowPrivateServices = isComponentView(searchView);\n    elDef = viewParentEl(searchView) !;\n    searchView = searchView.parent !;\n\n    if (depDef.flags & DepFlags.Self) {\n      searchView = null;\n    }\n  }\n\n  const value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.nodeIndex).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const compView = asElementData(view, def.parent !.nodeIndex).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const binding = def.bindings[bindingIdx];\n  const propName = binding.name !;\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    const oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n    const binding = def.bindings[bindingIdx];\n    changes[binding.nonMinifiedName !] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const nodes = view.def.nodes;\n  let initIndex = 0;\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeDef = nodes[i];\n    let parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.nodeIndex + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        initIndex = callElementProvidersLifecycles(view, parent, lifecycles, initIndex);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n\nfunction callElementProvidersLifecycles(\n    view: ViewData, elDef: NodeDef, lifecycles: NodeFlags, initIndex: number): number {\n  for (let i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n  return initIndex;\n}\n\nfunction callProviderLifecycles(\n    view: ViewData, index: number, lifecycles: NodeFlags, initIndex: number) {\n  const providerData = asProviderData(view, index);\n  if (!providerData) {\n    return;\n  }\n  const provider = providerData.instance;\n  if (!provider) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingAfterContentInit, initIndex)) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingAfterViewInit, initIndex)) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView} from './util';\n\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let bindingDefs: QueryBindingDef[] = [];\n  for (let propName in bindings) {\n    const bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    // TODO(vicb): check\n    checkIndex: -1, flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: -1,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: null\n  };\n}\n\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n\nexport function dirtyParentQueries(view: ViewData) {\n  const queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let tplDef = view.parentNodeDef !;\n    view = view.parent;\n    // content queries\n    const end = tplDef.nodeIndex + tplDef.childCount;\n    for (let i = 0; i <= end; i++) {\n      const nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          (nodeDef.query !.filterId & queryIds) === nodeDef.query !.filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.nodeIndex) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let i = 0; i < view.def.nodes.length; i++) {\n      const nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (!queryList.dirty) {\n    return;\n  }\n  let directiveInstance: any;\n  let newValues: any[] = undefined !;\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const elementDef = nodeDef.parent !.parent !;\n    newValues = calcQueryValues(\n        view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query !,\n        []);\n    directiveInstance = asProviderData(view, nodeDef.parent !.nodeIndex).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query !, []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const bindings = nodeDef.query !.bindings;\n  let notify = false;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    let boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = view.def.nodes[i];\n    const valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && nodeDef.element !.template &&\n        (nodeDef.element !.template !.nodeMatchedQueries & queryDef.filterId) ===\n            queryDef.filterId) {\n      const elementData = asElementData(view, i);\n      // check embedded views that were attached at the place of their template,\n      // but process child nodes first if some match the query (see issue #16568)\n      if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n        calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n        i += nodeDef.childCount;\n      }\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const embeddedViews = elementData.viewContainer !._embeddedViews;\n        for (let k = 0; k < embeddedViews.length; k++) {\n          const embeddedView = embeddedViews[k];\n          const dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let k = 0; k < projectedViews.length; k++) {\n          const projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        return asElementData(view, nodeDef.nodeIndex).renderElement;\n      case QueryValueType.ElementRef:\n        return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n      case QueryValueType.TemplateRef:\n        return asElementData(view, nodeDef.nodeIndex).template;\n      case QueryValueType.ViewContainerRef:\n        return asElementData(view, nodeDef.nodeIndex).viewContainer;\n      case QueryValueType.Provider:\n        return asProviderData(view, nodeDef.nodeIndex).instance;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NodeDef, NodeFlags, ViewData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n\nexport function ngContentDef(ngContentIndex: null | number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex: -1,\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: {index}\n  };\n}\n\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const ngContentIndex = def.ngContent !.index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, null, undefined);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n\nexport function purePipeDef(checkIndex: number, argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, checkIndex, new Array(argCount + 1));\n}\n\nexport function pureArrayDef(checkIndex: number, argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, checkIndex, new Array(argCount));\n}\n\nexport function pureObjectDef(checkIndex: number, propToIndex: {[p: string]: number}): NodeDef {\n  const keys = Object.keys(propToIndex);\n  const nbKeys = keys.length;\n  const propertyNames = new Array(nbKeys);\n  for (let i = 0; i < nbKeys; i++) {\n    const key = keys[i];\n    const index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n\n  return _pureExpressionDef(NodeFlags.TypePureObject, checkIndex, propertyNames);\n}\n\nfunction _pureExpressionDef(\n    flags: NodeFlags, checkIndex: number, propertyNames: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let i = 0; i < propertyNames.length; i++) {\n    const prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[bindings[0].name !] = v0;\n        if (bindLen > 1) value[bindings[1].name !] = v1;\n        if (bindLen > 2) value[bindings[2].name !] = v2;\n        if (bindLen > 3) value[bindings[3].name !] = v3;\n        if (bindLen > 4) value[bindings[4].name !] = v4;\n        if (bindLen > 5) value[bindings[5].name !] = v5;\n        if (bindLen > 6) value[bindings[6].name !] = v6;\n        if (bindLen > 7) value[bindings[7].name !] = v7;\n        if (bindLen > 8) value[bindings[8].name !] = v8;\n        if (bindLen > 9) value[bindings[9].name !] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let i = 0; i < values.length; i++) {\n          value[bindings[i].name !] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = values[0];\n        const params = values.slice(1);\n        value = (<any>pipe.transform)(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {checkAndUpdateBinding, getParentRenderElement} from './util';\n\nexport function textDef(\n    checkIndex: number, ngContentIndex: number | null, staticText: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(staticText.length - 1);\n  for (let i = 1; i < staticText.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: staticText[i],\n    };\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags: NodeFlags.TypeText,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: BindingFlags.TypeProperty,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {prefix: staticText[0]},\n    query: null,\n    ngContent: null,\n  };\n}\n\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let renderNode: any;\n  const renderer = view.renderer;\n  renderNode = renderer.createText(def.text !.prefix);\n  const parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let changed = false;\n  const bindings = def.bindings;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let value = def.text !.prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let value = '';\n    for (let i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = def.text !.prefix + value;\n    const renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData, shiftInitState} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey} from './util';\nimport {detachProjectedView} from './view_attach';\n\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: null | ViewUpdateFn,\n    updateRenderer?: null | ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let viewBindingCount = 0;\n  let viewDisposableCount = 0;\n  let viewNodeFlags = 0;\n  let viewRootNodeFlags = 0;\n  let viewMatchedQueries = 0;\n  let currentParent: NodeDef|null = null;\n  let currentRenderParent: NodeDef|null = null;\n  let currentElementHasPublicProviders = false;\n  let currentElementHasPrivateProviders = false;\n  let lastRenderRootNode: NodeDef|null = null;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    node.nodeIndex = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n    node.renderParent = currentRenderParent;\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n\n    if (node.element) {\n      const elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? currentParent.element !.publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n\n      if (node.element.template) {\n        viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    }\n    validateNode(currentParent, node, nodes.length);\n\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true;\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent !.element !.publicProviders =\n            Object.create(currentParent !.element !.publicProviders);\n        currentParent !.element !.allProviders = currentParent !.element !.publicProviders;\n      }\n      const isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) {\n        currentParent !.element !.publicProviders ![tokenKey(node.provider !.token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true;\n          // Use prototypical inheritance to not get O(n^2) complexity...\n          currentParent !.element !.allProviders =\n              Object.create(currentParent !.element !.publicProviders);\n        }\n        currentParent !.element !.allProviders ![tokenKey(node.provider !.token)] = node;\n      }\n      if (isComponent) {\n        currentParent !.element !.componentProvider = node;\n      }\n    }\n\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    if (node.childCount > 0) {\n      currentParent = node;\n\n      if (!isNgContainer(node)) {\n        currentRenderParent = node;\n      }\n    } else {\n      // When the current node has no children, check if it is the last children of its parent.\n      // When it is, propagate the flags up.\n      // The loop is required because an element could be the last transitive children of several\n      // elements. We loop to either the root or the highest opened element (= with remaining\n      // children)\n      while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n        const newParent: NodeDef|null = currentParent.parent;\n        if (newParent) {\n          newParent.childFlags |= currentParent.childFlags;\n          newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n        // We also need to update the render parent & account for ng-container\n        if (currentParent && isNgContainer(currentParent)) {\n          currentRenderParent = currentParent.renderParent;\n        } else {\n          currentRenderParent = currentParent;\n        }\n      }\n    }\n  }\n\n  const handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) =>\n      nodes[nodeIndex].element !.handleEvent !(view, eventName, event);\n\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP, handleEvent,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n\nfunction isNgContainer(node: NodeDef): boolean {\n  return (node.flags & NodeFlags.TypeElement) !== 0 && node.element !.name === null;\n}\n\nfunction validateNode(parent: NodeDef | null, node: NodeDef, nodeCount: number) {\n  const template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.childCount) {\n    const parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n    if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n    }\n  }\n}\n\nexport function createEmbeddedView(\n    parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n\nexport function createComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const rendererType = nodeDef.element !.componentRendererType;\n  let compRenderer: Renderer2;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(\n      parentView.root, compRenderer, parentView, nodeDef.element !.componentProvider, viewDef);\n}\n\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData | null, parentNodeDef: NodeDef | null,\n    def: ViewDefinition): ViewData {\n  const nodes: NodeData[] = new Array(def.nodes.length);\n  const disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: null, parentNodeDef,\n    context: null,\n    component: null, nodes,\n    state: ViewState.CatInit, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables,\n    initIndex: -1\n  };\n  return view;\n}\n\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n\nfunction createViewNodes(view: ViewData) {\n  let renderHost: any;\n  if (isComponentView(view)) {\n    const hostDef = view.parentNodeDef;\n    renderHost = asElementData(view.parent !, hostDef !.parent !.nodeIndex).renderElement;\n  }\n  const def = view.def;\n  const nodes = view.nodes;\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const el = createElement(view, renderHost, nodeDef) as any;\n        let componentView: ViewData = undefined !;\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const compViewDef = resolveDefinition(nodeDef.element !.componentView !);\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: nodeDef.element !.template ? createTemplateData(view, nodeDef) : undefined\n        };\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = createText(view, renderHost, nodeDef) as any;\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        nodeData = nodes[i];\n        if (!nodeData && !(nodeDef.flags & NodeFlags.LazyProvider)) {\n          const instance = createProviderInstance(view, nodeDef);\n          nodeData = <ProviderData>{instance};\n        }\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const instance = createPipeInstance(view, nodeDef);\n        nodeData = <ProviderData>{instance};\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        nodeData = nodes[i];\n        if (!nodeData) {\n          const instance = createDirectiveInstance(view, nodeDef);\n          nodeData = <ProviderData>{instance};\n        }\n        if (nodeDef.flags & NodeFlags.Component) {\n          const compView = asElementData(view, nodeDef.parent !.nodeIndex).componentView;\n          initView(compView, nodeData.instance, nodeData.instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = createPureExpression(view, nodeDef) as any;\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = createQuery() as any;\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n\nexport function checkNoChangesView(view: ViewData) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n\nexport function checkAndUpdateView(view: ViewData) {\n  if (view.state & ViewState.BeforeFirstCheck) {\n    view.state &= ~ViewState.BeforeFirstCheck;\n    view.state |= ViewState.FirstCheck;\n  } else {\n    view.state &= ~ViewState.FirstCheck;\n  }\n  shiftInitState(view, ViewState.InitState_BeforeInit, ViewState.InitState_CallingOnInit);\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  let callInit = shiftInitState(\n      view, ViewState.InitState_CallingOnInit, ViewState.InitState_CallingAfterContentInit);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked | (callInit ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  callInit = shiftInitState(\n      view, ViewState.InitState_CallingAfterContentInit, ViewState.InitState_CallingAfterViewInit);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked | (callInit ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n  shiftInitState(view, ViewState.InitState_CallingAfterViewInit, ViewState.InitState_AfterInit);\n}\n\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n\nfunction markProjectedViewsForCheck(view: ViewData) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n      const projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let i = 0; i < projectedViews.length; i++) {\n          const projectedView = projectedViews[i];\n          projectedView.state |= ViewState.CheckProjectedView;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionInline(\n          view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    default:\n      throw 'unreachable';\n  }\n}\n\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n    default:\n      throw 'unreachable';\n  }\n}\n\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.nodeIndex),\n        `Query ${nodeDef.query!.id} not dirty`, `Query ${nodeDef.query!.id} dirty`,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n\nfunction destroyViewNodes(view: ViewData) {\n  const len = view.def.nodes.length;\n  for (let i = 0; i < len; i++) {\n    const def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) {\n      view.renderer.destroyNode !(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) {\n      view.renderer.destroyNode !(asTextData(view, i).renderText);\n    } else if (def.flags & NodeFlags.TypeContentQuery || def.flags & NodeFlags.TypeViewQuery) {\n      asQueryList(view, i).destroy();\n    }\n  }\n}\n\nenum ViewAction {\n  CreateViewNodes,\n  CheckNoChanges,\n  CheckNoChangesProjectedViews,\n  CheckAndUpdate,\n  CheckAndUpdateProjectedViews,\n  Destroy\n}\n\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const embeddedViews = asElementData(view, i).viewContainer !._embeddedViews;\n      for (let k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n\nfunction execProjectedViewsAction(view: ViewData, action: ViewAction) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const nodeCount = view.def.nodes.length;\n  for (let i = 0; i < nodeCount; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.nodeIndex);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {InjectableDef, getInjectableDef} from '../di/defs';\nimport {InjectableType} from '../di/injectable';\nimport {ErrorHandler} from '../error_handler';\nimport {isDevMode} from '../is_dev_mode';\nimport {ivyEnabled} from '../ivy_switch/compiler/index';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../sanitization/security';\nimport {Type} from '../type';\nimport {tokenKey} from '../view/util';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef, getComponentViewDefinitionFactory} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, ElementData, NgModuleDefinition, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, resolveDefinition, splitDepsDsl, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet initialized = false;\n\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.overrideComponentView = services.overrideComponentView;\n  Services.clearOverrides = services.clearOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    overrideComponentView: NOOP,\n    clearOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    overrideComponentView: debugOverrideComponentView,\n    clearOverrides: debugClearOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const sanitizer = ngModule.injector.get(Sanitizer);\n  const errorHandler = ngModule.injector.get(ErrorHandler);\n  const renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const overrideComponentView =\n      viewDefOverrides.get(nodeDef.element !.componentProvider !.provider !.token);\n  if (overrideComponentView) {\n    viewDef = overrideComponentView;\n  } else {\n    viewDef = applyProviderOverridesToView(viewDef);\n  }\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\n\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst providerOverrides = new Map<any, ProviderOverride>();\nconst providerOverridesWithScope = new Map<InjectableType<any>, ProviderOverride>();\nconst viewDefOverrides = new Map<any, ViewDefinition>();\n\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n  let injectableDef: InjectableDef<any>|null;\n  if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n      typeof injectableDef.providedIn === 'function') {\n    providerOverridesWithScope.set(override.token as InjectableType<any>, override);\n  }\n}\n\nfunction debugOverrideComponentView(comp: any, compFactory: ComponentFactory<any>) {\n  const hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n  const compViewDef = resolveDefinition(hostViewDef.nodes[0].element !.componentView !);\n  viewDefOverrides.set(comp, compViewDef);\n}\n\nfunction debugClearOverrides() {\n  providerOverrides.clear();\n  providerOverridesWithScope.clear();\n  viewDefOverrides.clear();\n}\n\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  for (let i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n\n  function findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const elIndicesWithOverwrittenProviders: number[] = [];\n    let lastElementDef: NodeDef|null = null;\n    for (let i = 0; i < def.nodes.length; i++) {\n      const nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has(nodeDef.provider !.token)) {\n        elIndicesWithOverwrittenProviders.push(lastElementDef !.nodeIndex);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n\n  function applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        const provider = nodeDef.provider !;\n        const override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  const {hasOverrides, hasDeprecatedOverrides} = calcHasOverrides(def);\n  if (!hasOverrides) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n\n  function calcHasOverrides(def: NgModuleDefinition):\n      {hasOverrides: boolean, hasDeprecatedOverrides: boolean} {\n    let hasOverrides = false;\n    let hasDeprecatedOverrides = false;\n    if (providerOverrides.size === 0) {\n      return {hasOverrides, hasDeprecatedOverrides};\n    }\n    def.providers.forEach(node => {\n      const override = providerOverrides.get(node.token);\n      if ((node.flags & NodeFlags.CatProviderNoDirective) && override) {\n        hasOverrides = true;\n        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n      }\n    });\n    def.modules.forEach(module => {\n      providerOverridesWithScope.forEach((override, token) => {\n        if (getInjectableDef(token) !.providedIn === module) {\n          hasOverrides = true;\n          hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n        }\n      });\n    });\n    return {hasOverrides, hasDeprecatedOverrides};\n  }\n\n  function applyProviderOverrides(def: NgModuleDefinition) {\n    for (let i = 0; i < def.providers.length; i++) {\n      const provider = def.providers[i];\n      if (hasDeprecatedOverrides) {\n        // We had a bug where me made\n        // all providers lazy. Keep this logic behind a flag\n        // for migrating existing users.\n        provider.flags |= NodeFlags.LazyProvider;\n      }\n      const override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n    if (providerOverridesWithScope.size > 0) {\n      let moduleSet = new Set<any>(def.modules);\n      providerOverridesWithScope.forEach((override, token) => {\n        if (moduleSet.has(getInjectableDef(token) !.providedIn)) {\n          let provider = {\n            token: token,\n            flags:\n                override.flags | (hasDeprecatedOverrides ? NodeFlags.LazyProvider : NodeFlags.None),\n            deps: splitDepsDsl(override.deps),\n            value: override.value,\n            index: def.providers.length,\n          };\n          def.providers.push(provider);\n          def.providersByKey[tokenKey(token)] = provider;\n        }\n      });\n    }\n  }\n}\n\nfunction prodCheckAndUpdateNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction prodCheckNoChangesNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n\nenum DebugAction {\n  create,\n  detectChanges,\n  checkNoChanges,\n  destroy,\n  handleEvent\n}\n\nlet _currentAction: DebugAction;\nlet _currentView: ViewData;\nlet _currentNodeIndex: number|null;\n\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n\n  function debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n\n  function debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const changed = (<any>checkAndUpdateNode)(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const bindingValues: {[key: string]: string} = {};\n      for (let i = 0; i < nodeDef.bindings.length; i++) {\n        const binding = nodeDef.bindings[i];\n        const value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName(binding.nonMinifiedName !)] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const elDef = nodeDef.parent !;\n      const el = asElementData(view, elDef.nodeIndex).renderElement;\n      if (!elDef.element !.name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let attr in bindingValues) {\n          const value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  (<any>checkNoChangesNode)(view, nodeDef, argStyle, ...values);\n}\n\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch (e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nclass DebugContext_ implements DebugContext {\n  private nodeDef: NodeDef;\n  private elView: ViewData;\n  private elDef: NodeDef;\n\n  constructor(public view: ViewData, public nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = elDef.parent !;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView) !;\n        elView = elView.parent !;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n\n  private get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n  }\n\n  get injector(): Injector { return createInjector(this.elView, this.elDef); }\n\n  get component(): any { return this.elOrCompView.component; }\n\n  get context(): any { return this.elOrCompView.context; }\n\n  get providerTokens(): any[] {\n    const tokens: any[] = [];\n    if (this.elDef) {\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push(childDef.provider !.token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n\n  get references(): {[key: string]: any} {\n    const references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n\n  get componentRenderElement() {\n    const elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n\n  get renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n\n  logError(console: Console, ...values: any[]) {\n    let logViewDef: ViewDefinition;\n    let logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.nodeIndex;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.nodeIndex;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let currRenderNodeIndex = -1;\n    let nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    };\n    logViewDef.factory !(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      (<any>console.error)(...values);\n    }\n  }\n}\n\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let renderNodeIndex = -1;\n  for (let i = 0; i <= nodeIndex; i++) {\n    const nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = view.parent !;\n  }\n  if (view.parent) {\n    return asElementData(view.parent, viewParentEl(view) !.nodeIndex);\n  }\n  return null;\n}\n\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const oldAction = _currentAction;\n  const oldView = _currentView;\n  const oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch (e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, getCurrentDebugContext() !);\n  }\n}\n\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\n\nexport class DebugRendererFactory2 implements RendererFactory2 {\n  constructor(private delegate: RendererFactory2) {}\n\n  createRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n\n  begin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n  end() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n\n  whenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\nexport class DebugRenderer2 implements Renderer2 {\n  readonly data: {[key: string]: any};\n\n  private createDebugContext(nativeElement: any) { return this.debugContextFactory(nativeElement); }\n\n  /**\n   * Factory function used to create a `DebugContext` when a node is created.\n   *\n   * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n   *\n   * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n   * or a Render context.\n   */\n  debugContextFactory: (nativeElement?: any) => DebugContext | null = getCurrentDebugContext;\n\n  constructor(private delegate: Renderer2) { this.data = this.delegate.data; }\n\n  destroyNode(node: any) {\n    removeDebugNodeFromIndex(getDebugNode(node) !);\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n\n  destroy() { this.delegate.destroy(); }\n\n  createElement(name: string, namespace?: string): any {\n    const el = this.delegate.createElement(name, namespace);\n    const debugCtx = this.createDebugContext(el);\n    if (debugCtx) {\n      const debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n\n  createComment(value: string): any {\n    const comment = this.delegate.createComment(value);\n    const debugCtx = this.createDebugContext(comment);\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n\n  createText(value: string): any {\n    const text = this.delegate.createText(value);\n    const debugCtx = this.createDebugContext(text);\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    const debugRefEl = getDebugNode(refChild) !;\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    const el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n    const debugCtx = getCurrentDebugContext() || (ivyEnabled ? this.createDebugContext(el) : null);\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n\n  addClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n\n  removeClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n\n  listen(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n\n  parentNode(node: any): any { return this.delegate.parentNode(node); }\n  nextSibling(node: any): any { return this.delegate.nextSibling(node); }\n  setValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinition, NgModuleDefinitionFactory, NgModuleProviderDef, ProviderOverride, Services, ViewDefinition} from './types';\nimport {resolveDefinition} from './util';\n\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n\nexport function overrideComponentView(comp: Type<any>, componentFactory: ComponentFactory<any>) {\n  initServicesIfNeeded();\n  return Services.overrideComponentView(comp, componentFactory);\n}\n\nexport function clearOverrides() {\n  initServicesIfNeeded();\n  return Services.clearOverrides();\n}\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n\nfunction cloneNgModuleDefinition(def: NgModuleDefinition): NgModuleDefinition {\n  const providers = Array.from(def.providers);\n  const modules = Array.from(def.modules);\n  const providersByKey: {[tokenKey: string]: NgModuleProviderDef} = {};\n  for (const key in def.providersByKey) {\n    providersByKey[key] = def.providersByKey[key];\n  }\n\n  return {\n    factory: def.factory,\n    isRoot: def.isRoot, providers, modules, providersByKey,\n  };\n}\n\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n  constructor(\n      public readonly moduleType: Type<any>, private _bootstrapComponents: Type<any>[],\n      private _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n\n  create(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    // Clone the NgModuleDefinition so that any tree shakeable provider definition\n    // added to this instance of the NgModuleRef doesn't affect the cached copy.\n    // See https://github.com/angular/angular/issues/25018.\n    const def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injector} from '../di/injector';\n\nimport {assertDefined} from './assert';\nimport {discoverDirectives, discoverLocalRefs, getContext, isComponentInstance} from './context_discovery';\nimport {NodeInjector} from './di';\nimport {LContext} from './interfaces/context';\nimport {TElementNode, TNode, TNodeFlags} from './interfaces/node';\nimport {CONTEXT, FLAGS, LViewData, LViewFlags, PARENT, RootContext, TVIEW} from './interfaces/view';\nimport {getComponentViewByIndex, readPatchedLViewData} from './util';\n\n\n/**\n * NOTE: The following functions might not be ideal for core usage in Angular...\n *\n * Each function below is designed\n */\n\n/**\n * Returns the component instance associated with the target.\n *\n * If a DOM is used then it will return the component that\n *    owns the view where the element is situated.\n * If a component instance is used then it will return the\n *    instance of the parent component depending on where\n *    the component instance is exists in a template.\n * If a directive instance is used then it will return the\n *    component that contains that directive in it's template.\n */\nexport function getComponent<T = {}>(target: {}): T|null {\n  const context = loadContext(target) !;\n\n  if (context.component === undefined) {\n    let lViewData = context.lViewData;\n    while (lViewData) {\n      const ctx = lViewData ![CONTEXT] !as{};\n      if (ctx && isComponentInstance(ctx)) {\n        context.component = ctx;\n        break;\n      }\n      lViewData = lViewData ![PARENT] !;\n    }\n    if (context.component === undefined) {\n      context.component = null;\n    }\n  }\n\n  return context.component as T;\n}\n\n/**\n * Returns the host component instance associated with the target.\n *\n * This will only return a component instance of the DOM node\n * contains an instance of a component on it.\n */\nexport function getHostComponent<T = {}>(target: {}): T|null {\n  const context = loadContext(target);\n  const tNode = context.lViewData[TVIEW].data[context.nodeIndex] as TNode;\n  if (tNode.flags & TNodeFlags.isComponent) {\n    const componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n    return componentView[CONTEXT] as any as T;\n  }\n  return null;\n}\n\n/**\n * Returns the `RootContext` instance that is associated with\n * the application where the target is situated.\n */\nexport function getRootContext(target: LViewData | {}): RootContext {\n  const lViewData = Array.isArray(target) ? target : loadContext(target) !.lViewData;\n  const rootLViewData = getRootView(lViewData);\n  return rootLViewData[CONTEXT] as RootContext;\n}\n\n/**\n * Returns a list of all the components in the application\n * that are have been bootstrapped.\n */\nexport function getRootComponents(target: {}): any[] {\n  return [...getRootContext(target).components];\n}\n\n/**\n * Returns the injector instance that is associated with\n * the element, component or directive.\n */\nexport function getInjector(target: {}): Injector {\n  const context = loadContext(target);\n  const tNode = context.lViewData[TVIEW].data[context.nodeIndex] as TElementNode;\n\n  return new NodeInjector(tNode, context.lViewData);\n}\n\n/**\n * Returns a list of all the directives that are associated\n * with the underlying target element.\n */\nexport function getDirectives(target: {}): Array<{}> {\n  const context = loadContext(target) !;\n\n  if (context.directives === undefined) {\n    context.directives = discoverDirectives(context.nodeIndex, context.lViewData, false);\n  }\n\n  return context.directives || [];\n}\n\n/**\n * Returns LContext associated with a target passed as an argument.\n * Throws if a given target doesn't have associated LContext.\n */\nexport function loadContext(target: {}): LContext {\n  const context = getContext(target);\n  if (!context) {\n    throw new Error(\n        ngDevMode ? 'Unable to find the given context data for the given target' :\n                    'Invalid ng target');\n  }\n  return context;\n}\n\n/**\n * Retrieve the root view from any component by walking the parent `LViewData` until\n * reaching the root `LViewData`.\n *\n * @param componentOrView any component or view\n */\nexport function getRootView(componentOrView: LViewData | {}): LViewData {\n  let lViewData: LViewData;\n  if (Array.isArray(componentOrView)) {\n    ngDevMode && assertDefined(componentOrView, 'lViewData');\n    lViewData = componentOrView as LViewData;\n  } else {\n    ngDevMode && assertDefined(componentOrView, 'component');\n    lViewData = readPatchedLViewData(componentOrView) !;\n  }\n  while (lViewData && !(lViewData[FLAGS] & LViewFlags.IsRoot)) {\n    lViewData = lViewData[PARENT] !;\n  }\n  return lViewData;\n}\n\n/**\n *  Retrieve map of local references (local reference name => element or directive instance).\n */\nexport function getLocalRefs(target: {}): {[key: string]: any} {\n  const context = loadContext(target) !;\n\n  if (context.localRefs === undefined) {\n    context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n  }\n\n  return context.localRefs || {};\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Renderer2, RendererType2} from '../render/api';\nimport {DebugContext} from '../view';\nimport {DebugRenderer2, DebugRendererFactory2} from '../view/services';\n\nimport {getHostComponent, getInjector, getLocalRefs, loadContext} from './discovery_utils';\nimport {DirectiveDef} from './interfaces/definition';\nimport {TNode, TNodeFlags} from './interfaces/node';\nimport {TVIEW} from './interfaces/view';\n\n/**\n * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n *\n * The created DebugRenderer know how to create a Debug Context specific to IVY.\n */\nexport class Render3DebugRendererFactory2 extends DebugRendererFactory2 {\n  createRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    const renderer = super.createRenderer(element, renderData) as DebugRenderer2;\n    renderer.debugContextFactory = (nativeElement: any) => new Render3DebugContext(nativeElement);\n    return renderer;\n  }\n}\n\n/**\n * Stores context information about view nodes.\n *\n * Used in tests to retrieve information those nodes.\n */\nclass Render3DebugContext implements DebugContext {\n  constructor(private _nativeNode: any) {}\n\n  get nodeIndex(): number|null { return loadContext(this._nativeNode).nodeIndex; }\n\n  get view(): any { return loadContext(this._nativeNode).lViewData; }\n\n  get injector(): Injector { return getInjector(this._nativeNode); }\n\n  get component(): any { return getHostComponent(this._nativeNode); }\n\n  get providerTokens(): any[] {\n    const lDebugCtx = loadContext(this._nativeNode);\n    const lViewData = lDebugCtx.lViewData;\n    const tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex] as TNode;\n    const directivesCount = tNode.flags & TNodeFlags.DirectiveCountMask;\n\n    if (directivesCount > 0) {\n      const directiveIdxStart = tNode.flags >> TNodeFlags.DirectiveStartingIndexShift;\n      const directiveIdxEnd = directiveIdxStart + directivesCount;\n      const viewDirectiveDefs = this.view[TVIEW].data;\n      const directiveDefs =\n          viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd) as DirectiveDef<any>[];\n\n      return directiveDefs.map(directiveDef => directiveDef.type);\n    }\n\n    return [];\n  }\n\n  get references(): {[key: string]: any} { return getLocalRefs(this._nativeNode); }\n\n  // TODO(pk): check previous implementation and re-implement\n  get context(): any { throw new Error('Not implemented in ivy'); }\n\n  // TODO(pk): check previous implementation and re-implement\n  get componentRenderElement(): any { throw new Error('Not implemented in ivy'); }\n\n  // TODO(pk): check previous implementation and re-implement\n  get renderNode(): any { throw new Error('Not implemented in ivy'); }\n\n  // TODO(pk): check previous implementation and re-implement\n  logError(console: Console, ...values: any[]): void { console.error(...values); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport './ng_dev_mode';\n\nimport {getContext} from './context_discovery';\nimport {getRootContext} from './discovery_utils';\nimport {scheduleTick} from './instructions';\nimport {ComponentInstance, DirectiveInstance, Player} from './interfaces/player';\nimport {HEADER_OFFSET, RootContextFlags} from './interfaces/view';\nimport {addPlayerInternal, getOrCreatePlayerContext, getPlayerContext, getPlayersInternal, getStylingContext, throwInvalidRefError} from './styling/util';\n\n/**\n * Adds a player to an element, directive or component instance that will later be\n * animated once change detection has passed.\n *\n * When a player is added to a reference it will stay active until `player.destroy()`\n * is called. Once called then the player will be removed from the active players\n * present on the associated ref instance.\n *\n * To get a list of all the active players on an element see [getPlayers].\n *\n * @param ref The element, directive or component that the player will be placed on.\n * @param player The player that will be triggered to play once change detection has run.\n */\nexport function addPlayer(\n    ref: ComponentInstance | DirectiveInstance | HTMLElement, player: Player): void {\n  const context = getContext(ref);\n  if (!context) {\n    ngDevMode && throwInvalidRefError();\n    return;\n  }\n\n  const element = context.native as HTMLElement;\n  const lViewData = context.lViewData;\n  const playerContext = getOrCreatePlayerContext(element, context) !;\n  const rootContext = getRootContext(lViewData);\n  addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n  scheduleTick(rootContext, RootContextFlags.FlushPlayers);\n}\n\n/**\n * Returns a list of all the active players present on the provided ref instance (which can\n * be an instance of a directive, component or element).\n *\n * This function will only return players that have been added to the ref instance using\n * `addPlayer` or any players that are active through any template styling bindings\n * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n */\nexport function getPlayers(ref: ComponentInstance | DirectiveInstance | HTMLElement): Player[] {\n  const context = getContext(ref);\n  if (!context) {\n    ngDevMode && throwInvalidRefError();\n    return [];\n  }\n\n  const stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n  const playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n  return playerContext ? getPlayersInternal(playerContext) : [];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {APPLICATION_MODULE_PROVIDERS as Éµangular_packages_core_core_l,_iterableDiffersFactory as Éµangular_packages_core_core_i,_keyValueDiffersFactory as Éµangular_packages_core_core_j,_localeFactory as Éµangular_packages_core_core_k} from './src/application_module';\nexport {_appIdRandomProviderFactory as Éµangular_packages_core_core_f} from './src/application_tokens';\nexport {DefaultIterableDifferFactory as Éµangular_packages_core_core_g} from './src/change_detection/differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory as Éµangular_packages_core_core_h} from './src/change_detection/differs/default_keyvalue_differ';\nexport {ReflectiveInjector_ as Éµangular_packages_core_core_c} from './src/di/reflective_injector';\nexport {ReflectiveDependency as Éµangular_packages_core_core_d,resolveReflectiveProviders as Éµangular_packages_core_core_e} from './src/di/reflective_provider';\nexport {wtfEnabled as Éµangular_packages_core_core_m} from './src/profile/profile';\nexport {createScope as Éµangular_packages_core_core_o,detectWTF as Éµangular_packages_core_core_n,endTimeRange as Éµangular_packages_core_core_r,leave as Éµangular_packages_core_core_p,startTimeRange as Éµangular_packages_core_core_q} from './src/profile/wtf_impl';\nexport {NG_INJECTABLE_DEF as Éµangular_packages_core_core_bd} from './src/render3/fields';\nexport {_getViewData as Éµangular_packages_core_core_w,bindingUpdated as Éµangular_packages_core_core_x,getPreviousOrParentTNode as Éµangular_packages_core_core_v} from './src/render3/instructions';\nexport {PlayerFactoryBuildFn as Éµangular_packages_core_core_y} from './src/render3/interfaces/player';\nexport {LViewData as Éµangular_packages_core_core_bf} from './src/render3/interfaces/view';\nexport {BoundPlayerFactory as Éµangular_packages_core_core_z} from './src/render3/styling/player_factory';\nexport {loadInternal as Éµangular_packages_core_core_bg} from './src/render3/util';\nexport {createElementRef as Éµangular_packages_core_core_ba,createTemplateRef as Éµangular_packages_core_core_bb,createViewRef as Éµangular_packages_core_core_bc} from './src/render3/view_engine_compatibility';\nexport {makeParamDecorator as Éµangular_packages_core_core_a,makePropDecorator as Éµangular_packages_core_core_b} from './src/util/decorators';\nexport {getClosureSafeProperty as Éµangular_packages_core_core_be} from './src/util/property';\nexport {_def as Éµangular_packages_core_core_s} from './src/view/provider';\nexport {DebugRendererFactory2 as Éµangular_packages_core_core_t} from './src/view/services';\nexport {DebugContext as Éµangular_packages_core_core_u} from './src/view/types';"]}