{"version":3,"file":"system_js_ng_module_factory_loader.d.ts","sources":["system_js_ng_module_factory_loader.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Compiler } from './compiler';\nimport { NgModuleFactory } from './ng_module_factory';\nimport { NgModuleFactoryLoader } from './ng_module_factory_loader';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @publicApi\n */\nexport declare abstract class SystemJsNgModuleLoaderConfig {\n    /**\n     * Prefix to add when computing the name of the factory module for a given module name.\n     */\n    factoryPathPrefix: string;\n    /**\n     * Suffix to add when computing the name of the factory module for a given module name.\n     */\n    factoryPathSuffix: string;\n}\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @publicApi\n */\nexport declare class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\n    private _compiler;\n    private _config;\n    constructor(_compiler: Compiler, config?: SystemJsNgModuleLoaderConfig);\n    load(path: string): Promise<NgModuleFactory<any>>;\n    private loadAndCompile;\n    private loadFactory;\n}\n"]}