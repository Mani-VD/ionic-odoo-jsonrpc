{"version":3,"file":"localization.d.ts","sources":["localization.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '@angular/core';\nimport { Plural } from './locale_data_api';\n/**\n * @deprecated from v5\n */\nexport declare const DEPRECATED_PLURAL_FN: InjectionToken<boolean>;\n/**\n * @publicApi\n */\nexport declare abstract class NgLocalization {\n    abstract getPluralCategory(value: any, locale?: string): string;\n}\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n */\nexport declare function getPluralCategory(value: number, cases: string[], ngLocalization: NgLocalization, locale?: string): string;\n/**\n * Returns the plural case based on the locale\n *\n * @publicApi\n */\nexport declare class NgLocaleLocalization extends NgLocalization {\n    protected locale: string;\n    /** @deprecated from v5 */\n    protected deprecatedPluralFn?: ((locale: string, value: string | number) => Plural) | null | undefined;\n    constructor(locale: string, \n    /** @deprecated from v5 */\n    deprecatedPluralFn?: ((locale: string, value: string | number) => Plural) | null | undefined);\n    getPluralCategory(value: any, locale?: string): string;\n}\n/**\n * Returns the plural case based on the locale\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n * @publicApi\n */\nexport declare function getPluralCase(locale: string, nLike: number | string): Plural;\n"]}