{"version":3,"file":"xhr.d.ts","sources":["xhr.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Observable } from 'rxjs';\nimport { HttpBackend } from './backend';\nimport { HttpRequest } from './request';\nimport { HttpEvent } from './response';\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * @publicApi\n */\nexport declare abstract class XhrFactory {\n    abstract build(): XMLHttpRequest;\n}\n/**\n * A factory for @{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n *\n */\nexport declare class BrowserXhr implements XhrFactory {\n    constructor();\n    build(): any;\n}\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * @publicApi\n */\nexport declare class HttpXhrBackend implements HttpBackend {\n    private xhrFactory;\n    constructor(xhrFactory: XhrFactory);\n    /**\n     * Process a request and return a stream of response events.\n     */\n    handle(req: HttpRequest<any>): Observable<HttpEvent<any>>;\n}\n"]}