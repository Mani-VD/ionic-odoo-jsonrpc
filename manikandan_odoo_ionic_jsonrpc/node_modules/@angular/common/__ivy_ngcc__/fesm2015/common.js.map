{"version":3,"file":"common.js","sources":["../src/location/platform_location.ts","../src/location/location_strategy.ts","../src/location/location.ts","../src/location/hash_location_strategy.ts","../src/location/path_location_strategy.ts","../src/i18n/locale_en.ts","../src/i18n/locale_data.ts","../src/i18n/currencies.ts","../src/i18n/locale_data_api.ts","../src/i18n/format_date.ts","../src/i18n/format_number.ts","../src/i18n/localization.ts","../src/cookie.ts","../src/directives/ng_class.ts","../src/directives/ng_component_outlet.ts","../src/directives/ng_for_of.ts","../src/directives/ng_if.ts","../src/directives/ng_switch.ts","../src/directives/ng_plural.ts","../src/directives/ng_style.ts","../src/directives/ng_template_outlet.ts","../src/directives/index.ts","../src/pipes/invalid_pipe_argument_error.ts","../src/pipes/deprecated/intl.ts","../src/pipes/deprecated/date_pipe.ts","../src/pipes/deprecated/number_pipe.ts","../src/pipes/deprecated/index.ts","../src/pipes/async_pipe.ts","../src/pipes/case_conversion_pipes.ts","../src/pipes/date_pipe.ts","../src/pipes/i18n_plural_pipe.ts","../src/pipes/i18n_select_pipe.ts","../src/pipes/json_pipe.ts","../src/pipes/keyvalue_pipe.ts","../src/pipes/number_pipe.ts","../src/pipes/slice_pipe.ts","../src/pipes/index.ts","../src/common_module.ts","../src/dom_tokens.ts","../src/platform_id.ts","../src/version.ts","../src/viewport_scroller.ts","../common.ts"],"names":["isListLikeIterable","stringify","DATE_FORMATS_SPLIT","DATE_FORMATS","timeZoneGetter","DateFormatter","isDate","formatNumber"],"mappings":"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AAI;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,KAAK,CAAC;AACf,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,CAAC;AACd,QAAI,KAAK,IAAI,C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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that angular supports. For example, `@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `@angular/platform-webworker` provides\n * one suitable for use with web workers.\n *\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n * when they need to interact with the DOM apis like pushState, popState, etc...\n *\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n * by the {@link Router} in order to navigate between routes. Since all interactions between {@link\n * Router} /\n * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class they are all platform independent.\n *\n * @publicApi\n */\nexport abstract class PlatformLocation {\n  abstract getBaseHrefFromDOM(): string;\n  abstract onPopState(fn: LocationChangeListener): void;\n  abstract onHashChange(fn: LocationChangeListener): void;\n\n  abstract get pathname(): string;\n  abstract get search(): string;\n  abstract get hash(): string;\n\n  abstract replaceState(state: any, title: string, url: string): void;\n\n  abstract pushState(state: any, title: string, url: string): void;\n\n  abstract forward(): void;\n\n  abstract back(): void;\n}\n\n/**\n * @description\n * Indicates when a location is initialized.\n *\n * @publicApi\n */\nexport const LOCATION_INITIALIZED = new InjectionToken<Promise<any>>('Location Initialized');\n\n/**\n * @description\n * A serializable version of the event from `onPopState` or `onHashChange`\n *\n * @publicApi\n */\nexport interface LocationChangeEvent {\n  type: string;\n  state: any;\n}\n\n/**\n * @publicApi\n */\nexport interface LocationChangeListener { (event: LocationChangeEvent): any; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {LocationChangeListener} from './platform_location';\n\n/**\n * `LocationStrategy` is responsible for representing and reading route state\n * from the browser's URL. Angular provides two strategies:\n * {@link HashLocationStrategy} and {@link PathLocationStrategy}.\n *\n * This is used under the hood of the {@link Location} service.\n *\n * Applications should use the {@link Router} or {@link Location} services to\n * interact with application route state.\n *\n * For instance, {@link HashLocationStrategy} produces URLs like\n * `http://example.com#/foo`, and {@link PathLocationStrategy} produces\n * `http://example.com/foo` as an equivalent URL.\n *\n * See these two classes for more.\n *\n * @publicApi\n */\nexport abstract class LocationStrategy {\n  abstract path(includeHash?: boolean): string;\n  abstract prepareExternalUrl(internal: string): string;\n  abstract pushState(state: any, title: string, url: string, queryParams: string): void;\n  abstract replaceState(state: any, title: string, url: string, queryParams: string): void;\n  abstract forward(): void;\n  abstract back(): void;\n  abstract onPopState(fn: LocationChangeListener): void;\n  abstract getBaseHref(): string;\n}\n\n\n/**\n * The `APP_BASE_HREF` token represents the base href to be used with the\n * {@link PathLocationStrategy}.\n *\n * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n * representing the URL prefix that should be preserved when generating and recognizing\n * URLs.\n *\n * @usageNotes\n *\n * ### Example\n *\n * ```typescript\n * import {Component, NgModule} from '@angular/core';\n * import {APP_BASE_HREF} from '@angular/common';\n *\n * @NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n * @publicApi\n */\nexport const APP_BASE_HREF = new InjectionToken<string>('appBaseHref');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {SubscriptionLike} from 'rxjs';\n\nimport {LocationStrategy} from './location_strategy';\n\n/** @publicApi */\nexport interface PopStateEvent {\n  pop?: boolean;\n  state?: any;\n  type?: string;\n  url?: string;\n}\n\n/**\n * @description\n *\n * A service that applications can use to interact with a browser's URL.\n *\n * Depending on which {@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n *\n * @usageNotes\n *\n * It's better to use {@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\n@Injectable()\nexport class Location {\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  /** @internal */\n  _baseHref: string;\n  /** @internal */\n  _platformStrategy: LocationStrategy;\n\n  constructor(platformStrategy: LocationStrategy) {\n    this._platformStrategy = platformStrategy;\n    const browserBaseHref = this._platformStrategy.getBaseHref();\n    this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n    this._platformStrategy.onPopState((ev) => {\n      this._subject.emit({\n        'url': this.path(true),\n        'pop': true,\n        'state': ev.state,\n        'type': ev.type,\n      });\n    });\n  }\n\n  /**\n   * Returns the normalized URL path.\n   */\n  // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n  // removed.\n  path(includeHash: boolean = false): string {\n    return this.normalize(this._platformStrategy.path(includeHash));\n  }\n\n  /**\n   * Normalizes the given path and compares to the current normalized path.\n   */\n  isCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n  }\n\n  /**\n   * Given a string representing a URL, returns the normalized URL path without leading or\n   * trailing slashes.\n   */\n  normalize(url: string): string {\n    return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n  }\n\n  /**\n   * Given a string representing a URL, returns the platform-specific external URL path.\n   * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n   * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n   * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n   */\n  prepareExternalUrl(url: string): string {\n    if (url && url[0] !== '/') {\n      url = '/' + url;\n    }\n    return this._platformStrategy.prepareExternalUrl(url);\n  }\n\n  // TODO: rename this method to pushState\n  /**\n   * Changes the browsers URL to the normalized version of the given URL, and pushes a\n   * new item onto the platform's history.\n   */\n  go(path: string, query: string = '', state: any = null): void {\n    this._platformStrategy.pushState(state, '', path, query);\n  }\n\n  /**\n   * Changes the browsers URL to the normalized version of the given URL, and replaces\n   * the top item on the platform's history stack.\n   */\n  replaceState(path: string, query: string = '', state: any = null): void {\n    this._platformStrategy.replaceState(state, '', path, query);\n  }\n\n  /**\n   * Navigates forward in the platform's history.\n   */\n  forward(): void { this._platformStrategy.forward(); }\n\n  /**\n   * Navigates back in the platform's history.\n   */\n  back(): void { this._platformStrategy.back(); }\n\n  /**\n   * Subscribe to the platform's `popState` events.\n   */\n  subscribe(\n      onNext: (value: PopStateEvent) => void, onThrow?: ((exception: any) => void)|null,\n      onReturn?: (() => void)|null): SubscriptionLike {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n\n  /**\n   * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n   * is.\n   */\n  public static normalizeQueryParams(params: string): string {\n    return params && params[0] !== '?' ? '?' + params : params;\n  }\n\n  /**\n   * Given 2 parts of a url, join them with a slash if needed.\n   */\n  public static joinWithSlash(start: string, end: string): string {\n    if (start.length == 0) {\n      return end;\n    }\n    if (end.length == 0) {\n      return start;\n    }\n    let slashes = 0;\n    if (start.endsWith('/')) {\n      slashes++;\n    }\n    if (end.startsWith('/')) {\n      slashes++;\n    }\n    if (slashes == 2) {\n      return start + end.substring(1);\n    }\n    if (slashes == 1) {\n      return start + end;\n    }\n    return start + '/' + end;\n  }\n\n  /**\n   * If url has a trailing slash, remove it, otherwise return url as is. This\n   * method looks for the first occurrence of either #, ?, or the end of the\n   * line as `/` characters after any of these should not be replaced.\n   */\n  public static stripTrailingSlash(url: string): string {\n    const match = url.match(/#|\\?|$/);\n    const pathEndIdx = match && match.index || url.length;\n    const droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n    return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n  }\n}\n\nfunction _stripBaseHref(baseHref: string, url: string): string {\n  return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\n\nfunction _stripIndexHtml(url: string): string {\n  return url.replace(/\\/index.html$/, '');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n\n\n\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\n@Injectable()\nexport class HashLocationStrategy extends LocationStrategy {\n  private _baseHref: string = '';\n  constructor(\n      private _platformLocation: PlatformLocation,\n      @Optional() @Inject(APP_BASE_HREF) _baseHref?: string) {\n    super();\n    if (_baseHref != null) {\n      this._baseHref = _baseHref;\n    }\n  }\n\n  onPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n\n  getBaseHref(): string { return this._baseHref; }\n\n  path(includeHash: boolean = false): string {\n    // the hash value is always prefixed with a `#`\n    // and if it is empty then it will stay empty\n    let path = this._platformLocation.hash;\n    if (path == null) path = '#';\n\n    return path.length > 0 ? path.substring(1) : path;\n  }\n\n  prepareExternalUrl(internal: string): string {\n    const url = Location.joinWithSlash(this._baseHref, internal);\n    return url.length > 0 ? ('#' + url) : url;\n  }\n\n  pushState(state: any, title: string, path: string, queryParams: string) {\n    let url: string|null =\n        this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n    if (url.length == 0) {\n      url = this._platformLocation.pathname;\n    }\n    this._platformLocation.pushState(state, title, url);\n  }\n\n  replaceState(state: any, title: string, path: string, queryParams: string) {\n    let url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n    if (url.length == 0) {\n      url = this._platformLocation.pathname;\n    }\n    this._platformLocation.replaceState(state, title, url);\n  }\n\n  forward(): void { this._platformLocation.forward(); }\n\n  back(): void { this._platformLocation.back(); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n\n\n\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\n@Injectable()\nexport class PathLocationStrategy extends LocationStrategy {\n  private _baseHref: string;\n\n  constructor(\n      private _platformLocation: PlatformLocation,\n      @Optional() @Inject(APP_BASE_HREF) href?: string) {\n    super();\n\n    if (href == null) {\n      href = this._platformLocation.getBaseHrefFromDOM();\n    }\n\n    if (href == null) {\n      throw new Error(\n          `No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.`);\n    }\n\n    this._baseHref = href;\n  }\n\n  onPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n\n  getBaseHref(): string { return this._baseHref; }\n\n  prepareExternalUrl(internal: string): string {\n    return Location.joinWithSlash(this._baseHref, internal);\n  }\n\n  path(includeHash: boolean = false): string {\n    const pathname = this._platformLocation.pathname +\n        Location.normalizeQueryParams(this._platformLocation.search);\n    const hash = this._platformLocation.hash;\n    return hash && includeHash ? `${pathname}${hash}` : pathname;\n  }\n\n  pushState(state: any, title: string, url: string, queryParams: string) {\n    const externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.pushState(state, title, externalUrl);\n  }\n\n  replaceState(state: any, title: string, url: string, queryParams: string) {\n    const externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.replaceState(state, title, externalUrl);\n  }\n\n  forward(): void { this._platformLocation.forward(); }\n\n  back(): void { this._platformLocation.back(); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\n\nconst u = undefined;\n\nfunction plural(n: number): number {\n  let i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n  if (i === 1 && v === 0) return 1;\n  return 5;\n}\n\nexport default [\n  'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n  [\n    ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  ],\n  u,\n  [\n    ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n    ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n      'October', 'November', 'December'\n    ]\n  ],\n  u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n  ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n  ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n  ['.', ',', ';', '%', '+', '-', 'E', 'Ã', 'â°', 'â', 'NaN', ':'],\n  ['#,##0.###', '#,##0%', 'Â¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\nexport const LOCALE_DATA: {[localeId: string]: any} = {};\n\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n *\n * @publicApi\n */\n// The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\nexport function registerLocaleData(data: any, localeId?: string | any, extraData?: any): void {\n  if (typeof localeId !== 'string') {\n    extraData = localeId;\n    localeId = data[LocaleDataIndex.LocaleId];\n  }\n\n  localeId = localeId.toLowerCase().replace(/_/g, '-');\n\n  LOCALE_DATA[localeId] = data;\n\n  if (extraData) {\n    LOCALE_DATA[localeId][LocaleDataIndex.ExtraData] = extraData;\n  }\n}\n\n/**\n * Index of each type of locale data from the locale data array\n */\nexport const enum LocaleDataIndex {\n  LocaleId = 0,\n  DayPeriodsFormat,\n  DayPeriodsStandalone,\n  DaysFormat,\n  DaysStandalone,\n  MonthsFormat,\n  MonthsStandalone,\n  Eras,\n  FirstDayOfWeek,\n  WeekendRange,\n  DateFormat,\n  TimeFormat,\n  DateTimeFormat,\n  NumberSymbols,\n  NumberFormats,\n  CurrencySymbol,\n  CurrencyName,\n  Currencies,\n  PluralCase,\n  ExtraData\n}\n\n/**\n * Index of each type of locale data from the extra locale data array\n */\nexport const enum ExtraLocaleDataIndex {\n  ExtraDayPeriodFormats = 0,\n  ExtraDayPeriodStandalone,\n  ExtraDayPeriodsRules\n}\n\n/**\n * Index of each value in currency data (used to describe CURRENCIES_EN in currencies.ts)\n */\nexport const enum CurrencyIndex {Symbol = 0, SymbolNarrow, NbOfDigits}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\n\nexport type CurrenciesSymbols = [string] | [string | undefined, string];\n\n/** @internal */\nexport const CURRENCIES_EN:\n    {[code: string]: CurrenciesSymbols | [string | undefined, string | undefined, number]} = {\n      'ADP': [undefined, undefined, 0],\n      'AFN': [undefined, undefined, 0],\n      'ALL': [undefined, undefined, 0],\n      'AMD': [undefined, undefined, 0],\n      'AOA': [undefined, 'Kz'],\n      'ARS': [undefined, '$'],\n      'AUD': ['A$', '$'],\n      'BAM': [undefined, 'KM'],\n      'BBD': [undefined, '$'],\n      'BDT': [undefined, 'à§³'],\n      'BHD': [undefined, undefined, 3],\n      'BIF': [undefined, undefined, 0],\n      'BMD': [undefined, '$'],\n      'BND': [undefined, '$'],\n      'BOB': [undefined, 'Bs'],\n      'BRL': ['R$'],\n      'BSD': [undefined, '$'],\n      'BWP': [undefined, 'P'],\n      'BYN': [undefined, 'Ñ.', 2],\n      'BYR': [undefined, undefined, 0],\n      'BZD': [undefined, '$'],\n      'CAD': ['CA$', '$', 2],\n      'CHF': [undefined, undefined, 2],\n      'CLF': [undefined, undefined, 4],\n      'CLP': [undefined, '$', 0],\n      'CNY': ['CNÂ¥', 'Â¥'],\n      'COP': [undefined, '$', 0],\n      'CRC': [undefined, 'â¡', 2],\n      'CUC': [undefined, '$'],\n      'CUP': [undefined, '$'],\n      'CZK': [undefined, 'KÄ', 2],\n      'DJF': [undefined, undefined, 0],\n      'DKK': [undefined, 'kr', 2],\n      'DOP': [undefined, '$'],\n      'EGP': [undefined, 'EÂ£'],\n      'ESP': [undefined, 'â§', 0],\n      'EUR': ['â¬'],\n      'FJD': [undefined, '$'],\n      'FKP': [undefined, 'Â£'],\n      'GBP': ['Â£'],\n      'GEL': [undefined, 'â¾'],\n      'GIP': [undefined, 'Â£'],\n      'GNF': [undefined, 'FG', 0],\n      'GTQ': [undefined, 'Q'],\n      'GYD': [undefined, '$', 0],\n      'HKD': ['HK$', '$'],\n      'HNL': [undefined, 'L'],\n      'HRK': [undefined, 'kn'],\n      'HUF': [undefined, 'Ft', 2],\n      'IDR': [undefined, 'Rp', 0],\n      'ILS': ['âª'],\n      'INR': ['â¹'],\n      'IQD': [undefined, undefined, 0],\n      'IRR': [undefined, undefined, 0],\n      'ISK': [undefined, 'kr', 0],\n      'ITL': [undefined, undefined, 0],\n      'JMD': [undefined, '$'],\n      'JOD': [undefined, undefined, 3],\n      'JPY': ['Â¥', undefined, 0],\n      'KHR': [undefined, 'á'],\n      'KMF': [undefined, 'CF', 0],\n      'KPW': [undefined, 'â©', 0],\n      'KRW': ['â©', undefined, 0],\n      'KWD': [undefined, undefined, 3],\n      'KYD': [undefined, '$'],\n      'KZT': [undefined, 'â¸'],\n      'LAK': [undefined, 'â­', 0],\n      'LBP': [undefined, 'LÂ£', 0],\n      'LKR': [undefined, 'Rs'],\n      'LRD': [undefined, '$'],\n      'LTL': [undefined, 'Lt'],\n      'LUF': [undefined, undefined, 0],\n      'LVL': [undefined, 'Ls'],\n      'LYD': [undefined, undefined, 3],\n      'MGA': [undefined, 'Ar', 0],\n      'MGF': [undefined, undefined, 0],\n      'MMK': [undefined, 'K', 0],\n      'MNT': [undefined, 'â®', 0],\n      'MRO': [undefined, undefined, 0],\n      'MUR': [undefined, 'Rs', 0],\n      'MXN': ['MX$', '$'],\n      'MYR': [undefined, 'RM'],\n      'NAD': [undefined, '$'],\n      'NGN': [undefined, 'â¦'],\n      'NIO': [undefined, 'C$'],\n      'NOK': [undefined, 'kr', 2],\n      'NPR': [undefined, 'Rs'],\n      'NZD': ['NZ$', '$'],\n      'OMR': [undefined, undefined, 3],\n      'PHP': [undefined, 'â±'],\n      'PKR': [undefined, 'Rs', 0],\n      'PLN': [undefined, 'zÅ'],\n      'PYG': [undefined, 'â²', 0],\n      'RON': [undefined, 'lei'],\n      'RSD': [undefined, undefined, 0],\n      'RUB': [undefined, 'â½'],\n      'RUR': [undefined, 'Ñ.'],\n      'RWF': [undefined, 'RF', 0],\n      'SBD': [undefined, '$'],\n      'SEK': [undefined, 'kr', 2],\n      'SGD': [undefined, '$'],\n      'SHP': [undefined, 'Â£'],\n      'SLL': [undefined, undefined, 0],\n      'SOS': [undefined, undefined, 0],\n      'SRD': [undefined, '$'],\n      'SSP': [undefined, 'Â£'],\n      'STD': [undefined, undefined, 0],\n      'STN': [undefined, 'Db'],\n      'SYP': [undefined, 'Â£', 0],\n      'THB': [undefined, 'à¸¿'],\n      'TMM': [undefined, undefined, 0],\n      'TND': [undefined, undefined, 3],\n      'TOP': [undefined, 'T$'],\n      'TRL': [undefined, undefined, 0],\n      'TRY': [undefined, 'âº'],\n      'TTD': [undefined, '$'],\n      'TWD': ['NT$', '$', 2],\n      'TZS': [undefined, undefined, 0],\n      'UAH': [undefined, 'â´'],\n      'UGX': [undefined, undefined, 0],\n      'USD': ['$'],\n      'UYI': [undefined, undefined, 0],\n      'UYU': [undefined, '$'],\n      'UZS': [undefined, undefined, 0],\n      'VEF': [undefined, 'Bs'],\n      'VND': ['â«', undefined, 0],\n      'VUV': [undefined, undefined, 0],\n      'XAF': ['FCFA', undefined, 0],\n      'XCD': ['EC$', '$'],\n      'XOF': ['CFA', undefined, 0],\n      'XPF': ['CFPF', undefined, 0],\n      'YER': [undefined, undefined, 0],\n      'ZAR': [undefined, 'R'],\n      'ZMK': [undefined, undefined, 0],\n      'ZMW': [undefined, 'ZK'],\n      'ZWD': [undefined, undefined, 0]\n    };\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport localeEn from './locale_en';\nimport {LOCALE_DATA, LocaleDataIndex, ExtraLocaleDataIndex, CurrencyIndex} from './locale_data';\nimport {CURRENCIES_EN, CurrenciesSymbols} from './currencies';\n\n/**\n * The different format styles that can be used to represent numbers.\n * Used by the function {@link getLocaleNumberFormat}.\n *\n * @publicApi\n */\nexport enum NumberFormatStyle {\n  Decimal,\n  Percent,\n  Currency,\n  Scientific\n}\n\n/** @publicApi */\nexport enum Plural {\n  Zero = 0,\n  One = 1,\n  Two = 2,\n  Few = 3,\n  Many = 4,\n  Other = 5,\n}\n\n/**\n * Some languages use two different forms of strings (standalone and format) depending on the\n * context.\n * Typically the standalone version is the nominative form of the word, and the format version is in\n * the genitive.\n * See [the CLDR website](http://cldr.unicode.org/translation/date-time) for more information.\n *\n * @publicApi\n */\nexport enum FormStyle {\n  Format,\n  Standalone\n}\n\n/**\n * Multiple widths are available for translations: narrow (1 character), abbreviated (3 characters),\n * wide (full length), and short (2 characters, only for days).\n *\n * For example the day `Sunday` will be:\n * - Narrow: `S`\n * - Short: `Su`\n * - Abbreviated: `Sun`\n * - Wide: `Sunday`\n *\n * @publicApi\n */\nexport enum TranslationWidth {\n  Narrow,\n  Abbreviated,\n  Wide,\n  Short\n}\n\n/**\n * Multiple widths are available for formats: short (minimal amount of data), medium (small amount\n * of data), long (complete amount of data), full (complete amount of data and extra information).\n *\n * For example the date-time formats for the english locale will be:\n *  - `'short'`: `'M/d/yy, h:mm a'` (e.g. `6/15/15, 9:03 AM`)\n *  - `'medium'`: `'MMM d, y, h:mm:ss a'` (e.g. `Jun 15, 2015, 9:03:01 AM`)\n *  - `'long'`: `'MMMM d, y, h:mm:ss a z'` (e.g. `June 15, 2015 at 9:03:01 AM GMT+1`)\n *  - `'full'`: `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (e.g. `Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`)\n *\n * @publicApi\n */\nexport enum FormatWidth {\n  Short,\n  Medium,\n  Long,\n  Full\n}\n\n/**\n * Number symbol that can be used to replace placeholders in number patterns.\n * The placeholders are based on english values:\n *\n * | Name                   | Example for en-US | Meaning                                     |\n * |------------------------|-------------------|---------------------------------------------|\n * | decimal                | 2,345`.`67        | decimal separator                           |\n * | group                  | 2`,`345.67        | grouping separator, typically for thousands |\n * | plusSign               | `+`23             | the plus sign used with numbers             |\n * | minusSign              | `-`23             | the minus sign used with numbers            |\n * | percentSign            | 23.4`%`           | the percent sign (out of 100)               |\n * | perMille               | 234`â°`            | the permille sign (out of 1000)             |\n * | exponential            | 1.2`E`3           | used in computers for 1.2Ã10Â³.              |\n * | superscriptingExponent | 1.2`Ã`103         | human-readable format of exponential        |\n * | infinity               | `â`               | used in +â and -â.                          |\n * | nan                    | `NaN`             | \"not a number\".                             |\n * | timeSeparator          | 10`:`52           | symbol used between time units              |\n * | currencyDecimal        | $2,345`.`67       | decimal separator, fallback to \"decimal\"    |\n * | currencyGroup          | $2`,`345.67       | grouping separator, fallback to \"group\"     |\n *\n * @publicApi\n */\nexport enum NumberSymbol {\n  Decimal,\n  Group,\n  List,\n  PercentSign,\n  PlusSign,\n  MinusSign,\n  Exponential,\n  SuperscriptingExponent,\n  PerMille,\n  Infinity,\n  NaN,\n  TimeSeparator,\n  CurrencyDecimal,\n  CurrencyGroup\n}\n\n/**\n * The value for each day of the week, based on the en-US locale\n *\n * @publicApi\n */\nexport enum WeekDay {\n  Sunday = 0,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday\n}\n\n/**\n * The locale id for the chosen locale (e.g `en-GB`).\n *\n * @publicApi\n */\nexport function getLocaleId(locale: string): string {\n  return findLocaleData(locale)[LocaleDataIndex.LocaleId];\n}\n\n/**\n * Periods of the day (e.g. `[AM, PM]` for en-US).\n *\n * @publicApi\n */\nexport function getLocaleDayPeriods(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): [string, string] {\n  const data = findLocaleData(locale);\n  const amPmData = <[\n    string, string\n  ][][]>[data[LocaleDataIndex.DayPeriodsFormat], data[LocaleDataIndex.DayPeriodsStandalone]];\n  const amPm = getLastDefinedValue(amPmData, formStyle);\n  return getLastDefinedValue(amPm, width);\n}\n\n/**\n * Days of the week for the Gregorian calendar (e.g. `[Sunday, Monday, ... Saturday]` for en-US).\n *\n * @publicApi\n */\nexport function getLocaleDayNames(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): string[] {\n  const data = findLocaleData(locale);\n  const daysData =\n      <string[][][]>[data[LocaleDataIndex.DaysFormat], data[LocaleDataIndex.DaysStandalone]];\n  const days = getLastDefinedValue(daysData, formStyle);\n  return getLastDefinedValue(days, width);\n}\n\n/**\n * Months of the year for the Gregorian calendar (e.g. `[January, February, ...]` for en-US).\n *\n * @publicApi\n */\nexport function getLocaleMonthNames(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): string[] {\n  const data = findLocaleData(locale);\n  const monthsData =\n      <string[][][]>[data[LocaleDataIndex.MonthsFormat], data[LocaleDataIndex.MonthsStandalone]];\n  const months = getLastDefinedValue(monthsData, formStyle);\n  return getLastDefinedValue(months, width);\n}\n\n/**\n * Eras for the Gregorian calendar (e.g. AD/BC).\n *\n * @publicApi\n */\nexport function getLocaleEraNames(locale: string, width: TranslationWidth): [string, string] {\n  const data = findLocaleData(locale);\n  const erasData = <[string, string][]>data[LocaleDataIndex.Eras];\n  return getLastDefinedValue(erasData, width);\n}\n\n/**\n * First day of the week for this locale, based on english days (Sunday = 0, Monday = 1, ...).\n * For example in french the value would be 1 because the first day of the week is Monday.\n *\n * @publicApi\n */\nexport function getLocaleFirstDayOfWeek(locale: string): WeekDay {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.FirstDayOfWeek];\n}\n\n/**\n * Range of days in the week that represent the week-end for this locale, based on english days\n * (Sunday = 0, Monday = 1, ...).\n * For example in english the value would be [6,0] for Saturday to Sunday.\n *\n * @publicApi\n */\nexport function getLocaleWeekEndRange(locale: string): [WeekDay, WeekDay] {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.WeekendRange];\n}\n\n/**\n * Date format that depends on the locale.\n *\n * There are four basic date formats:\n * - `full` should contain long-weekday (EEEE), year (y), long-month (MMMM), day (d).\n *\n *  For example, English uses `EEEE, MMMM d, y`, corresponding to a date like\n *  \"Tuesday, September 14, 1999\".\n *\n * - `long` should contain year, long-month, day.\n *\n *  For example, `MMMM d, y`, corresponding to a date like \"September 14, 1999\".\n *\n * - `medium` should contain year, abbreviated-month (MMM), day.\n *\n *  For example, `MMM d, y`, corresponding to a date like \"Sep 14, 1999\".\n *  For languages that do not use abbreviated months, use the numeric month (MM/M). For example,\n *  `y/MM/dd`, corresponding to a date like \"1999/09/14\".\n *\n * - `short` should contain year, numeric-month (MM/M), and day.\n *\n *  For example, `M/d/yy`, corresponding to a date like \"9/14/99\".\n *\n * @publicApi\n */\nexport function getLocaleDateFormat(locale: string, width: FormatWidth): string {\n  const data = findLocaleData(locale);\n  return getLastDefinedValue(data[LocaleDataIndex.DateFormat], width);\n}\n\n/**\n * Time format that depends on the locale.\n *\n * The standard formats include four basic time formats:\n * - `full` should contain hour (h/H), minute (mm), second (ss), and zone (zzzz).\n * - `long` should contain hour, minute, second, and zone (z)\n * - `medium` should contain hour, minute, second.\n * - `short` should contain hour, minute.\n *\n * Note: The patterns depend on whether the main country using your language uses 12-hour time or\n * not:\n * - For 12-hour time, use a pattern like `hh:mm a` using h to mean a 12-hour clock cycle running\n * 1 through 12 (midnight plus 1 minute is 12:01), or using K to mean a 12-hour clock cycle\n * running 0 through 11 (midnight plus 1 minute is 0:01).\n * - For 24-hour time, use a pattern like `HH:mm` using H to mean a 24-hour clock cycle running 0\n * through 23 (midnight plus 1 minute is 0:01), or using k to mean a 24-hour clock cycle running\n * 1 through 24 (midnight plus 1 minute is 24:01).\n *\n * @publicApi\n */\nexport function getLocaleTimeFormat(locale: string, width: FormatWidth): string {\n  const data = findLocaleData(locale);\n  return getLastDefinedValue(data[LocaleDataIndex.TimeFormat], width);\n}\n\n/**\n * Date-time format that depends on the locale.\n *\n * The date-time pattern shows how to combine separate patterns for date (represented by {1})\n * and time (represented by {0}) into a single pattern. It usually doesn't need to be changed.\n * What you want to pay attention to are:\n * - possibly removing a space for languages that don't use it, such as many East Asian languages\n * - possibly adding a comma, other punctuation, or a combining word\n *\n * For example:\n * - English uses `{1} 'at' {0}` or `{1}, {0}` (depending on date style), while Japanese uses\n *  `{1}{0}`.\n * - An English formatted date-time using the combining pattern `{1}, {0}` could be\n *  `Dec 10, 2010, 3:59:49 PM`. Notice the comma and space between the date portion and the time\n *  portion.\n *\n * There are four formats (`full`, `long`, `medium`, `short`); the determination of which to use\n * is normally based on the date style. For example, if the date has a full month and weekday\n * name, the full combining pattern will be used to combine that with a time. If the date has\n * numeric month, the short version of the combining pattern will be used to combine that with a\n * time. English uses `{1} 'at' {0}` for full and long styles, and `{1}, {0}` for medium and short\n * styles.\n *\n * @publicApi\n */\nexport function getLocaleDateTimeFormat(locale: string, width: FormatWidth): string {\n  const data = findLocaleData(locale);\n  const dateTimeFormatData = <string[]>data[LocaleDataIndex.DateTimeFormat];\n  return getLastDefinedValue(dateTimeFormatData, width);\n}\n\n/**\n * Number symbol that can be used to replace placeholders in number formats.\n * See {@link NumberSymbol} for more information.\n *\n * @publicApi\n */\nexport function getLocaleNumberSymbol(locale: string, symbol: NumberSymbol): string {\n  const data = findLocaleData(locale);\n  const res = data[LocaleDataIndex.NumberSymbols][symbol];\n  if (typeof res === 'undefined') {\n    if (symbol === NumberSymbol.CurrencyDecimal) {\n      return data[LocaleDataIndex.NumberSymbols][NumberSymbol.Decimal];\n    } else if (symbol === NumberSymbol.CurrencyGroup) {\n      return data[LocaleDataIndex.NumberSymbols][NumberSymbol.Group];\n    }\n  }\n  return res;\n}\n\n/**\n * Number format that depends on the locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,67\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders;\n * they stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders; for example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the Number Symbols for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | Â¤ | This will be replaced by a currency symbol, such as $ or USD. |\n * | % | This marks a percent format. The % symbol may change position, but must be retained. |\n * | E | This marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * You can find more information\n * [on the CLDR website](http://cldr.unicode.org/translation/number-patterns)\n *\n * @publicApi\n */\nexport function getLocaleNumberFormat(locale: string, type: NumberFormatStyle): string {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.NumberFormats][type];\n}\n\n/**\n * The symbol used to represent the currency for the main country using this locale (e.g. $ for\n * the locale en-US).\n * The symbol will be `null` if the main country cannot be determined.\n *\n * @publicApi\n */\nexport function getLocaleCurrencySymbol(locale: string): string|null {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.CurrencySymbol] || null;\n}\n\n/**\n * The name of the currency for the main country using this locale (e.g. USD for the locale\n * en-US).\n * The name will be `null` if the main country cannot be determined.\n *\n * @publicApi\n */\nexport function getLocaleCurrencyName(locale: string): string|null {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.CurrencyName] || null;\n}\n\n/**\n * Returns the currency values for the locale\n */\nfunction getLocaleCurrencies(locale: string): {[code: string]: CurrenciesSymbols} {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.Currencies];\n}\n\n/**\n * The locale plural function used by ICU expressions to determine the plural case to use.\n * See {@link NgPlural} for more information.\n *\n * @publicApi\n */\nexport function getLocalePluralCase(locale: string): (value: number) => Plural {\n  const data = findLocaleData(locale);\n  return data[LocaleDataIndex.PluralCase];\n}\n\nfunction checkFullData(data: any) {\n  if (!data[LocaleDataIndex.ExtraData]) {\n    throw new Error(\n        `Missing extra locale data for the locale \"${data[LocaleDataIndex.LocaleId]}\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.`);\n  }\n}\n\n/**\n * Rules used to determine which day period to use (See `dayPeriods` below).\n * The rules can either be an array or a single value. If it's an array, consider it as \"from\"\n * and \"to\". If it's a single value then it means that the period is only valid at this exact\n * value.\n * There is always the same number of rules as the number of day periods, which means that the\n * first rule is applied to the first day period and so on.\n * You should fallback to AM/PM when there are no rules available.\n *\n * Note: this is only available if you load the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale\n * data.\n *\n * @publicApi\n */\nexport function getLocaleExtraDayPeriodRules(locale: string): (Time | [Time, Time])[] {\n  const data = findLocaleData(locale);\n  checkFullData(data);\n  const rules = data[LocaleDataIndex.ExtraData][ExtraLocaleDataIndex.ExtraDayPeriodsRules] || [];\n  return rules.map((rule: string | [string, string]) => {\n    if (typeof rule === 'string') {\n      return extractTime(rule);\n    }\n    return [extractTime(rule[0]), extractTime(rule[1])];\n  });\n}\n\n/**\n * Day Periods indicate roughly how the day is broken up in different languages (e.g. morning,\n * noon, afternoon, midnight, ...).\n * You should use the function {@link getLocaleExtraDayPeriodRules} to determine which period to\n * use.\n * You should fallback to AM/PM when there are no day periods available.\n *\n * Note: this is only available if you load the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale\n * data.\n *\n * @publicApi\n */\nexport function getLocaleExtraDayPeriods(\n    locale: string, formStyle: FormStyle, width: TranslationWidth): string[] {\n  const data = findLocaleData(locale);\n  checkFullData(data);\n  const dayPeriodsData = <string[][][]>[\n    data[LocaleDataIndex.ExtraData][ExtraLocaleDataIndex.ExtraDayPeriodFormats],\n    data[LocaleDataIndex.ExtraData][ExtraLocaleDataIndex.ExtraDayPeriodStandalone]\n  ];\n  const dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n  return getLastDefinedValue(dayPeriods, width) || [];\n}\n\n/**\n * Returns the first value that is defined in an array, going backwards.\n *\n * To avoid repeating the same data (e.g. when \"format\" and \"standalone\" are the same) we only\n * add the first one to the locale data arrays, the other ones are only defined when different.\n * We use this function to retrieve the first defined value.\n *\n * @publicApi\n */\nfunction getLastDefinedValue<T>(data: T[], index: number): T {\n  for (let i = index; i > -1; i--) {\n    if (typeof data[i] !== 'undefined') {\n      return data[i];\n    }\n  }\n  throw new Error('Locale data API: locale data undefined');\n}\n\n/**\n * A representation of the time with hours and minutes\n *\n * @publicApi\n */\nexport type Time = {\n  hours: number,\n  minutes: number\n};\n\n/**\n * Extract the hours and minutes from a string like \"15:45\"\n */\nfunction extractTime(time: string): Time {\n  const [h, m] = time.split(':');\n  return {hours: +h, minutes: +m};\n}\n\n/**\n * Finds the locale data for a locale id\n *\n * @publicApi\n */\nexport function findLocaleData(locale: string): any {\n  const normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n\n  let match = LOCALE_DATA[normalizedLocale];\n  if (match) {\n    return match;\n  }\n\n  // let's try to find a parent locale\n  const parentLocale = normalizedLocale.split('-')[0];\n  match = LOCALE_DATA[parentLocale];\n\n  if (match) {\n    return match;\n  }\n\n  if (parentLocale === 'en') {\n    return localeEn;\n  }\n\n  throw new Error(`Missing locale data for the locale \"${locale}\".`);\n}\n\n/**\n * Returns the currency symbol for a given currency code, or the code if no symbol available\n * (e.g.: format narrow = $, format wide = US$, code = USD)\n * If no locale is provided, it uses the locale \"en\" by default\n *\n * @publicApi\n */\nexport function getCurrencySymbol(code: string, format: 'wide' | 'narrow', locale = 'en'): string {\n  const currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n  const symbolNarrow = currency[CurrencyIndex.SymbolNarrow];\n\n  if (format === 'narrow' && typeof symbolNarrow === 'string') {\n    return symbolNarrow;\n  }\n\n  return currency[CurrencyIndex.Symbol] || code;\n}\n\n// Most currencies have cents, that's why the default is 2\nconst DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n\n/**\n * Returns the number of decimal digits for the given currency.\n * Its value depends upon the presence of cents in that particular currency.\n *\n * @publicApi\n */\nexport function getNumberOfCurrencyDigits(code: string): number {\n  let digits;\n  const currency = CURRENCIES_EN[code];\n  if (currency) {\n    digits = currency[CurrencyIndex.NbOfDigits];\n  }\n  return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FormStyle, FormatWidth, NumberSymbol, Time, TranslationWidth, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleDayNames, getLocaleDayPeriods, getLocaleEraNames, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocaleId, getLocaleMonthNames, getLocaleNumberSymbol, getLocaleTimeFormat} from './locale_data_api';\n\nexport const ISO8601_DATE_REGEX =\n    /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n//    1        2       3         4          5          6          7          8  9     10      11\nconst NAMED_FORMATS: {[localeId: string]: {[format: string]: string}} = {};\nconst DATE_FORMATS_SPLIT =\n    /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\n\nenum ZoneWidth {\n  Short,\n  ShortGMT,\n  Long,\n  Extended\n}\n\nenum DateType {\n  FullYear,\n  Month,\n  Date,\n  Hours,\n  Minutes,\n  Seconds,\n  FractionalSeconds,\n  Day\n}\n\nenum TranslationType {\n  DayPeriods,\n  Days,\n  Months,\n  Eras\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `value` is a Date, a number (milliseconds since UTC epoch) or an ISO string\n *   (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. See {@link DatePipe} for more\n *   details.\n * - `locale` is a `string` defining the locale to use.\n * - `timezone` to be used for formatting. It understands UTC/GMT and the continental US time zone\n *   abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).\n *   If not specified, host system settings are used.\n *\n * See {@link DatePipe} for more details.\n *\n * @publicApi\n */\nexport function formatDate(\n    value: string | number | Date, format: string, locale: string, timezone?: string): string {\n  let date = toDate(value);\n  const namedFormat = getNamedFormat(locale, format);\n  format = namedFormat || format;\n\n  let parts: string[] = [];\n  let match;\n  while (format) {\n    match = DATE_FORMATS_SPLIT.exec(format);\n    if (match) {\n      parts = parts.concat(match.slice(1));\n      const part = parts.pop();\n      if (!part) {\n        break;\n      }\n      format = part;\n    } else {\n      parts.push(format);\n      break;\n    }\n  }\n\n  let dateTimezoneOffset = date.getTimezoneOffset();\n  if (timezone) {\n    dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    date = convertTimezoneToLocal(date, timezone, true);\n  }\n\n  let text = '';\n  parts.forEach(value => {\n    const dateFormatter = getDateFormatter(value);\n    text += dateFormatter ?\n        dateFormatter(date, locale, dateTimezoneOffset) :\n        value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n  });\n\n  return text;\n}\n\nfunction getNamedFormat(locale: string, format: string): string {\n  const localeId = getLocaleId(locale);\n  NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};\n\n  if (NAMED_FORMATS[localeId][format]) {\n    return NAMED_FORMATS[localeId][format];\n  }\n\n  let formatValue = '';\n  switch (format) {\n    case 'shortDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\n      break;\n    case 'mediumDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\n      break;\n    case 'longDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\n      break;\n    case 'fullDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\n      break;\n    case 'shortTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\n      break;\n    case 'mediumTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\n      break;\n    case 'longTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\n      break;\n    case 'fullTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\n      break;\n    case 'short':\n      const shortTime = getNamedFormat(locale, 'shortTime');\n      const shortDate = getNamedFormat(locale, 'shortDate');\n      formatValue = formatDateTime(\n          getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\n      break;\n    case 'medium':\n      const mediumTime = getNamedFormat(locale, 'mediumTime');\n      const mediumDate = getNamedFormat(locale, 'mediumDate');\n      formatValue = formatDateTime(\n          getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\n      break;\n    case 'long':\n      const longTime = getNamedFormat(locale, 'longTime');\n      const longDate = getNamedFormat(locale, 'longDate');\n      formatValue =\n          formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\n      break;\n    case 'full':\n      const fullTime = getNamedFormat(locale, 'fullTime');\n      const fullDate = getNamedFormat(locale, 'fullDate');\n      formatValue =\n          formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\n      break;\n  }\n  if (formatValue) {\n    NAMED_FORMATS[localeId][format] = formatValue;\n  }\n  return formatValue;\n}\n\nfunction formatDateTime(str: string, opt_values: string[]) {\n  if (opt_values) {\n    str = str.replace(/\\{([^}]+)}/g, function(match, key) {\n      return (opt_values != null && key in opt_values) ? opt_values[key] : match;\n    });\n  }\n  return str;\n}\n\nfunction padNumber(\n    num: number, digits: number, minusSign = '-', trim?: boolean, negWrap?: boolean): string {\n  let neg = '';\n  if (num < 0 || (negWrap && num <= 0)) {\n    if (negWrap) {\n      num = -num + 1;\n    } else {\n      num = -num;\n      neg = minusSign;\n    }\n  }\n  let strNum = String(num);\n  while (strNum.length < digits) {\n    strNum = '0' + strNum;\n  }\n  if (trim) {\n    strNum = strNum.substr(strNum.length - digits);\n  }\n  return neg + strNum;\n}\n\nfunction formatFractionalSeconds(milliseconds: number, digits: number): string {\n  const strMs = padNumber(milliseconds, 3);\n  return strMs.substr(0, digits);\n}\n\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n */\nfunction dateGetter(\n    name: DateType, size: number, offset: number = 0, trim = false,\n    negWrap = false): DateFormatter {\n  return function(date: Date, locale: string): string {\n    let part = getDatePart(name, date);\n    if (offset > 0 || part > -offset) {\n      part += offset;\n    }\n\n    if (name === DateType.Hours) {\n      if (part === 0 && offset === -12) {\n        part = 12;\n      }\n    } else if (name === DateType.FractionalSeconds) {\n      return formatFractionalSeconds(part, size);\n    }\n\n    const localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n    return padNumber(part, size, localeMinus, trim, negWrap);\n  };\n}\n\nfunction getDatePart(part: DateType, date: Date): number {\n  switch (part) {\n    case DateType.FullYear:\n      return date.getFullYear();\n    case DateType.Month:\n      return date.getMonth();\n    case DateType.Date:\n      return date.getDate();\n    case DateType.Hours:\n      return date.getHours();\n    case DateType.Minutes:\n      return date.getMinutes();\n    case DateType.Seconds:\n      return date.getSeconds();\n    case DateType.FractionalSeconds:\n      return date.getMilliseconds();\n    case DateType.Day:\n      return date.getDay();\n    default:\n      throw new Error(`Unknown DateType value \"${part}\".`);\n  }\n}\n\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n */\nfunction dateStrGetter(\n    name: TranslationType, width: TranslationWidth, form: FormStyle = FormStyle.Format,\n    extended = false): DateFormatter {\n  return function(date: Date, locale: string): string {\n    return getDateTranslation(date, locale, name, width, form, extended);\n  };\n}\n\n/**\n * Returns the locale translation of a date for a given form, type and width\n */\nfunction getDateTranslation(\n    date: Date, locale: string, name: TranslationType, width: TranslationWidth, form: FormStyle,\n    extended: boolean) {\n  switch (name) {\n    case TranslationType.Months:\n      return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n    case TranslationType.Days:\n      return getLocaleDayNames(locale, form, width)[date.getDay()];\n    case TranslationType.DayPeriods:\n      const currentHours = date.getHours();\n      const currentMinutes = date.getMinutes();\n      if (extended) {\n        const rules = getLocaleExtraDayPeriodRules(locale);\n        const dayPeriods = getLocaleExtraDayPeriods(locale, form, width);\n        let result;\n        rules.forEach((rule: Time | [Time, Time], index: number) => {\n          if (Array.isArray(rule)) {\n            // morning, afternoon, evening, night\n            const {hours: hoursFrom, minutes: minutesFrom} = rule[0];\n            const {hours: hoursTo, minutes: minutesTo} = rule[1];\n            if (currentHours >= hoursFrom && currentMinutes >= minutesFrom &&\n                (currentHours < hoursTo ||\n                 (currentHours === hoursTo && currentMinutes < minutesTo))) {\n              result = dayPeriods[index];\n            }\n          } else {  // noon or midnight\n            const {hours, minutes} = rule;\n            if (hours === currentHours && minutes === currentMinutes) {\n              result = dayPeriods[index];\n            }\n          }\n        });\n        if (result) {\n          return result;\n        }\n      }\n      // if no rules for the day periods, we use am/pm by default\n      return getLocaleDayPeriods(locale, form, <TranslationWidth>width)[currentHours < 12 ? 0 : 1];\n    case TranslationType.Eras:\n      return getLocaleEraNames(locale, <TranslationWidth>width)[date.getFullYear() <= 0 ? 0 : 1];\n    default:\n      // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n      // However Closure Compiler does not understand that and reports an error in typed mode.\n      // The `throw new Error` below works around the problem, and the unexpected: never variable\n      // makes sure tsc still checks this code is unreachable.\n      const unexpected: never = name;\n      throw new Error(`unexpected translation type ${unexpected}`);\n  }\n}\n\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n */\nfunction timeZoneGetter(width: ZoneWidth): DateFormatter {\n  return function(date: Date, locale: string, offset: number) {\n    const zone = -1 * offset;\n    const minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n    const hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n    switch (width) {\n      case ZoneWidth.Short:\n        return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) +\n            padNumber(Math.abs(zone % 60), 2, minusSign);\n      case ZoneWidth.ShortGMT:\n        return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 1, minusSign);\n      case ZoneWidth.Long:\n        return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n            padNumber(Math.abs(zone % 60), 2, minusSign);\n      case ZoneWidth.Extended:\n        if (offset === 0) {\n          return 'Z';\n        } else {\n          return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n              padNumber(Math.abs(zone % 60), 2, minusSign);\n        }\n      default:\n        throw new Error(`Unknown zone width \"${width}\"`);\n    }\n  };\n}\n\nconst JANUARY = 0;\nconst THURSDAY = 4;\nfunction getFirstThursdayOfYear(year: number) {\n  const firstDayOfYear = (new Date(year, JANUARY, 1)).getDay();\n  return new Date(\n      year, 0, 1 + ((firstDayOfYear <= THURSDAY) ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\n\nfunction getThursdayThisWeek(datetime: Date) {\n  return new Date(\n      datetime.getFullYear(), datetime.getMonth(),\n      datetime.getDate() + (THURSDAY - datetime.getDay()));\n}\n\nfunction weekGetter(size: number, monthBased = false): DateFormatter {\n  return function(date: Date, locale: string) {\n    let result;\n    if (monthBased) {\n      const nbDaysBefore1stDayOfMonth =\n          new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n      const today = date.getDate();\n      result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n    } else {\n      const firstThurs = getFirstThursdayOfYear(date.getFullYear());\n      const thisThurs = getThursdayThisWeek(date);\n      const diff = thisThurs.getTime() - firstThurs.getTime();\n      result = 1 + Math.round(diff / 6.048e8);  // 6.048e8 ms per week\n    }\n\n    return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  };\n}\n\ntype DateFormatter = (date: Date, locale: string, offset?: number) => string;\n\nconst DATE_FORMATS: {[format: string]: DateFormatter} = {};\n\n// Based on CLDR formats:\n// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n// See also explanations: http://cldr.unicode.org/translation/date-time\n// TODO(ocombe): support all missing cldr formats: Y, U, Q, D, F, e, c, j, J, C, A, v, V, X, x\nfunction getDateFormatter(format: string): DateFormatter|null {\n  if (DATE_FORMATS[format]) {\n    return DATE_FORMATS[format];\n  }\n  let formatter;\n  switch (format) {\n    // Era name (AD/BC)\n    case 'G':\n    case 'GG':\n    case 'GGG':\n      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);\n      break;\n    case 'GGGG':\n      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);\n      break;\n    case 'GGGGG':\n      formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);\n      break;\n\n    // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n    case 'y':\n      formatter = dateGetter(DateType.FullYear, 1, 0, false, true);\n      break;\n    // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n    case 'yy':\n      formatter = dateGetter(DateType.FullYear, 2, 0, true, true);\n      break;\n    // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n    case 'yyy':\n      formatter = dateGetter(DateType.FullYear, 3, 0, false, true);\n      break;\n    // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n    case 'yyyy':\n      formatter = dateGetter(DateType.FullYear, 4, 0, false, true);\n      break;\n\n    // Month of the year (1-12), numeric\n    case 'M':\n    case 'L':\n      formatter = dateGetter(DateType.Month, 1, 1);\n      break;\n    case 'MM':\n    case 'LL':\n      formatter = dateGetter(DateType.Month, 2, 1);\n      break;\n\n    // Month of the year (January, ...), string, format\n    case 'MMM':\n      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);\n      break;\n    case 'MMMM':\n      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);\n      break;\n    case 'MMMMM':\n      formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);\n      break;\n\n    // Month of the year (January, ...), string, standalone\n    case 'LLL':\n      formatter =\n          dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);\n      break;\n    case 'LLLL':\n      formatter =\n          dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);\n      break;\n    case 'LLLLL':\n      formatter =\n          dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);\n      break;\n\n    // Week of the year (1, ... 52)\n    case 'w':\n      formatter = weekGetter(1);\n      break;\n    case 'ww':\n      formatter = weekGetter(2);\n      break;\n\n    // Week of the month (1, ...)\n    case 'W':\n      formatter = weekGetter(1, true);\n      break;\n\n    // Day of the month (1-31)\n    case 'd':\n      formatter = dateGetter(DateType.Date, 1);\n      break;\n    case 'dd':\n      formatter = dateGetter(DateType.Date, 2);\n      break;\n\n    // Day of the Week\n    case 'E':\n    case 'EE':\n    case 'EEE':\n      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);\n      break;\n    case 'EEEE':\n      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);\n      break;\n    case 'EEEEE':\n      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);\n      break;\n    case 'EEEEEE':\n      formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);\n      break;\n\n    // Generic period of the day (am-pm)\n    case 'a':\n    case 'aa':\n    case 'aaa':\n      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);\n      break;\n    case 'aaaa':\n      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);\n      break;\n    case 'aaaaa':\n      formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);\n      break;\n\n    // Extended period of the day (midnight, at night, ...), standalone\n    case 'b':\n    case 'bb':\n    case 'bbb':\n      formatter = dateStrGetter(\n          TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\n      break;\n    case 'bbbb':\n      formatter = dateStrGetter(\n          TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);\n      break;\n    case 'bbbbb':\n      formatter = dateStrGetter(\n          TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);\n      break;\n\n    // Extended period of the day (midnight, night, ...), standalone\n    case 'B':\n    case 'BB':\n    case 'BBB':\n      formatter = dateStrGetter(\n          TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);\n      break;\n    case 'BBBB':\n      formatter =\n          dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);\n      break;\n    case 'BBBBB':\n      formatter = dateStrGetter(\n          TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);\n      break;\n\n    // Hour in AM/PM, (1-12)\n    case 'h':\n      formatter = dateGetter(DateType.Hours, 1, -12);\n      break;\n    case 'hh':\n      formatter = dateGetter(DateType.Hours, 2, -12);\n      break;\n\n    // Hour of the day (0-23)\n    case 'H':\n      formatter = dateGetter(DateType.Hours, 1);\n      break;\n    // Hour in day, padded (00-23)\n    case 'HH':\n      formatter = dateGetter(DateType.Hours, 2);\n      break;\n\n    // Minute of the hour (0-59)\n    case 'm':\n      formatter = dateGetter(DateType.Minutes, 1);\n      break;\n    case 'mm':\n      formatter = dateGetter(DateType.Minutes, 2);\n      break;\n\n    // Second of the minute (0-59)\n    case 's':\n      formatter = dateGetter(DateType.Seconds, 1);\n      break;\n    case 'ss':\n      formatter = dateGetter(DateType.Seconds, 2);\n      break;\n\n    // Fractional second\n    case 'S':\n      formatter = dateGetter(DateType.FractionalSeconds, 1);\n      break;\n    case 'SS':\n      formatter = dateGetter(DateType.FractionalSeconds, 2);\n      break;\n    case 'SSS':\n      formatter = dateGetter(DateType.FractionalSeconds, 3);\n      break;\n\n\n    // Timezone ISO8601 short format (-0430)\n    case 'Z':\n    case 'ZZ':\n    case 'ZZZ':\n      formatter = timeZoneGetter(ZoneWidth.Short);\n      break;\n    // Timezone ISO8601 extended format (-04:30)\n    case 'ZZZZZ':\n      formatter = timeZoneGetter(ZoneWidth.Extended);\n      break;\n\n    // Timezone GMT short format (GMT+4)\n    case 'O':\n    case 'OO':\n    case 'OOO':\n    // Should be location, but fallback to format O instead because we don't have the data yet\n    case 'z':\n    case 'zz':\n    case 'zzz':\n      formatter = timeZoneGetter(ZoneWidth.ShortGMT);\n      break;\n    // Timezone GMT long format (GMT+0430)\n    case 'OOOO':\n    case 'ZZZZ':\n    // Should be location, but fallback to format O instead because we don't have the data yet\n    case 'zzzz':\n      formatter = timeZoneGetter(ZoneWidth.Long);\n      break;\n    default:\n      return null;\n  }\n  DATE_FORMATS[format] = formatter;\n  return formatter;\n}\n\nfunction timezoneToOffset(timezone: string, fallback: number): number {\n  // Support: IE 9-11 only, Edge 13-15+\n  // IE/Edge do not \"understand\" colon (`:`) in timezone\n  timezone = timezone.replace(/:/g, '');\n  const requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n  return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\n\nfunction addDateMinutes(date: Date, minutes: number) {\n  date = new Date(date.getTime());\n  date.setMinutes(date.getMinutes() + minutes);\n  return date;\n}\n\nfunction convertTimezoneToLocal(date: Date, timezone: string, reverse: boolean): Date {\n  const reverseValue = reverse ? -1 : 1;\n  const dateTimezoneOffset = date.getTimezoneOffset();\n  const timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n  return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n\n/**\n * Converts a value to date.\n *\n * Supported input formats:\n * - `Date`\n * - number: timestamp\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n *   Note: ISO strings without time return a date without timeoffset.\n *\n * Throws if unable to convert to a date.\n */\nexport function toDate(value: string | number | Date): Date {\n  if (isDate(value)) {\n    return value;\n  }\n\n  if (typeof value === 'number' && !isNaN(value)) {\n    return new Date(value);\n  }\n\n  if (typeof value === 'string') {\n    value = value.trim();\n\n    const parsedNb = parseFloat(value);\n\n    // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\n    if (!isNaN(value as any - parsedNb)) {\n      return new Date(parsedNb);\n    }\n\n    if (/^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n      /* For ISO Strings without time the day, month and year must be extracted from the ISO String\n      before Date creation to avoid time offset and errors in the new Date.\n      If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n      date, some browsers (e.g. IE 9) will throw an invalid Date error.\n      If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n      is applied.\n      Note: ISO months are 0 for January, 1 for February, ... */\n      const [y, m, d] = value.split('-').map((val: string) => +val);\n      return new Date(y, m - 1, d);\n    }\n\n    let match: RegExpMatchArray|null;\n    if (match = value.match(ISO8601_DATE_REGEX)) {\n      return isoStringToDate(match);\n    }\n  }\n\n  const date = new Date(value as any);\n  if (!isDate(date)) {\n    throw new Error(`Unable to convert \"${value}\" into a date`);\n  }\n  return date;\n}\n\n/**\n * Converts a date in ISO8601 to a Date.\n * Used instead of `Date.parse` because of browser discrepancies.\n */\nexport function isoStringToDate(match: RegExpMatchArray): Date {\n  const date = new Date(0);\n  let tzHour = 0;\n  let tzMin = 0;\n\n  // match[8] means that the string contains \"Z\" (UTC) or a timezone like \"+01:00\" or \"+0100\"\n  const dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n  const timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n  // if there is a timezone defined like \"+01:00\" or \"+0100\"\n  if (match[9]) {\n    tzHour = Number(match[9] + match[10]);\n    tzMin = Number(match[9] + match[11]);\n  }\n  dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n  const h = Number(match[4] || 0) - tzHour;\n  const m = Number(match[5] || 0) - tzMin;\n  const s = Number(match[6] || 0);\n  const ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n  timeSetter.call(date, h, m, s, ms);\n  return date;\n}\n\nexport function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value.valueOf());\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NumberFormatStyle, NumberSymbol, getLocaleNumberFormat, getLocaleNumberSymbol, getNumberOfCurrencyDigits} from './locale_data_api';\n\nexport const NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\nconst MAX_DIGITS = 22;\nconst DECIMAL_SEP = '.';\nconst ZERO_CHAR = '0';\nconst PATTERN_SEP = ';';\nconst GROUP_SEP = ',';\nconst DIGIT_CHAR = '#';\nconst CURRENCY_CHAR = 'Â¤';\nconst PERCENT_CHAR = '%';\n\n/**\n * Transforms a number to a locale string based on a style and a format\n */\nfunction formatNumberToLocaleString(\n    value: number, pattern: ParsedNumberFormat, locale: string, groupSymbol: NumberSymbol,\n    decimalSymbol: NumberSymbol, digitsInfo?: string, isPercent = false): string {\n  let formattedText = '';\n  let isZero = false;\n\n  if (!isFinite(value)) {\n    formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\n  } else {\n    let parsedNumber = parseNumber(value);\n\n    if (isPercent) {\n      parsedNumber = toPercent(parsedNumber);\n    }\n\n    let minInt = pattern.minInt;\n    let minFraction = pattern.minFrac;\n    let maxFraction = pattern.maxFrac;\n\n    if (digitsInfo) {\n      const parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n      if (parts === null) {\n        throw new Error(`${digitsInfo} is not a valid digit info`);\n      }\n      const minIntPart = parts[1];\n      const minFractionPart = parts[3];\n      const maxFractionPart = parts[5];\n      if (minIntPart != null) {\n        minInt = parseIntAutoRadix(minIntPart);\n      }\n      if (minFractionPart != null) {\n        minFraction = parseIntAutoRadix(minFractionPart);\n      }\n      if (maxFractionPart != null) {\n        maxFraction = parseIntAutoRadix(maxFractionPart);\n      } else if (minFractionPart != null && minFraction > maxFraction) {\n        maxFraction = minFraction;\n      }\n    }\n\n    roundNumber(parsedNumber, minFraction, maxFraction);\n\n    let digits = parsedNumber.digits;\n    let integerLen = parsedNumber.integerLen;\n    const exponent = parsedNumber.exponent;\n    let decimals = [];\n    isZero = digits.every(d => !d);\n\n    // pad zeros for small numbers\n    for (; integerLen < minInt; integerLen++) {\n      digits.unshift(0);\n    }\n\n    // pad zeros for small numbers\n    for (; integerLen < 0; integerLen++) {\n      digits.unshift(0);\n    }\n\n    // extract decimals digits\n    if (integerLen > 0) {\n      decimals = digits.splice(integerLen, digits.length);\n    } else {\n      decimals = digits;\n      digits = [0];\n    }\n\n    // format the integer digits with grouping separators\n    const groups = [];\n    if (digits.length >= pattern.lgSize) {\n      groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n    }\n\n    while (digits.length > pattern.gSize) {\n      groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n    }\n\n    if (digits.length) {\n      groups.unshift(digits.join(''));\n    }\n\n    formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n\n    // append the decimal digits\n    if (decimals.length) {\n      formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n    }\n\n    if (exponent) {\n      formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\n    }\n  }\n\n  if (value < 0 && !isZero) {\n    formattedText = pattern.negPre + formattedText + pattern.negSuf;\n  } else {\n    formattedText = pattern.posPre + formattedText + pattern.posSuf;\n  }\n\n  return formattedText;\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `currency` is the string that represents the currency, it can be its symbol or its name.\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `digitInfo` See {@link DecimalPipe} for more details.\n *\n * @publicApi\n */\nexport function formatCurrency(\n    value: number, locale: string, currency: string, currencyCode?: string,\n    digitsInfo?: string): string {\n  const format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);\n  const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n\n  pattern.minFrac = getNumberOfCurrencyDigits(currencyCode !);\n  pattern.maxFrac = pattern.minFrac;\n\n  const res = formatNumberToLocaleString(\n      value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);\n  return res\n      .replace(CURRENCY_CHAR, currency)\n      // if we have 2 time the currency character, the second one is ignored\n      .replace(CURRENCY_CHAR, '');\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as a percentage according to locale rules.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `digitInfo` See {@link DecimalPipe} for more details.\n *\n * @publicApi\n */\nexport function formatPercent(value: number, locale: string, digitsInfo?: string): string {\n  const format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);\n  const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  const res = formatNumberToLocaleString(\n      value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);\n  return res.replace(\n      new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the locale.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `digitInfo` See {@link DecimalPipe} for more details.\n *\n * @publicApi\n */\nexport function formatNumber(value: number, locale: string, digitsInfo?: string): string {\n  const format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);\n  const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  return formatNumberToLocaleString(\n      value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);\n}\n\ninterface ParsedNumberFormat {\n  minInt: number;\n  // the minimum number of digits required in the fraction part of the number\n  minFrac: number;\n  // the maximum number of digits required in the fraction part of the number\n  maxFrac: number;\n  // the prefix for a positive number\n  posPre: string;\n  // the suffix for a positive number\n  posSuf: string;\n  // the prefix for a negative number (e.g. `-` or `(`))\n  negPre: string;\n  // the suffix for a negative number (e.g. `)`)\n  negSuf: string;\n  // number of digits in each group of separated digits\n  gSize: number;\n  // number of digits in the last group of digits before the decimal separator\n  lgSize: number;\n}\n\nfunction parseNumberFormat(format: string, minusSign = '-'): ParsedNumberFormat {\n  const p = {\n    minInt: 1,\n    minFrac: 0,\n    maxFrac: 0,\n    posPre: '',\n    posSuf: '',\n    negPre: '',\n    negSuf: '',\n    gSize: 0,\n    lgSize: 0\n  };\n\n  const patternParts = format.split(PATTERN_SEP);\n  const positive = patternParts[0];\n  const negative = patternParts[1];\n\n  const positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ?\n      positive.split(DECIMAL_SEP) :\n      [\n        positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1),\n        positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)\n      ],\n        integer = positiveParts[0], fraction = positiveParts[1] || '';\n\n  p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));\n\n  for (let i = 0; i < fraction.length; i++) {\n    const ch = fraction.charAt(i);\n    if (ch === ZERO_CHAR) {\n      p.minFrac = p.maxFrac = i + 1;\n    } else if (ch === DIGIT_CHAR) {\n      p.maxFrac = i + 1;\n    } else {\n      p.posSuf += ch;\n    }\n  }\n\n  const groups = integer.split(GROUP_SEP);\n  p.gSize = groups[1] ? groups[1].length : 0;\n  p.lgSize = (groups[2] || groups[1]) ? (groups[2] || groups[1]).length : 0;\n\n  if (negative) {\n    const trunkLen = positive.length - p.posPre.length - p.posSuf.length,\n          pos = negative.indexOf(DIGIT_CHAR);\n\n    p.negPre = negative.substr(0, pos).replace(/'/g, '');\n    p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');\n  } else {\n    p.negPre = minusSign + p.posPre;\n    p.negSuf = p.posSuf;\n  }\n\n  return p;\n}\n\ninterface ParsedNumber {\n  // an array of digits containing leading zeros as necessary\n  digits: number[];\n  // the exponent for numbers that would need more than `MAX_DIGITS` digits in `d`\n  exponent: number;\n  // the number of the digits in `d` that are to the left of the decimal point\n  integerLen: number;\n}\n\n// Transforms a parsed number into a percentage by multiplying it by 100\nfunction toPercent(parsedNumber: ParsedNumber): ParsedNumber {\n  // if the number is 0, don't do anything\n  if (parsedNumber.digits[0] === 0) {\n    return parsedNumber;\n  }\n\n  // Getting the current number of decimals\n  const fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\n  if (parsedNumber.exponent) {\n    parsedNumber.exponent += 2;\n  } else {\n    if (fractionLen === 0) {\n      parsedNumber.digits.push(0, 0);\n    } else if (fractionLen === 1) {\n      parsedNumber.digits.push(0);\n    }\n    parsedNumber.integerLen += 2;\n  }\n\n  return parsedNumber;\n}\n\n/**\n * Parses a number.\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n */\nfunction parseNumber(num: number): ParsedNumber {\n  let numStr = Math.abs(num) + '';\n  let exponent = 0, digits, integerLen;\n  let i, j, zeros;\n\n  // Decimal point?\n  if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n    numStr = numStr.replace(DECIMAL_SEP, '');\n  }\n\n  // Exponential form?\n  if ((i = numStr.search(/e/i)) > 0) {\n    // Work out the exponent.\n    if (integerLen < 0) integerLen = i;\n    integerLen += +numStr.slice(i + 1);\n    numStr = numStr.substring(0, i);\n  } else if (integerLen < 0) {\n    // There was no decimal point or exponent so it is an integer.\n    integerLen = numStr.length;\n  }\n\n  // Count the number of leading zeros.\n  for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */\n  }\n\n  if (i === (zeros = numStr.length)) {\n    // The digits are all zero.\n    digits = [0];\n    integerLen = 1;\n  } else {\n    // Count the number of trailing zeros\n    zeros--;\n    while (numStr.charAt(zeros) === ZERO_CHAR) zeros--;\n\n    // Trailing zeros are insignificant so ignore them\n    integerLen -= i;\n    digits = [];\n    // Convert string to array of digits without leading/trailing zeros.\n    for (j = 0; i <= zeros; i++, j++) {\n      digits[j] = Number(numStr.charAt(i));\n    }\n  }\n\n  // If the number overflows the maximum allowed digits then use an exponent.\n  if (integerLen > MAX_DIGITS) {\n    digits = digits.splice(0, MAX_DIGITS - 1);\n    exponent = integerLen - 1;\n    integerLen = 1;\n  }\n\n  return {digits, exponent, integerLen};\n}\n\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n */\nfunction roundNumber(parsedNumber: ParsedNumber, minFrac: number, maxFrac: number) {\n  if (minFrac > maxFrac) {\n    throw new Error(\n        `The minimum number of digits after fraction (${minFrac}) is higher than the maximum (${maxFrac}).`);\n  }\n\n  let digits = parsedNumber.digits;\n  let fractionLen = digits.length - parsedNumber.integerLen;\n  const fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n\n  // The index of the digit to where rounding is to occur\n  let roundAt = fractionSize + parsedNumber.integerLen;\n  let digit = digits[roundAt];\n\n  if (roundAt > 0) {\n    // Drop fractional digits beyond `roundAt`\n    digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n\n    // Set non-fractional digits beyond `roundAt` to 0\n    for (let j = roundAt; j < digits.length; j++) {\n      digits[j] = 0;\n    }\n  } else {\n    // We rounded to zero so reset the parsedNumber\n    fractionLen = Math.max(0, fractionLen);\n    parsedNumber.integerLen = 1;\n    digits.length = Math.max(1, roundAt = fractionSize + 1);\n    digits[0] = 0;\n    for (let i = 1; i < roundAt; i++) digits[i] = 0;\n  }\n\n  if (digit >= 5) {\n    if (roundAt - 1 < 0) {\n      for (let k = 0; k > roundAt; k--) {\n        digits.unshift(0);\n        parsedNumber.integerLen++;\n      }\n      digits.unshift(1);\n      parsedNumber.integerLen++;\n    } else {\n      digits[roundAt - 1]++;\n    }\n  }\n\n  // Pad out with zeros to get the required fraction length\n  for (; fractionLen < Math.max(0, fractionSize); fractionLen++) digits.push(0);\n\n  let dropTrailingZeros = fractionSize !== 0;\n  // Minimal length = nb of decimals required + current nb of integers\n  // Any number besides that is optional and can be removed if it's a trailing 0\n  const minLen = minFrac + parsedNumber.integerLen;\n  // Do any carrying, e.g. a digit was rounded up to 10\n  const carry = digits.reduceRight(function(carry, d, i, digits) {\n    d = d + carry;\n    digits[i] = d < 10 ? d : d - 10;  // d % 10\n    if (dropTrailingZeros) {\n      // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\n      if (digits[i] === 0 && i >= minLen) {\n        digits.pop();\n      } else {\n        dropTrailingZeros = false;\n      }\n    }\n    return d >= 10 ? 1 : 0;  // Math.floor(d / 10);\n  }, 0);\n  if (carry) {\n    digits.unshift(carry);\n    parsedNumber.integerLen++;\n  }\n}\n\nexport function parseIntAutoRadix(text: string): number {\n  const result: number = parseInt(text);\n  if (isNaN(result)) {\n    throw new Error('Invalid integer literal when parsing ' + text);\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, InjectionToken, LOCALE_ID, Optional} from '@angular/core';\nimport {Plural, getLocalePluralCase} from './locale_data_api';\n\n\n/**\n * @deprecated from v5\n */\nexport const DEPRECATED_PLURAL_FN = new InjectionToken<boolean>('UseV4Plurals');\n\n/**\n * @publicApi\n */\nexport abstract class NgLocalization {\n  abstract getPluralCategory(value: any, locale?: string): string;\n}\n\n\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n */\nexport function getPluralCategory(\n    value: number, cases: string[], ngLocalization: NgLocalization, locale?: string): string {\n  let key = `=${value}`;\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  key = ngLocalization.getPluralCategory(value, locale);\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  if (cases.indexOf('other') > -1) {\n    return 'other';\n  }\n\n  throw new Error(`No plural message found for value \"${value}\"`);\n}\n\n/**\n * Returns the plural case based on the locale\n *\n * @publicApi\n */\n@Injectable()\nexport class NgLocaleLocalization extends NgLocalization {\n  constructor(\n      @Inject(LOCALE_ID) protected locale: string,\n      /** @deprecated from v5 */\n      @Optional() @Inject(DEPRECATED_PLURAL_FN) protected deprecatedPluralFn?:\n          ((locale: string, value: number|string) => Plural)|null) {\n    super();\n  }\n\n  getPluralCategory(value: any, locale?: string): string {\n    const plural = this.deprecatedPluralFn ? this.deprecatedPluralFn(locale || this.locale, value) :\n                                             getLocalePluralCase(locale || this.locale)(value);\n\n    switch (plural) {\n      case Plural.Zero:\n        return 'zero';\n      case Plural.One:\n        return 'one';\n      case Plural.Two:\n        return 'two';\n      case Plural.Few:\n        return 'few';\n      case Plural.Many:\n        return 'many';\n      default:\n        return 'other';\n    }\n  }\n}\n\n/**\n * Returns the plural case based on the locale\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n * @publicApi\n */\nexport function getPluralCase(locale: string, nLike: number | string): Plural {\n  // TODO(vicb): lazy compute\n  if (typeof nLike === 'string') {\n    nLike = parseInt(<string>nLike, 10);\n  }\n  const n: number = nLike as number;\n  const nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n  const i = Math.floor(Math.abs(n));\n  const v = nDecimal.length;\n  const f = parseInt(nDecimal, 10);\n  const t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n\n  const lang = locale.split('-')[0].toLowerCase();\n\n  switch (lang) {\n    case 'af':\n    case 'asa':\n    case 'az':\n    case 'bem':\n    case 'bez':\n    case 'bg':\n    case 'brx':\n    case 'ce':\n    case 'cgg':\n    case 'chr':\n    case 'ckb':\n    case 'ee':\n    case 'el':\n    case 'eo':\n    case 'es':\n    case 'eu':\n    case 'fo':\n    case 'fur':\n    case 'gsw':\n    case 'ha':\n    case 'haw':\n    case 'hu':\n    case 'jgo':\n    case 'jmc':\n    case 'ka':\n    case 'kk':\n    case 'kkj':\n    case 'kl':\n    case 'ks':\n    case 'ksb':\n    case 'ky':\n    case 'lb':\n    case 'lg':\n    case 'mas':\n    case 'mgo':\n    case 'ml':\n    case 'mn':\n    case 'nb':\n    case 'nd':\n    case 'ne':\n    case 'nn':\n    case 'nnh':\n    case 'nyn':\n    case 'om':\n    case 'or':\n    case 'os':\n    case 'ps':\n    case 'rm':\n    case 'rof':\n    case 'rwk':\n    case 'saq':\n    case 'seh':\n    case 'sn':\n    case 'so':\n    case 'sq':\n    case 'ta':\n    case 'te':\n    case 'teo':\n    case 'tk':\n    case 'tr':\n    case 'ug':\n    case 'uz':\n    case 'vo':\n    case 'vun':\n    case 'wae':\n    case 'xog':\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'ak':\n    case 'ln':\n    case 'mg':\n    case 'pa':\n    case 'ti':\n      if (n === Math.floor(n) && n >= 0 && n <= 1) return Plural.One;\n      return Plural.Other;\n    case 'am':\n    case 'as':\n    case 'bn':\n    case 'fa':\n    case 'gu':\n    case 'hi':\n    case 'kn':\n    case 'mr':\n    case 'zu':\n      if (i === 0 || n === 1) return Plural.One;\n      return Plural.Other;\n    case 'ar':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10) return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99) return Plural.Many;\n      return Plural.Other;\n    case 'ast':\n    case 'ca':\n    case 'de':\n    case 'en':\n    case 'et':\n    case 'fi':\n    case 'fy':\n    case 'gl':\n    case 'it':\n    case 'nl':\n    case 'sv':\n    case 'sw':\n    case 'ur':\n    case 'yi':\n      if (i === 1 && v === 0) return Plural.One;\n      return Plural.Other;\n    case 'be':\n      if (n % 10 === 1 && !(n % 100 === 11)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n          !(n % 100 >= 12 && n % 100 <= 14))\n        return Plural.Few;\n      if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n          n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'br':\n      if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91)) return Plural.One;\n      if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92)) return Plural.Two;\n      if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n          !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n            n % 100 >= 90 && n % 100 <= 99))\n        return Plural.Few;\n      if (!(n === 0) && n % 1e6 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'bs':\n    case 'hr':\n    case 'sr':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n        return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n              !(i % 100 >= 12 && i % 100 <= 14) ||\n          f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n              !(f % 100 >= 12 && f % 100 <= 14))\n        return Plural.Few;\n      return Plural.Other;\n    case 'cs':\n    case 'sk':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0) return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'cy':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === 3) return Plural.Few;\n      if (n === 6) return Plural.Many;\n      return Plural.Other;\n    case 'da':\n      if (n === 1 || !(t === 0) && (i === 0 || i === 1)) return Plural.One;\n      return Plural.Other;\n    case 'dsb':\n    case 'hsb':\n      if (v === 0 && i % 100 === 1 || f % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2 || f % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n          f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ff':\n    case 'fr':\n    case 'hy':\n    case 'kab':\n      if (i === 0 || i === 1) return Plural.One;\n      return Plural.Other;\n    case 'fil':\n      if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n          v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n          !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n        return Plural.One;\n      return Plural.Other;\n    case 'ga':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === Math.floor(n) && n >= 3 && n <= 6) return Plural.Few;\n      if (n === Math.floor(n) && n >= 7 && n <= 10) return Plural.Many;\n      return Plural.Other;\n    case 'gd':\n      if (n === 1 || n === 11) return Plural.One;\n      if (n === 2 || n === 12) return Plural.Two;\n      if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19)) return Plural.Few;\n      return Plural.Other;\n    case 'gv':\n      if (v === 0 && i % 10 === 1) return Plural.One;\n      if (v === 0 && i % 10 === 2) return Plural.Two;\n      if (v === 0 &&\n          (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n        return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'he':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === 2 && v === 0) return Plural.Two;\n      if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'is':\n      if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0)) return Plural.One;\n      return Plural.Other;\n    case 'ksh':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'kw':\n    case 'naq':\n    case 'se':\n    case 'smn':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      return Plural.Other;\n    case 'lag':\n      if (n === 0) return Plural.Zero;\n      if ((i === 0 || i === 1) && !(n === 0)) return Plural.One;\n      return Plural.Other;\n    case 'lt':\n      if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n          !(n % 100 >= 11 && n % 100 <= 19))\n        return Plural.Few;\n      if (!(f === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'lv':\n    case 'prg':\n      if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n          v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n        return Plural.Zero;\n      if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n          !(v === 2) && f % 10 === 1)\n        return Plural.One;\n      return Plural.Other;\n    case 'mk':\n      if (v === 0 && i % 10 === 1 || f % 10 === 1) return Plural.One;\n      return Plural.Other;\n    case 'mt':\n      if (n === 1) return Plural.One;\n      if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n        return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19) return Plural.Many;\n      return Plural.Other;\n    case 'pl':\n      if (i === 1 && v === 0) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'pt':\n      if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2)) return Plural.One;\n      return Plural.Other;\n    case 'ro':\n      if (i === 1 && v === 0) return Plural.One;\n      if (!(v === 0) || n === 0 ||\n          !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ru':\n    case 'uk':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11)) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && i % 10 === 0 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'shi':\n      if (i === 0 || n === 1) return Plural.One;\n      if (n === Math.floor(n) && n >= 2 && n <= 10) return Plural.Few;\n      return Plural.Other;\n    case 'si':\n      if (n === 0 || n === 1 || i === 0 && f === 1) return Plural.One;\n      return Plural.Other;\n    case 'sl':\n      if (v === 0 && i % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n        return Plural.Few;\n      return Plural.Other;\n    case 'tzm':\n      if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n        return Plural.One;\n      return Plural.Other;\n    // When there is no specification, the default is always \"other\"\n    // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n    // > other (requiredâgeneral plural form â also used if the language only has a single form)\n    default:\n      return Plural.Other;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function parseCookieValue(cookieStr: string, name: string): string|null {\n  name = encodeURIComponent(name);\n  for (const cookie of cookieStr.split(';')) {\n    const eqIndex = cookie.indexOf('=');\n    const [cookieName, cookieValue]: string[] =\n        eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n    if (cookieName.trim() === name) {\n      return decodeURIComponent(cookieValue);\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, ElementRef, Input, IterableChanges, IterableDiffer, IterableDiffers, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer2, ÉµisListLikeIterable as isListLikeIterable, Éµstringify as stringify} from '@angular/core';\n\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n *\n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n *\n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * @description\n *\n * Adds and removes CSS classes on an HTML element.\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n * @publicApi\n */\n@Directive({selector: '[ngClass]'})\nexport class NgClass implements DoCheck {\n  // TODO(issue/24571): remove '!'.\n  private _iterableDiffer !: IterableDiffer<string>| null;\n  // TODO(issue/24571): remove '!'.\n  private _keyValueDiffer !: KeyValueDiffer<string, any>| null;\n  private _initialClasses: string[] = [];\n  // TODO(issue/24571): remove '!'.\n  private _rawClass !: string[] | Set<string>| {[klass: string]: any};\n\n  constructor(\n      private _iterableDiffers: IterableDiffers, private _keyValueDiffers: KeyValueDiffers,\n      private _ngEl: ElementRef, private _renderer: Renderer2) {}\n\n  @Input('class')\n  set klass(value: string) {\n    this._removeClasses(this._initialClasses);\n    this._initialClasses = typeof value === 'string' ? value.split(/\\s+/) : [];\n    this._applyClasses(this._initialClasses);\n    this._applyClasses(this._rawClass);\n  }\n\n  @Input()\n  set ngClass(value: string|string[]|Set<string>|{[klass: string]: any}) {\n    this._removeClasses(this._rawClass);\n    this._applyClasses(this._initialClasses);\n\n    this._iterableDiffer = null;\n    this._keyValueDiffer = null;\n\n    this._rawClass = typeof value === 'string' ? value.split(/\\s+/) : value;\n\n    if (this._rawClass) {\n      if (isListLikeIterable(this._rawClass)) {\n        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n      } else {\n        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n      }\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this._iterableDiffer) {\n      const iterableChanges = this._iterableDiffer.diff(this._rawClass as string[]);\n      if (iterableChanges) {\n        this._applyIterableChanges(iterableChanges);\n      }\n    } else if (this._keyValueDiffer) {\n      const keyValueChanges = this._keyValueDiffer.diff(this._rawClass as{[k: string]: any});\n      if (keyValueChanges) {\n        this._applyKeyValueChanges(keyValueChanges);\n      }\n    }\n  }\n\n  private _applyKeyValueChanges(changes: KeyValueChanges<string, any>): void {\n    changes.forEachAddedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachRemovedItem((record) => {\n      if (record.previousValue) {\n        this._toggleClass(record.key, false);\n      }\n    });\n  }\n\n  private _applyIterableChanges(changes: IterableChanges<string>): void {\n    changes.forEachAddedItem((record) => {\n      if (typeof record.item === 'string') {\n        this._toggleClass(record.item, true);\n      } else {\n        throw new Error(\n            `NgClass can only toggle CSS classes expressed as strings, got ${stringify(record.item)}`);\n      }\n    });\n\n    changes.forEachRemovedItem((record) => this._toggleClass(record.item, false));\n  }\n\n  /**\n   * Applies a collection of CSS classes to the DOM element.\n   *\n   * For argument of type Set and Array CSS class names contained in those collections are always\n   * added.\n   * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n   * for truthy and removed for falsy).\n   */\n  private _applyClasses(rawClassVal: string[]|Set<string>|{[klass: string]: any}) {\n    if (rawClassVal) {\n      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n        (<any>rawClassVal).forEach((klass: string) => this._toggleClass(klass, true));\n      } else {\n        Object.keys(rawClassVal).forEach(klass => this._toggleClass(klass, !!rawClassVal[klass]));\n      }\n    }\n  }\n\n  /**\n   * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n   * purposes.\n   */\n  private _removeClasses(rawClassVal: string[]|Set<string>|{[klass: string]: any}) {\n    if (rawClassVal) {\n      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n        (<any>rawClassVal).forEach((klass: string) => this._toggleClass(klass, false));\n      } else {\n        Object.keys(rawClassVal).forEach(klass => this._toggleClass(klass, false));\n      }\n    }\n  }\n\n  private _toggleClass(klass: string, enabled: boolean): void {\n    klass = klass.trim();\n    if (klass) {\n      klass.split(/\\s+/g).forEach(klass => {\n        if (enabled) {\n          this._renderer.addClass(this._ngEl.nativeElement, klass);\n        } else {\n          this._renderer.removeClass(this._ngEl.nativeElement, klass);\n        }\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentFactoryResolver, ComponentRef, Directive, Injector, Input, NgModuleFactory, NgModuleRef, OnChanges, OnDestroy, SimpleChanges, StaticProvider, Type, ViewContainerRef} from '@angular/core';\n\n\n/**\n * Instantiates a single {@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n *\n * @usageNotes\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n *\n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n *\n * ### Syntax\n *\n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n *\n * ### A simple example\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n\n * A more complete example with ngModuleFactory:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n *\n * @publicApi\n * @ngModule CommonModule\n */\n@Directive({selector: '[ngComponentOutlet]'})\nexport class NgComponentOutlet implements OnChanges, OnDestroy {\n  // TODO(issue/24571): remove '!'.\n  @Input() ngComponentOutlet !: Type<any>;\n  // TODO(issue/24571): remove '!'.\n  @Input() ngComponentOutletInjector !: Injector;\n  // TODO(issue/24571): remove '!'.\n  @Input() ngComponentOutletContent !: any[][];\n  // TODO(issue/24571): remove '!'.\n  @Input() ngComponentOutletNgModuleFactory !: NgModuleFactory<any>;\n\n  private _componentRef: ComponentRef<any>|null = null;\n  private _moduleRef: NgModuleRef<any>|null = null;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._viewContainerRef.clear();\n    this._componentRef = null;\n\n    if (this.ngComponentOutlet) {\n      const elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n\n      if (changes['ngComponentOutletNgModuleFactory']) {\n        if (this._moduleRef) this._moduleRef.destroy();\n\n        if (this.ngComponentOutletNgModuleFactory) {\n          const parentModule = elInjector.get(NgModuleRef);\n          this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n        } else {\n          this._moduleRef = null;\n        }\n      }\n\n      const componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                                                         elInjector.get(ComponentFactoryResolver);\n\n      const componentFactory =\n          componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n\n      this._componentRef = this._viewContainerRef.createComponent(\n          componentFactory, this._viewContainerRef.length, elInjector,\n          this.ngComponentOutletContent);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._moduleRef) this._moduleRef.destroy();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, Directive, DoCheck, EmbeddedViewRef, Input, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDiffers, NgIterable, TemplateRef, TrackByFunction, ViewContainerRef, forwardRef, isDevMode} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport class NgForOfContext<T> {\n  constructor(\n      public $implicit: T, public ngForOf: NgIterable<T>, public index: number,\n      public count: number) {}\n\n  get first(): boolean { return this.index === 0; }\n\n  get last(): boolean { return this.index === this.count - 1; }\n\n  get even(): boolean { return this.index % 2 === 0; }\n\n  get odd(): boolean { return !this.even; }\n}\n\n/**\n * The `NgForOf` directive instantiates a template once per item from an iterable. The context\n * for each instantiated template inherits from the outer context with the given loop variable\n * set to the current item from the iterable.\n *\n * @usageNotes\n *\n * ### Local Variables\n *\n * `NgForOf` provides several exported values that can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * ### Change Propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n * * Otherwise, the DOM element for that item will remain the same.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n *\n * It is possible for the identities of elements in the iterator to change while the data does not.\n * This can happen, for example, if the iterator produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted). This is an expensive operation and should\n * be avoided if possible.\n *\n * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.\n * `trackBy` takes a function which has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * ### Syntax\n *\n * - `<li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>`\n *\n * With `<ng-template>` element:\n *\n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * ### Example\n *\n * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n * example.\n *\n * @ngModule CommonModule\n * @publicApi\n */\n@Directive({selector: '[ngFor][ngForOf]'})\nexport class NgForOf<T> implements DoCheck {\n  @Input()\n  set ngForOf(ngForOf: NgIterable<T>) {\n    this._ngForOf = ngForOf;\n    this._ngForOfDirty = true;\n  }\n  @Input()\n  set ngForTrackBy(fn: TrackByFunction<T>) {\n    if (isDevMode() && fn != null && typeof fn !== 'function') {\n      // TODO(vicb): use a log service once there is a public one available\n      if (<any>console && <any>console.warn) {\n        console.warn(\n            `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\n            `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.`);\n      }\n    }\n    this._trackByFn = fn;\n  }\n\n  get ngForTrackBy(): TrackByFunction<T> { return this._trackByFn; }\n\n  // TODO(issue/24571): remove '!'.\n  private _ngForOf !: NgIterable<T>;\n  private _ngForOfDirty: boolean = true;\n  private _differ: IterableDiffer<T>|null = null;\n  // TODO(issue/24571): remove '!'.\n  private _trackByFn !: TrackByFunction<T>;\n\n  constructor(\n      private _viewContainer: ViewContainerRef, private _template: TemplateRef<NgForOfContext<T>>,\n      private _differs: IterableDiffers) {}\n\n  @Input()\n  set ngForTemplate(value: TemplateRef<NgForOfContext<T>>) {\n    // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n    // The current type is too restrictive; a template that just uses index, for example,\n    // should be acceptable.\n    if (value) {\n      this._template = value;\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this._ngForOfDirty) {\n      this._ngForOfDirty = false;\n      // React on ngForOf changes only once all inputs have been initialized\n      const value = this._ngForOf;\n      if (!this._differ && value) {\n        try {\n          this._differ = this._differs.find(value).create(this.ngForTrackBy);\n        } catch (e) {\n          throw new Error(\n              `Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\n        }\n      }\n    }\n    if (this._differ) {\n      const changes = this._differ.diff(this._ngForOf);\n      if (changes) this._applyChanges(changes);\n    }\n  }\n\n  private _applyChanges(changes: IterableChanges<T>) {\n    const insertTuples: RecordViewTuple<T>[] = [];\n    changes.forEachOperation(\n        (item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n          if (item.previousIndex == null) {\n            const view = this._viewContainer.createEmbeddedView(\n                this._template, new NgForOfContext<T>(null !, this._ngForOf, -1, -1), currentIndex);\n            const tuple = new RecordViewTuple<T>(item, view);\n            insertTuples.push(tuple);\n          } else if (currentIndex == null) {\n            this._viewContainer.remove(adjustedPreviousIndex);\n          } else {\n            const view = this._viewContainer.get(adjustedPreviousIndex) !;\n            this._viewContainer.move(view, currentIndex);\n            const tuple = new RecordViewTuple(item, <EmbeddedViewRef<NgForOfContext<T>>>view);\n            insertTuples.push(tuple);\n          }\n        });\n\n    for (let i = 0; i < insertTuples.length; i++) {\n      this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n    }\n\n    for (let i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n      const viewRef = <EmbeddedViewRef<NgForOfContext<T>>>this._viewContainer.get(i);\n      viewRef.context.index = i;\n      viewRef.context.count = ilen;\n      viewRef.context.ngForOf = this._ngForOf;\n    }\n\n    changes.forEachIdentityChange((record: any) => {\n      const viewRef =\n          <EmbeddedViewRef<NgForOfContext<T>>>this._viewContainer.get(record.currentIndex);\n      viewRef.context.$implicit = record.item;\n    });\n  }\n\n  private _perViewChange(\n      view: EmbeddedViewRef<NgForOfContext<T>>, record: IterableChangeRecord<any>) {\n    view.context.$implicit = record.item;\n  }\n\n  /**\n   * Assert the correct type of the context for the template that `NgForOf` will render.\n   *\n   * The presence of this method is a signal to the Ivy template type check compiler that the\n   * `NgForOf` structural directive renders its template with a specific context type.\n   */\n  static ngTemplateContextGuard<T>(dir: NgForOf<T>, ctx: any): ctx is NgForOfContext<T> {\n    return true;\n  }\n}\n\nclass RecordViewTuple<T> {\n  constructor(public record: any, public view: EmbeddedViewRef<NgForOfContext<T>>) {}\n}\n\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EmbeddedViewRef, Input, TemplateRef, ViewContainerRef, Éµstringify as stringify} from '@angular/core';\n\n\n/**\n * Conditionally includes a template based on the value of an `expression`.\n *\n * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place\n * when expression is truthy or falsy respectively. Typically the:\n *  - `then` template is the inline template of `ngIf` unless bound to a different value.\n *  - `else` template is blank unless it is bound.\n *\n *\n * @usageNotes\n *\n * ### Most common usage\n *\n * The most common usage of the `ngIf` directive is to conditionally show the inline template as\n * seen in this example:\n * {@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * ### Showing an alternative template using `else`\n *\n * If it is necessary to display a template when the `expression` is falsy use the `else` template\n * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.\n * The template can be defined anywhere in the component view but is typically placed right after\n * `ngIf` for readability.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * ### Using non-inlined `then` template\n *\n * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using\n * a binding (just like `else`). Because `then` and `else` are bindings, the template references can\n * change at runtime as shown in this example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * ### Storing conditional result in a variable\n *\n * A common pattern is that we need to show a set of properties from the same object. If the\n * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against\n * dereferencing a `null` value. This is especially the case when waiting on async data such as\n * when using the `async` pipe as shown in following example:\n *\n * ```\n * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n * ```\n *\n * There are several inefficiencies in the above example:\n *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the\n *    example above.\n *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.\n *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.\n *  - We have to place the `async` pipe in parenthesis.\n *\n * A better way to do this is to use `ngIf` and store the result of the condition in a local\n * variable as shown in the the example below:\n *\n * {@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * Notice that:\n *  - We use only one `async` pipe and hence only one subscription gets created.\n *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.\n *  - The local `user` can then be bound repeatedly in a more efficient way.\n *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only\n *    display the data if `userStream` returns a value.\n *  - We can display an alternative template while waiting for the data.\n *\n * ### Syntax\n *\n * Simple form:\n * - `<div *ngIf=\"condition\">...</div>`\n * - `<ng-template [ngIf]=\"condition\"><div>...</div></ng-template>`\n *\n * Form with an else block:\n * ```\n * <div *ngIf=\"condition; else elseBlock\">...</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with a `then` and `else` block:\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>...</ng-template>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with storing the value locally:\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * @ngModule CommonModule\n * @publicApi\n */\n@Directive({selector: '[ngIf]'})\nexport class NgIf {\n  private _context: NgIfContext = new NgIfContext();\n  private _thenTemplateRef: TemplateRef<NgIfContext>|null = null;\n  private _elseTemplateRef: TemplateRef<NgIfContext>|null = null;\n  private _thenViewRef: EmbeddedViewRef<NgIfContext>|null = null;\n  private _elseViewRef: EmbeddedViewRef<NgIfContext>|null = null;\n\n  constructor(private _viewContainer: ViewContainerRef, templateRef: TemplateRef<NgIfContext>) {\n    this._thenTemplateRef = templateRef;\n  }\n\n  @Input()\n  set ngIf(condition: any) {\n    this._context.$implicit = this._context.ngIf = condition;\n    this._updateView();\n  }\n\n  @Input()\n  set ngIfThen(templateRef: TemplateRef<NgIfContext>|null) {\n    assertTemplate('ngIfThen', templateRef);\n    this._thenTemplateRef = templateRef;\n    this._thenViewRef = null;  // clear previous view if any.\n    this._updateView();\n  }\n\n  @Input()\n  set ngIfElse(templateRef: TemplateRef<NgIfContext>|null) {\n    assertTemplate('ngIfElse', templateRef);\n    this._elseTemplateRef = templateRef;\n    this._elseViewRef = null;  // clear previous view if any.\n    this._updateView();\n  }\n\n  private _updateView() {\n    if (this._context.$implicit) {\n      if (!this._thenViewRef) {\n        this._viewContainer.clear();\n        this._elseViewRef = null;\n        if (this._thenTemplateRef) {\n          this._thenViewRef =\n              this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n        }\n      }\n    } else {\n      if (!this._elseViewRef) {\n        this._viewContainer.clear();\n        this._thenViewRef = null;\n        if (this._elseTemplateRef) {\n          this._elseViewRef =\n              this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  public static ngIfUseIfTypeGuard: void;\n\n  /**\n   * Assert the correct type of the expression bound to the `ngIf` input within the template.\n   *\n   * The presence of this method is a signal to the Ivy template type check compiler that when the\n   * `NgIf` structural directive renders its template, the type of the expression bound to `ngIf`\n   * should be narrowed in some way. For `NgIf`, it is narrowed to be non-null, which allows the\n   * strictNullChecks feature of TypeScript to work with `NgIf`.\n   */\n  static ngTemplateGuard_ngIf<E>(dir: NgIf, expr: E): expr is NonNullable<E> { return true; }\n}\n\n/**\n * @publicApi\n */\nexport class NgIfContext {\n  public $implicit: any = null;\n  public ngIf: any = null;\n}\n\nfunction assertTemplate(property: string, templateRef: TemplateRef<any>| null): void {\n  const isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\n  if (!isTemplateRefOrNull) {\n    throw new Error(`${property} must be a TemplateRef, but received '${stringify(templateRef)}'.`);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\nexport class SwitchView {\n  private _created = false;\n\n  constructor(\n      private _viewContainerRef: ViewContainerRef, private _templateRef: TemplateRef<Object>) {}\n\n  create(): void {\n    this._created = true;\n    this._viewContainerRef.createEmbeddedView(this._templateRef);\n  }\n\n  destroy(): void {\n    this._created = false;\n    this._viewContainerRef.clear();\n  }\n\n  enforceState(created: boolean) {\n    if (created && !this._created) {\n      this.create();\n    } else if (!created && this._created) {\n      this.destroy();\n    }\n  }\n}\n\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n *     <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n * @description\n *\n * Adds / removes DOM sub-trees when the nest match expressions matches the switch expression.\n *\n * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n * switch expression.\n *\n * In other words:\n * - you define a container element (where you place the directive with a switch expression on the\n * `[ngSwitch]=\"...\"` attribute)\n * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n * root elements.\n *\n * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n * be preserved at the location.\n *\n * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n * expression is evaluated.\n * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n * stamped out.\n *\n * @publicApi\n */\n@Directive({selector: '[ngSwitch]'})\nexport class NgSwitch {\n  // TODO(issue/24571): remove '!'.\n  private _defaultViews !: SwitchView[];\n  private _defaultUsed = false;\n  private _caseCount = 0;\n  private _lastCaseCheckIndex = 0;\n  private _lastCasesMatched = false;\n  private _ngSwitch: any;\n\n  @Input()\n  set ngSwitch(newValue: any) {\n    this._ngSwitch = newValue;\n    if (this._caseCount === 0) {\n      this._updateDefaultCases(true);\n    }\n  }\n\n  /** @internal */\n  _addCase(): number { return this._caseCount++; }\n\n  /** @internal */\n  _addDefault(view: SwitchView) {\n    if (!this._defaultViews) {\n      this._defaultViews = [];\n    }\n    this._defaultViews.push(view);\n  }\n\n  /** @internal */\n  _matchCase(value: any): boolean {\n    const matched = value == this._ngSwitch;\n    this._lastCasesMatched = this._lastCasesMatched || matched;\n    this._lastCaseCheckIndex++;\n    if (this._lastCaseCheckIndex === this._caseCount) {\n      this._updateDefaultCases(!this._lastCasesMatched);\n      this._lastCaseCheckIndex = 0;\n      this._lastCasesMatched = false;\n    }\n    return matched;\n  }\n\n  private _updateDefaultCases(useDefault: boolean) {\n    if (this._defaultViews && useDefault !== this._defaultUsed) {\n      this._defaultUsed = useDefault;\n      for (let i = 0; i < this._defaultViews.length; i++) {\n        const defaultView = this._defaultViews[i];\n        defaultView.enforceState(useDefault);\n      }\n    }\n  }\n}\n\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * </container-element>\n *```\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgSwitch} when the\n * given expression evaluate to respectively the same/different value as the switch\n * expression.\n *\n * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n * expression.\n *\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * See {@link NgSwitch} for more details and example.\n *\n * @publicApi\n */\n@Directive({selector: '[ngSwitchCase]'})\nexport class NgSwitchCase implements DoCheck {\n  private _view: SwitchView;\n\n  @Input()\n  ngSwitchCase: any;\n\n  constructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\n      @Host() private ngSwitch: NgSwitch) {\n    ngSwitch._addCase();\n    this._view = new SwitchView(viewContainer, templateRef);\n  }\n\n  ngDoCheck() { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); }\n}\n\n/**\n * @ngModule CommonModule\n * @usageNotes\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-other-element *ngSwitchDefault>...</some-other-element>\n * </container-element>\n * ```\n *\n * @description\n *\n * Creates a view that is added to the parent {@link NgSwitch} when no case expressions\n * match the switch expression.\n *\n * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n * expression.\n *\n * See {@link NgSwitch} for more details and example.\n *\n * @publicApi\n */\n@Directive({selector: '[ngSwitchDefault]'})\nexport class NgSwitchDefault {\n  constructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\n      @Host() ngSwitch: NgSwitch) {\n    ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Directive, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {NgLocalization, getPluralCategory} from '../i18n/localization';\n\nimport {SwitchView} from './ng_switch';\n\n\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * @description\n *\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * @publicApi\n */\n@Directive({selector: '[ngPlural]'})\nexport class NgPlural {\n  // TODO(issue/24571): remove '!'.\n  private _switchValue !: number;\n  // TODO(issue/24571): remove '!'.\n  private _activeView !: SwitchView;\n  private _caseViews: {[k: string]: SwitchView} = {};\n\n  constructor(private _localization: NgLocalization) {}\n\n  @Input()\n  set ngPlural(value: number) {\n    this._switchValue = value;\n    this._updateView();\n  }\n\n  addCase(value: string, switchView: SwitchView): void { this._caseViews[value] = switchView; }\n\n  private _updateView(): void {\n    this._clearViews();\n\n    const cases = Object.keys(this._caseViews);\n    const key = getPluralCategory(this._switchValue, cases, this._localization);\n    this._activateView(this._caseViews[key]);\n  }\n\n  private _clearViews() {\n    if (this._activeView) this._activeView.destroy();\n  }\n\n  private _activateView(view: SwitchView) {\n    if (view) {\n      this._activeView = view;\n      this._activeView.create();\n    }\n  }\n}\n\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgPlural} when the\n * given expression matches the plural expression according to CLDR rules.\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n *```\n *\n * See {@link NgPlural} for more details and example.\n *\n * @publicApi\n */\n@Directive({selector: '[ngPluralCase]'})\nexport class NgPluralCase {\n  constructor(\n      @Attribute('ngPluralCase') public value: string, template: TemplateRef<Object>,\n      viewContainer: ViewContainerRef, @Host() ngPlural: NgPlural) {\n    const isANumber: boolean = !isNaN(Number(value));\n    ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, ElementRef, Input, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer2} from '@angular/core';\n\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * @description\n *\n * Update an HTML element styles.\n *\n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n *\n * @publicApi\n */\n@Directive({selector: '[ngStyle]'})\nexport class NgStyle implements DoCheck {\n  // TODO(issue/24571): remove '!'.\n  private _ngStyle !: {[key: string]: string};\n  // TODO(issue/24571): remove '!'.\n  private _differ !: KeyValueDiffer<string, string|number>;\n\n  constructor(\n      private _differs: KeyValueDiffers, private _ngEl: ElementRef, private _renderer: Renderer2) {}\n\n  @Input()\n  set ngStyle(values: {[key: string]: string}) {\n    this._ngStyle = values;\n    if (!this._differ && values) {\n      this._differ = this._differs.find(values).create();\n    }\n  }\n\n  ngDoCheck() {\n    if (this._differ) {\n      const changes = this._differ.diff(this._ngStyle);\n      if (changes) {\n        this._applyChanges(changes);\n      }\n    }\n  }\n\n  private _applyChanges(changes: KeyValueChanges<string, string|number>): void {\n    changes.forEachRemovedItem((record) => this._setStyle(record.key, null));\n    changes.forEachAddedItem((record) => this._setStyle(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._setStyle(record.key, record.currentValue));\n  }\n\n  private _setStyle(nameAndUnit: string, value: string|number|null|undefined): void {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value != null && unit ? `${value}${unit}` : value;\n\n    if (value != null) {\n      this._renderer.setStyle(this._ngEl.nativeElement, name, value as string);\n    } else {\n      this._renderer.removeStyle(this._ngEl.nativeElement, name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EmbeddedViewRef, Input, OnChanges, SimpleChange, SimpleChanges, TemplateRef, ViewContainerRef} from '@angular/core';\n\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Inserts an embedded view from a prepared `TemplateRef`.\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * @usageNotes\n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * Using the key `$implicit` in the context object will set its value as default.\n *\n * ### Example\n *\n * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n * @publicApi\n */\n@Directive({selector: '[ngTemplateOutlet]'})\nexport class NgTemplateOutlet implements OnChanges {\n  // TODO(issue/24571): remove '!'.\n  private _viewRef !: EmbeddedViewRef<any>;\n\n  // TODO(issue/24571): remove '!'.\n  @Input() public ngTemplateOutletContext !: Object;\n\n  // TODO(issue/24571): remove '!'.\n  @Input() public ngTemplateOutlet !: TemplateRef<any>;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const recreateView = this._shouldRecreateView(changes);\n\n    if (recreateView) {\n      if (this._viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n      }\n\n      if (this.ngTemplateOutlet) {\n        this._viewRef = this._viewContainerRef.createEmbeddedView(\n            this.ngTemplateOutlet, this.ngTemplateOutletContext);\n      }\n    } else {\n      if (this._viewRef && this.ngTemplateOutletContext) {\n        this._updateExistingContext(this.ngTemplateOutletContext);\n      }\n    }\n  }\n\n  /**\n   * We need to re-create existing embedded view if:\n   * - templateRef has changed\n   * - context has changes\n   *\n   * We mark context object as changed when the corresponding object\n   * shape changes (new properties are added or existing properties are removed).\n   * In other words we consider context with the same properties as \"the same\" even\n   * if object reference changes (see https://github.com/angular/angular/issues/13407).\n   */\n  private _shouldRecreateView(changes: SimpleChanges): boolean {\n    const ctxChange = changes['ngTemplateOutletContext'];\n    return !!changes['ngTemplateOutlet'] || (ctxChange && this._hasContextShapeChanged(ctxChange));\n  }\n\n  private _hasContextShapeChanged(ctxChange: SimpleChange): boolean {\n    const prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n    const currCtxKeys = Object.keys(ctxChange.currentValue || {});\n\n    if (prevCtxKeys.length === currCtxKeys.length) {\n      for (let propName of currCtxKeys) {\n        if (prevCtxKeys.indexOf(propName) === -1) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  private _updateExistingContext(ctx: Object): void {\n    for (let propName of Object.keys(ctx)) {\n      (<any>this._viewRef.context)[propName] = (<any>this.ngTemplateOutletContext)[propName];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '@angular/core';\n\nimport {NgClass} from './ng_class';\nimport {NgComponentOutlet} from './ng_component_outlet';\nimport {NgForOf, NgForOfContext} from './ng_for_of';\nimport {NgIf, NgIfContext} from './ng_if';\nimport {NgPlural, NgPluralCase} from './ng_plural';\nimport {NgStyle} from './ng_style';\nimport {NgSwitch, NgSwitchCase, NgSwitchDefault} from './ng_switch';\nimport {NgTemplateOutlet} from './ng_template_outlet';\n\nexport {\n  NgClass,\n  NgComponentOutlet,\n  NgForOf,\n  NgForOfContext,\n  NgIf,\n  NgIfContext,\n  NgPlural,\n  NgPluralCase,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  NgTemplateOutlet\n};\n\n\n\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nexport const COMMON_DIRECTIVES: Provider[] = [\n  NgClass,\n  NgComponentOutlet,\n  NgForOf,\n  NgIf,\n  NgTemplateOutlet,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  NgPlural,\n  NgPluralCase,\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, Éµstringify as stringify} from '@angular/core';\n\nexport function invalidPipeArgumentError(type: Type<any>, value: Object) {\n  return Error(`InvalidPipeArgument: '${value}' for pipe '${stringify(type)}'`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NumberFormatStyle} from '../../i18n/locale_data_api';\n\nexport class NumberFormatter {\n  static format(num: number, locale: string, style: NumberFormatStyle, opts: {\n    minimumIntegerDigits?: number,\n    minimumFractionDigits?: number,\n    maximumFractionDigits?: number,\n    currency?: string|null,\n    currencyAsSymbol?: boolean\n  } = {}): string {\n    const {minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits, currency,\n           currencyAsSymbol = false} = opts;\n    const options: Intl.NumberFormatOptions = {\n      minimumIntegerDigits,\n      minimumFractionDigits,\n      maximumFractionDigits,\n      style: NumberFormatStyle[style].toLowerCase()\n    };\n\n    if (style == NumberFormatStyle.Currency) {\n      options.currency = typeof currency == 'string' ? currency : undefined;\n      options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n    }\n    return new Intl.NumberFormat(locale, options).format(num);\n  }\n}\n\ntype DateFormatterFn = (date: Date, locale: string) => string;\n\nconst DATE_FORMATS_SPLIT =\n    /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\nconst PATTERN_ALIASES: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed during closure compilation.\n  'yMMMdjms': datePartGetterFactory(combine([\n    digitCondition('year', 1),\n    nameCondition('month', 3),\n    digitCondition('day', 1),\n    digitCondition('hour', 1),\n    digitCondition('minute', 1),\n    digitCondition('second', 1),\n  ])),\n  'yMdjm': datePartGetterFactory(combine([\n    digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n    digitCondition('hour', 1), digitCondition('minute', 1)\n  ])),\n  'yMMMMEEEEd': datePartGetterFactory(combine([\n    digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n    digitCondition('day', 1)\n  ])),\n  'yMMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n  'yMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n  'yMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n  'jms': datePartGetterFactory(combine(\n      [digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n  'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\n\nconst DATE_FORMATS: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed.\n  'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n  'yy': datePartGetterFactory(digitCondition('year', 2)),\n  'y': datePartGetterFactory(digitCondition('year', 1)),\n  'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n  'MMM': datePartGetterFactory(nameCondition('month', 3)),\n  'MM': datePartGetterFactory(digitCondition('month', 2)),\n  'M': datePartGetterFactory(digitCondition('month', 1)),\n  'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n  'L': datePartGetterFactory(nameCondition('month', 1)),\n  'dd': datePartGetterFactory(digitCondition('day', 2)),\n  'd': datePartGetterFactory(digitCondition('day', 1)),\n  'HH': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n  'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n  'hh': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n  'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'jj': datePartGetterFactory(digitCondition('hour', 2)),\n  'j': datePartGetterFactory(digitCondition('hour', 1)),\n  'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n  'm': datePartGetterFactory(digitCondition('minute', 1)),\n  'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n  's': datePartGetterFactory(digitCondition('second', 1)),\n  // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n  // we can be just safely rely on using `sss` since we currently don't support single or two digit\n  // fractions\n  'sss': datePartGetterFactory(digitCondition('second', 3)),\n  'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n  'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n  'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n  'E': datePartGetterFactory(nameCondition('weekday', 1)),\n  'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'Z': timeZoneGetter('short'),\n  'z': timeZoneGetter('long'),\n  'ww': datePartGetterFactory({}),  // Week of year, padded (00-53). Week 01 is the week with the\n                                    // first Thursday of the year. not support ?\n  'w':\n      datePartGetterFactory({}),  // Week of year (0-53). Week 1 is the week with the first Thursday\n                                  // of the year not support ?\n  'G': datePartGetterFactory(nameCondition('era', 1)),\n  'GG': datePartGetterFactory(nameCondition('era', 2)),\n  'GGG': datePartGetterFactory(nameCondition('era', 3)),\n  'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\n\n\nfunction digitModifier(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string {\n    const result = inner(date, locale);\n    return result.length == 1 ? '0' + result : result;\n  };\n}\n\nfunction hourClockExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[1]; };\n}\n\nfunction hourExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[0]; };\n}\n\nfunction intlDateFormat(date: Date, locale: string, options: Intl.DateTimeFormatOptions): string {\n  return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\n\nfunction timeZoneGetter(timezone: string): DateFormatterFn {\n  // To workaround `Intl` API restriction for single timezone let format with 24 hours\n  const options = {hour: '2-digit', hour12: false, timeZoneName: timezone};\n  return function(date: Date, locale: string): string {\n    const result = intlDateFormat(date, locale, options);\n    // Then extract first 3 letters that related to hours\n    return result ? result.substring(3) : '';\n  };\n}\n\nfunction hour12Modify(\n    options: Intl.DateTimeFormatOptions, value: boolean): Intl.DateTimeFormatOptions {\n  options.hour12 = value;\n  return options;\n}\n\nfunction digitCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const result: {[k: string]: string} = {};\n  result[prop] = len === 2 ? '2-digit' : 'numeric';\n  return result;\n}\n\nfunction nameCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const result: {[k: string]: string} = {};\n  if (len < 4) {\n    result[prop] = len > 1 ? 'short' : 'narrow';\n  } else {\n    result[prop] = 'long';\n  }\n\n  return result;\n}\n\nfunction combine(options: Intl.DateTimeFormatOptions[]): Intl.DateTimeFormatOptions {\n  return options.reduce((merged, opt) => ({...merged, ...opt}), {});\n}\n\nfunction datePartGetterFactory(ret: Intl.DateTimeFormatOptions): DateFormatterFn {\n  return (date: Date, locale: string): string => intlDateFormat(date, locale, ret);\n}\n\nconst DATE_FORMATTER_CACHE = new Map<string, string[]>();\n\nfunction dateFormatter(format: string, date: Date, locale: string): string {\n  const fn = PATTERN_ALIASES[format];\n\n  if (fn) return fn(date, locale);\n\n  const cacheKey = format;\n  let parts = DATE_FORMATTER_CACHE.get(cacheKey);\n\n  if (!parts) {\n    parts = [];\n    let match: RegExpExecArray|null;\n    DATE_FORMATS_SPLIT.exec(format);\n\n    let _format: string|null = format;\n    while (_format) {\n      match = DATE_FORMATS_SPLIT.exec(_format);\n      if (match) {\n        parts = parts.concat(match.slice(1));\n        _format = parts.pop() !;\n      } else {\n        parts.push(_format);\n        _format = null;\n      }\n    }\n\n    DATE_FORMATTER_CACHE.set(cacheKey, parts);\n  }\n\n  return parts.reduce((text, part) => {\n    const fn = DATE_FORMATS[part];\n    return text + (fn ? fn(date, locale) : partToTime(part));\n  }, '');\n}\n\nfunction partToTime(part: string): string {\n  return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\n\nexport class DateFormatter {\n  static format(date: Date, locale: string, pattern: string): string {\n    return dateFormatter(pattern, date, locale);\n  }\n}\n","/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n  */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {ISO8601_DATE_REGEX, isoStringToDate} from '../../i18n/format_date';\nimport {invalidPipeArgumentError} from '../invalid_pipe_argument_error';\nimport {DateFormatter} from './intl';\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n *\n *\n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n *\n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n *\n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n *\n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n *\n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * Assuming `dateObj` is (year: 2010, month: 9, day: 3, hour: 12 PM, minute: 05, second: 08)\n * in the _local_ time and locale is 'en-US':\n *\n * {@example common/pipes/ts/date_pipe.ts region='DeprecatedDatePipe'}\n *\n * @publicApi\n */\n@Pipe({name: 'date', pure: true})\nexport class DeprecatedDatePipe implements PipeTransform {\n  /** @internal */\n  static _ALIASES: {[key: string]: string} = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n  };\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {}\n\n  transform(value: any, pattern: string = 'mediumDate'): string|null {\n    if (value == null || value === '' || value !== value) return null;\n\n    let date: Date;\n\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    if (isDate(value)) {\n      date = value;\n    } else if (!isNaN(value - parseFloat(value))) {\n      date = new Date(parseFloat(value));\n    } else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n      /**\n       * For ISO Strings without time the day, month and year must be extracted from the ISO String\n       * before Date creation to avoid time offset and errors in the new Date.\n       * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n       * date, some browsers (e.g. IE 9) will throw an invalid Date error\n       * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the\n       * timeoffset\n       * is applied\n       * Note: ISO months are 0 for January, 1 for February, ...\n       */\n      const [y, m, d] = value.split('-').map((val: string) => parseInt(val, 10));\n      date = new Date(y, m - 1, d);\n    } else {\n      date = new Date(value);\n    }\n\n    if (!isDate(date)) {\n      let match: RegExpMatchArray|null;\n      if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n        date = isoStringToDate(match);\n      } else {\n        throw invalidPipeArgumentError(DeprecatedDatePipe, value);\n      }\n    }\n\n    return DateFormatter.format(\n        date, this._locale, DeprecatedDatePipe._ALIASES[pattern] || pattern);\n  }\n}\n\nfunction isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value.valueOf());\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform, Type} from '@angular/core';\nimport {NUMBER_FORMAT_REGEXP, parseIntAutoRadix} from '../../i18n/format_number';\nimport {NumberFormatStyle} from '../../i18n/locale_data_api';\nimport {invalidPipeArgumentError} from '../invalid_pipe_argument_error';\nimport {NumberFormatter} from './intl';\n\nfunction formatNumber(\n    pipe: Type<any>, locale: string, value: number | string, style: NumberFormatStyle,\n    digits?: string | null, currency: string | null = null,\n    currencyAsSymbol: boolean = false): string|null {\n  if (value == null) return null;\n\n  // Convert strings to numbers\n  value = typeof value === 'string' && !isNaN(+value - parseFloat(value)) ? +value : value;\n  if (typeof value !== 'number') {\n    throw invalidPipeArgumentError(pipe, value);\n  }\n\n  let minInt: number|undefined;\n  let minFraction: number|undefined;\n  let maxFraction: number|undefined;\n  if (style !== NumberFormatStyle.Currency) {\n    // rely on Intl default for currency\n    minInt = 1;\n    minFraction = 0;\n    maxFraction = 3;\n  }\n\n  if (digits) {\n    const parts = digits.match(NUMBER_FORMAT_REGEXP);\n    if (parts === null) {\n      throw new Error(`${digits} is not a valid digit info for number pipes`);\n    }\n    if (parts[1] != null) {  // min integer digits\n      minInt = parseIntAutoRadix(parts[1]);\n    }\n    if (parts[3] != null) {  // min fraction digits\n      minFraction = parseIntAutoRadix(parts[3]);\n    }\n    if (parts[5] != null) {  // max fraction digits\n      maxFraction = parseIntAutoRadix(parts[5]);\n    }\n  }\n\n  return NumberFormatter.format(value as number, locale, style, {\n    minimumIntegerDigits: minInt,\n    minimumFractionDigits: minFraction,\n    maximumFractionDigits: maxFraction,\n    currency: currency,\n    currencyAsSymbol: currencyAsSymbol,\n  });\n}\n\n/**\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n *\n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n *\n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/number_pipe.ts region='DeprecatedNumberPipe'}\n *\n * @ngModule CommonModule\n * @publicApi\n */\n@Pipe({name: 'number'})\nexport class DeprecatedDecimalPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private _locale: string) {}\n\n  transform(value: any, digits?: string): string|null {\n    return formatNumber(\n        DeprecatedDecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n  }\n}\n\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Formats a number as percentage according to locale rules.\n *\n * - `digitInfo` See {@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/percent_pipe.ts region='DeprecatedPercentPipe'}\n *\n * @publicApi\n */\n@Pipe({name: 'percent'})\nexport class DeprecatedPercentPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private _locale: string) {}\n\n  transform(value: any, digits?: string): string|null {\n    return formatNumber(\n        DeprecatedPercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n  }\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/currency_pipe.ts region='DeprecatedCurrencyPipe'}\n *\n * @publicApi\n */\n@Pipe({name: 'currency'})\nexport class DeprecatedCurrencyPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private _locale: string) {}\n\n  transform(\n      value: any, currencyCode: string = 'USD', symbolDisplay: boolean = false,\n      digits?: string): string|null {\n    return formatNumber(\n        DeprecatedCurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits,\n        currencyCode, symbolDisplay);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '@angular/core';\nimport {DeprecatedDatePipe} from './date_pipe';\nimport {DeprecatedCurrencyPipe, DeprecatedDecimalPipe, DeprecatedPercentPipe} from './number_pipe';\n\nexport {\n  DeprecatedCurrencyPipe,\n  DeprecatedDatePipe,\n  DeprecatedDecimalPipe,\n  DeprecatedPercentPipe,\n};\n\n\n/**\n * A collection of deprecated i18n pipes that require intl api\n *\n * @deprecated from v5\n */\nexport const COMMON_DEPRECATED_I18N_PIPES: Provider[] =\n    [DeprecatedDecimalPipe, DeprecatedPercentPipe, DeprecatedCurrencyPipe, DeprecatedDatePipe];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, EventEmitter, OnDestroy, Pipe, PipeTransform, WrappedValue, ÉµisObservable, ÉµisPromise} from '@angular/core';\nimport {Observable, SubscriptionLike} from 'rxjs';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\ninterface SubscriptionStrategy {\n  createSubscription(async: Observable<any>|Promise<any>, updateLatestValue: any): SubscriptionLike\n      |Promise<any>;\n  dispose(subscription: SubscriptionLike|Promise<any>): void;\n  onDestroy(subscription: SubscriptionLike|Promise<any>): void;\n}\n\nclass ObservableStrategy implements SubscriptionStrategy {\n  createSubscription(async: Observable<any>, updateLatestValue: any): SubscriptionLike {\n    return async.subscribe({next: updateLatestValue, error: (e: any) => { throw e; }});\n  }\n\n  dispose(subscription: SubscriptionLike): void { subscription.unsubscribe(); }\n\n  onDestroy(subscription: SubscriptionLike): void { subscription.unsubscribe(); }\n}\n\nclass PromiseStrategy implements SubscriptionStrategy {\n  createSubscription(async: Promise<any>, updateLatestValue: (v: any) => any): Promise<any> {\n    return async.then(updateLatestValue, e => { throw e; });\n  }\n\n  dispose(subscription: Promise<any>): void {}\n\n  onDestroy(subscription: Promise<any>): void {}\n}\n\nconst _promiseStrategy = new PromiseStrategy();\nconst _observableStrategy = new ObservableStrategy();\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n * @publicApi\n */\n@Pipe({name: 'async', pure: false})\nexport class AsyncPipe implements OnDestroy, PipeTransform {\n  private _latestValue: any = null;\n  private _latestReturnedValue: any = null;\n\n  private _subscription: SubscriptionLike|Promise<any>|null = null;\n  private _obj: Observable<any>|Promise<any>|EventEmitter<any>|null = null;\n  private _strategy: SubscriptionStrategy = null !;\n\n  constructor(private _ref: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._dispose();\n    }\n  }\n\n  transform<T>(obj: null): null;\n  transform<T>(obj: undefined): undefined;\n  transform<T>(obj: Observable<T>|null|undefined): T|null;\n  transform<T>(obj: Promise<T>|null|undefined): T|null;\n  transform(obj: Observable<any>|Promise<any>|null|undefined): any {\n    if (!this._obj) {\n      if (obj) {\n        this._subscribe(obj);\n      }\n      this._latestReturnedValue = this._latestValue;\n      return this._latestValue;\n    }\n\n    if (obj !== this._obj) {\n      this._dispose();\n      return this.transform(obj as any);\n    }\n\n    if (this._latestValue === this._latestReturnedValue) {\n      return this._latestReturnedValue;\n    }\n\n    this._latestReturnedValue = this._latestValue;\n    return WrappedValue.wrap(this._latestValue);\n  }\n\n  private _subscribe(obj: Observable<any>|Promise<any>|EventEmitter<any>): void {\n    this._obj = obj;\n    this._strategy = this._selectStrategy(obj);\n    this._subscription = this._strategy.createSubscription(\n        obj, (value: Object) => this._updateLatestValue(obj, value));\n  }\n\n  private _selectStrategy(obj: Observable<any>|Promise<any>|EventEmitter<any>): any {\n    if (ÉµisPromise(obj)) {\n      return _promiseStrategy;\n    }\n\n    if (ÉµisObservable(obj)) {\n      return _observableStrategy;\n    }\n\n    throw invalidPipeArgumentError(AsyncPipe, obj);\n  }\n\n  private _dispose(): void {\n    this._strategy.dispose(this._subscription !);\n    this._latestValue = null;\n    this._latestReturnedValue = null;\n    this._subscription = null;\n    this._obj = null;\n  }\n\n  private _updateLatestValue(async: any, value: Object): void {\n    if (async === this._obj) {\n      this._latestValue = value;\n      this._ref.markForCheck();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\n/**\n * Transforms text to all lower case.\n *\n * @see `UpperCasePipe`\n * @see `TitleCasePipe`\n * @usageNotes\n *\n * The following example defines a view that allows the user to enter\n * text, and then uses the pipe to convert the input text to all lower case.\n *\n * <code-example path=\"common/pipes/ts/lowerupper_pipe.ts\" region='LowerUpperPipe'></code-example>\n *\n * @ngModule CommonModule\n * @publicApi\n */\n@Pipe({name: 'lowercase'})\nexport class LowerCasePipe implements PipeTransform {\n  /**\n   * @param value The string to transform to lower case.\n   */\n  transform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(LowerCasePipe, value);\n    }\n    return value.toLowerCase();\n  }\n}\n\n//\n// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result\n// can be achieved by using /\\p{L}\\S*/gu and also known as Unicode Property Escapes\n// (http://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no\n// transpilation of this functionality down to ES5 without external tool, the only solution is\n// to use already transpiled form. Example can be found here -\n// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1\n//\n\nconst unicodeWordMatch =\n    /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])\\S*/g;\n\n/**\n * Transforms text to title case.\n * Capitalizes the first letter of each word, and transforms the\n * rest of the word to lower case.\n * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.\n *\n * @see `LowerCasePipe`\n * @see `UpperCasePipe`\n *\n * @usageNotes\n * The following example shows the result of transforming various strings into title case.\n *\n * <code-example path=\"common/pipes/ts/titlecase_pipe.ts\" region='TitleCasePipe'></code-example>\n *\n * @ngModule CommonModule\n * @publicApi\n */\n@Pipe({name: 'titlecase'})\nexport class TitleCasePipe implements PipeTransform {\n  /**\n   * @param value The string to transform to title case.\n   */\n  transform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(TitleCasePipe, value);\n    }\n\n    return value.replace(\n        unicodeWordMatch, (txt => txt[0].toUpperCase() + txt.substr(1).toLowerCase()));\n  }\n}\n\n/**\n * Transforms text to all upper case.\n * @see `LowerCasePipe`\n * @see `TitleCasePipe`\n *\n * @ngModule CommonModule\n * @publicApi\n */\n@Pipe({name: 'uppercase'})\nexport class UpperCasePipe implements PipeTransform {\n  /**\n   * @param value The string to transform to upper case.\n   */\n  transform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(UpperCasePipe, value);\n    }\n    return value.toUpperCase();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {formatDate} from '../i18n/format_date';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\n// clang-format off\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date value according to locale rules.\n *\n * Only the `en-US` locale data comes with Angular. To localize dates\n * in another language, you must import the corresponding locale data.\n * See the [I18n guide](guide/i18n#i18n-pipes) for more information.\n *\n * @see `formatDate()`\n *\n *\n * @usageNotes\n *\n * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to\n * reformat the date on every change-detection cycle, treat the date as an immutable object\n * and change the reference when the pipe needs to run again.\n *\n * ### Pre-defined format options\n *\n * Examples are given in `en-US` locale.\n *\n * - `'short'`: equivalent to `'M/d/yy, h:mm a'` (`6/15/15, 9:03 AM`).\n * - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (`Jun 15, 2015, 9:03:01 AM`).\n * - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (`June 15, 2015 at 9:03:01 AM\n * GMT+1`).\n * - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (`Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`).\n * - `'shortDate'`: equivalent to `'M/d/yy'` (`6/15/15`).\n * - `'mediumDate'`: equivalent to `'MMM d, y'` (`Jun 15, 2015`).\n * - `'longDate'`: equivalent to `'MMMM d, y'` (`June 15, 2015`).\n * - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (`Monday, June 15, 2015`).\n * - `'shortTime'`: equivalent to `'h:mm a'` (`9:03 AM`).\n * - `'mediumTime'`: equivalent to `'h:mm:ss a'` (`9:03:01 AM`).\n * - `'longTime'`: equivalent to `'h:mm:ss a z'` (`9:03:01 AM GMT+1`).\n * - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (`9:03:01 AM GMT+01:00`).\n *\n * ### Custom format options\n *\n * You can construct a format string using symbols to specify the components\n * of a date-time value, as described in the following table.\n * Format details depend on the locale.\n * Fields marked with (*) are only available in the extra data set for the given locale.\n *\n *  | Field type         | Format      | Description                                                   | Example Value                                              |\n *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|\n *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |\n *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |\n *  |                    | GGGGG       | Narrow                                                        | A                                                          |\n *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |\n *  |                    | MMMM        | Wide                                                          | September                                                  |\n *  |                    | MMMMM       | Narrow                                                        | S                                                          |\n *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |\n *  |                    | LLLL        | Wide                                                          | September                                                  |\n *  |                    | LLLLL       | Narrow                                                        | S                                                          |\n *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |\n *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\n *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |\n *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |\n *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |\n *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\n *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |\n *  |                    | EEEEE       | Narrow                                                        | T                                                          |\n *  |                    | EEEEEE      | Short                                                         | Tu                                                         |\n *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\n *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\n *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |\n *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\n *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | BBBBB       | Narrow                                                        | md                                                         |\n *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\n *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | bbbbb       | Narrow                                                        | md                                                         |\n *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |\n *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\n *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |\n *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\n *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |\n *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\n *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |\n *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\n *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |\n *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\n *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\n *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\n *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\n *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\n *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\n *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\n *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\n *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\n *\n * Note that timezone correction is not applied to an ISO string that has no time component, such as \"2016-09-19\"\n *\n * ### Format examples\n *\n * These examples transform a date into various formats,\n * assuming that `dateObj` is a JavaScript `Date` object for\n * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,\n * given in the local time for the `en-US` locale.\n *\n * ```\n * {{ dateObj | date }}               // output is 'Jun 15, 2015'\n * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n * {{ dateObj | date:'mmss' }}        // output is '43:11'\n * ```\n *\n * ### Usage example\n *\n * The following component uses a date pipe to display the current date in different formats.\n *\n * ```\n * @Component({\n *  selector: 'date-pipe',\n *  template: `<div>\n *    <p>Today is {{today | date}}</p>\n *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>\n *    <p>The time is {{today | date:'h:mm a z'}}</p>\n *  </div>`\n * })\n * // Get the current date and time as a date-time value.\n * export class DatePipeComponent {\n *   today: number = Date.now();\n * }\n * ```\n *\n * @publicApi\n */\n// clang-format on\n@Pipe({name: 'date', pure: true})\nexport class DatePipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private locale: string) {}\n\n  /**\n   * @param value The date expression: a `Date` object,  a number\n   * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n   * @param format The date/time components to include, using predefined options or a\n   * custom format string.\n   * @param timezone A timezone offset (such as `'+0430'`), or a standard\n   * UTC/GMT or continental US timezone abbreviation. Default is\n   * the local system timezone of the end-user's machine.\n   * @param locale A locale code for the locale format rules to use.\n   * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n   * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n   * @returns A date string in the desired format.\n   */\n  transform(value: any, format = 'mediumDate', timezone?: string, locale?: string): string|null {\n    if (value == null || value === '' || value !== value) return null;\n\n    try {\n      return formatDate(value, format, locale || this.locale, timezone);\n    } catch (error) {\n      throw invalidPipeArgumentError(DatePipe, error.message);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {NgLocalization, getPluralCategory} from '../i18n/localization';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\nconst _INTERPOLATION_REGEXP: RegExp = /#/g;\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Maps a value to a string that pluralizes the value according to locale rules.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * @publicApi\n */\n@Pipe({name: 'i18nPlural', pure: true})\nexport class I18nPluralPipe implements PipeTransform {\n  constructor(private _localization: NgLocalization) {}\n\n  /**\n   * @param value the number to be formatted\n   * @param pluralMap an object that mimics the ICU format, see\n   * http://userguide.icu-project.org/formatparse/messages.\n   * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n   * default).\n   */\n  transform(value: number, pluralMap: {[count: string]: string}, locale?: string): string {\n    if (value == null) return '';\n\n    if (typeof pluralMap !== 'object' || pluralMap === null) {\n      throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n    }\n\n    const key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n\n    return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * @publicApi\n */\n@Pipe({name: 'i18nSelect', pure: true})\nexport class I18nSelectPipe implements PipeTransform {\n  /**\n   * @param value a string to be internationalized.\n   * @param mapping an object that indicates the text that should be displayed\n   * for different values of the provided `value`.\n   */\n  transform(value: string|null|undefined, mapping: {[key: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof mapping !== 'object' || typeof value !== 'string') {\n      throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n    }\n\n    if (mapping.hasOwnProperty(value)) {\n      return mapping[value];\n    }\n\n    if (mapping.hasOwnProperty('other')) {\n      return mapping['other'];\n    }\n\n    return '';\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * @usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n * @publicApi\n */\n@Pipe({name: 'json', pure: false})\nexport class JsonPipe implements PipeTransform {\n  /**\n   * @param value A value of any type to convert into a JSON-format string.\n   */\n  transform(value: any): string { return JSON.stringify(value, null, 2); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Pipe, PipeTransform} from '@angular/core';\n\nfunction makeKeyValuePair<K, V>(key: K, value: V): KeyValue<K, V> {\n  return {key: key, value: value};\n}\n\n/**\n * A key value pair.\n * Usually used to represent the key value pairs from a Map or Object.\n *\n * @publicApi\n */\nexport interface KeyValue<K, V> {\n  key: K;\n  value: V;\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n *\n * @usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map and be iterated by ngFor with the use of this keyvalue\n * pipe.\n *\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * @publicApi\n */\n@Pipe({name: 'keyvalue', pure: false})\nexport class KeyValuePipe implements PipeTransform {\n  constructor(private readonly differs: KeyValueDiffers) {}\n\n  // TODO(issue/24571): remove '!'.\n  private differ !: KeyValueDiffer<any, any>;\n  // TODO(issue/24571): remove '!'.\n  private keyValues !: Array<KeyValue<any, any>>;\n\n  transform<K, V>(input: null, compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): null;\n  transform<V>(\n      input: {[key: string]: V}|Map<string, V>,\n      compareFn?: (a: KeyValue<string, V>, b: KeyValue<string, V>) => number):\n      Array<KeyValue<string, V>>;\n  transform<V>(\n      input: {[key: number]: V}|Map<number, V>,\n      compareFn?: (a: KeyValue<number, V>, b: KeyValue<number, V>) => number):\n      Array<KeyValue<number, V>>;\n  transform<K, V>(input: Map<K, V>, compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number):\n      Array<KeyValue<K, V>>;\n  transform<K, V>(\n      input: null|{[key: string]: V, [key: number]: V}|Map<K, V>,\n      compareFn: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number = defaultComparator):\n      Array<KeyValue<K, V>>|null {\n    if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\n      return null;\n    }\n\n    if (!this.differ) {\n      // make a differ for whatever type we've been passed in\n      this.differ = this.differs.find(input).create();\n    }\n\n    const differChanges: KeyValueChanges<K, V>|null = this.differ.diff(input as any);\n\n    if (differChanges) {\n      this.keyValues = [];\n      differChanges.forEachItem((r: KeyValueChangeRecord<K, V>) => {\n        this.keyValues.push(makeKeyValuePair(r.key, r.currentValue !));\n      });\n      this.keyValues.sort(compareFn);\n    }\n    return this.keyValues;\n  }\n}\n\nexport function defaultComparator<K, V>(\n    keyValueA: KeyValue<K, V>, keyValueB: KeyValue<K, V>): number {\n  const a = keyValueA.key;\n  const b = keyValueB.key;\n  // if same exit with 0;\n  if (a === b) return 0;\n  // make sure that undefined are at the end of the sort.\n  if (a === undefined) return 1;\n  if (b === undefined) return -1;\n  // make sure that nulls are at the end of the sort.\n  if (a === null) return 1;\n  if (b === null) return -1;\n  if (typeof a == 'string' && typeof b == 'string') {\n    return a < b ? -1 : 1;\n  }\n  if (typeof a == 'number' && typeof b == 'number') {\n    return a - b;\n  }\n  if (typeof a == 'boolean' && typeof b == 'boolean') {\n    return a < b ? -1 : 1;\n  }\n  // `a` and `b` are of different types. Compare their string values.\n  const aString = String(a);\n  const bString = String(b);\n  return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {formatCurrency, formatNumber, formatPercent} from '../i18n/format_number';\nimport {getCurrencySymbol} from '../i18n/locale_data_api';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number into a string,\n * formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * If no parameters are specified, the function rounds off to the nearest value using this\n * [rounding method](https://en.wikibooks.org/wiki/Arithmetic/Rounding).\n * The behavior differs from that of the JavaScript ```Math.round()``` function.\n * In the following case for example, the pipe rounds down where\n * ```Math.round()``` rounds up:\n *\n * ```html\n * -2.5 | number:'1.0-0'\n * > -3\n * Math.round(-2.5)\n * > -2\n * ```\n *\n * @see `formatNumber()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * ### Example\n *\n * <code-example path=\"common/pipes/ts/number_pipe.ts\" region='NumberPipe'></code-example>\n *\n * @publicApi\n */\n@Pipe({name: 'number'})\nexport class DecimalPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private _locale: string) {}\n\n  /**\n   * @param value The number to be formatted.\n   * @param digitsInfo Decimal representation options, specified by a string\n   * in the following format:<br>\n   * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n   *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n   * Default is `1`.\n   *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n   * Default is `0`.\n   *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n   * Default is `3`.\n   * @param locale A locale code for the locale format rules to use.\n   * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n   * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n   */\n  transform(value: any, digitsInfo?: string, locale?: string): string|null {\n    if (isEmpty(value)) return null;\n\n    locale = locale || this._locale;\n\n    try {\n      const num = strToNumber(value);\n      return formatNumber(num, locale, digitsInfo);\n    } catch (error) {\n      throw invalidPipeArgumentError(DecimalPipe, error.message);\n    }\n  }\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a percentage\n * string, formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * @see `formatPercent()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/percent_pipe.ts\" region='PercentPipe'></code-example>\n *\n * @publicApi\n */\n@Pipe({name: 'percent'})\nexport class PercentPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private _locale: string) {}\n\n  /**\n   *\n   * @param value The number to be formatted as a percentage.\n   * @param digitsInfo Decimal representation options, specified by a string\n   * in the following format:<br>\n   * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n   *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n   * Default is `1`.\n   *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n   * Default is `0`.\n   *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n   * Default is `3`.\n   * @param locale A locale code for the locale format rules to use.\n   * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n   * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n   */\n  transform(value: any, digitsInfo?: string, locale?: string): string|null {\n    if (isEmpty(value)) return null;\n\n    locale = locale || this._locale;\n\n    try {\n      const num = strToNumber(value);\n      return formatPercent(num, locale, digitsInfo);\n    } catch (error) {\n      throw invalidPipeArgumentError(PercentPipe, error.message);\n    }\n  }\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a currency string, formatted according to locale rules\n * that determine group sizing and separator, decimal-point character,\n * and other locale-specific configurations.\n *\n * @see `getCurrencySymbol()`\n * @see `formatCurrency()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/currency_pipe.ts\" region='CurrencyPipe'></code-example>\n *\n * @publicApi\n */\n@Pipe({name: 'currency'})\nexport class CurrencyPipe implements PipeTransform {\n  constructor(@Inject(LOCALE_ID) private _locale: string) {}\n\n  /**\n   *\n   * @param value The number to be formatted as currency.\n   * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n   * such as `USD` for the US dollar and `EUR` for the euro.\n   * @param display The format for the currency indicator. One of the following:\n   *   - `code`: Show the code (such as `USD`).\n   *   - `symbol`(default): Show the symbol (such as `$`).\n   *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their\n   * currency.\n   * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the\n   * locale has no narrow symbol, uses the standard symbol for the locale.\n   *   - String: Use the given string value instead of a code or a symbol.\n   * For example, an empty string will suppress the currency & symbol.\n   *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.\n   *\n   * @param digitsInfo Decimal representation options, specified by a string\n   * in the following format:<br>\n   * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n   *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n   * Default is `1`.\n   *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n   * Default is `0`.\n   *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n   * Default is `3`.\n   * If not provided, the number will be formatted with the proper amount of digits,\n   * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.\n   * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.\n   * @param locale A locale code for the locale format rules to use.\n   * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n   * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n   */\n  transform(\n      value: any, currencyCode?: string,\n      display: 'code'|'symbol'|'symbol-narrow'|string|boolean = 'symbol', digitsInfo?: string,\n      locale?: string): string|null {\n    if (isEmpty(value)) return null;\n\n    locale = locale || this._locale;\n\n    if (typeof display === 'boolean') {\n      if (<any>console && <any>console.warn) {\n        console.warn(\n            `Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".`);\n      }\n      display = display ? 'symbol' : 'code';\n    }\n\n    let currency: string = currencyCode || 'USD';\n    if (display !== 'code') {\n      if (display === 'symbol' || display === 'symbol-narrow') {\n        currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\n      } else {\n        currency = display;\n      }\n    }\n\n    try {\n      const num = strToNumber(value);\n      return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\n    } catch (error) {\n      throw invalidPipeArgumentError(CurrencyPipe, error.message);\n    }\n  }\n}\n\nfunction isEmpty(value: any): boolean {\n  return value == null || value === '' || value !== value;\n}\n\n/**\n * Transforms a string into a number (if needed).\n */\nfunction strToNumber(value: number | string): number {\n  // Convert strings to numbers\n  if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n    return Number(value);\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`${value} is not a number`);\n  }\n  return value;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\n *\n * @usageNotes\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on an `Array`, the returned `Array` is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ### List Example\n *\n * This `ngFor` example:\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n * ```html\n * <li>b</li>\n * <li>c</li>\n * ```\n *\n * ### String Examples\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n * @publicApi\n */\n@Pipe({name: 'slice', pure: false})\nexport class SlicePipe implements PipeTransform {\n  /**\n   * @param value a list or a string to be sliced.\n   * @param start the starting index of the subset to return:\n   *   - **a positive integer**: return the item at `start` index and all items after\n   *     in the list or string expression.\n   *   - **a negative integer**: return the item at `start` index from the end and all items after\n   *     in the list or string expression.\n   *   - **if positive and greater than the size of the expression**: return an empty list or\n   * string.\n   *   - **if negative and greater than the size of the expression**: return entire list or string.\n   * @param end the ending index of the subset to return:\n   *   - **omitted**: return all items until the end.\n   *   - **if positive**: return all items before `end` index of the list or string.\n   *   - **if negative**: return all items before `end` index from the end of the list or string.\n   */\n  transform(value: any, start: number, end?: number): any {\n    if (value == null) return value;\n\n    if (!this.supports(value)) {\n      throw invalidPipeArgumentError(SlicePipe, value);\n    }\n\n    return value.slice(start, end);\n  }\n\n  private supports(obj: any): boolean { return typeof obj === 'string' || Array.isArray(obj); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * This module provides a set of common Pipes.\n */\nimport {AsyncPipe} from './async_pipe';\nimport {LowerCasePipe, TitleCasePipe, UpperCasePipe} from './case_conversion_pipes';\nimport {DatePipe} from './date_pipe';\nimport {I18nPluralPipe} from './i18n_plural_pipe';\nimport {I18nSelectPipe} from './i18n_select_pipe';\nimport {JsonPipe} from './json_pipe';\nimport {KeyValue, KeyValuePipe} from './keyvalue_pipe';\nimport {CurrencyPipe, DecimalPipe, PercentPipe} from './number_pipe';\nimport {SlicePipe} from './slice_pipe';\n\nexport {\n  AsyncPipe,\n  CurrencyPipe,\n  DatePipe,\n  DecimalPipe,\n  KeyValue,\n  KeyValuePipe,\n  I18nPluralPipe,\n  I18nSelectPipe,\n  JsonPipe,\n  LowerCasePipe,\n  PercentPipe,\n  SlicePipe,\n  TitleCasePipe,\n  UpperCasePipe,\n};\n\n\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nexport const COMMON_PIPES = [\n  AsyncPipe,\n  UpperCasePipe,\n  LowerCasePipe,\n  JsonPipe,\n  SlicePipe,\n  DecimalPipe,\n  PercentPipe,\n  TitleCasePipe,\n  CurrencyPipe,\n  DatePipe,\n  I18nPluralPipe,\n  I18nSelectPipe,\n  KeyValuePipe,\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {COMMON_DIRECTIVES} from './directives/index';\nimport {DEPRECATED_PLURAL_FN, NgLocaleLocalization, NgLocalization, getPluralCase} from './i18n/localization';\nimport {COMMON_DEPRECATED_I18N_PIPES} from './pipes/deprecated/index';\nimport {COMMON_PIPES} from './pipes/index';\n\n\n// Note: This does not contain the location providers,\n// as they need some platform specific implementations to work.\n/**\n * Exports all the basic Angular directives and pipes,\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * * The `providers` options configure the NgModule's injector to provide\n * localization dependencies to members.\n * * The `exports` options make the declared directives and pipes available for import\n * by other NgModules.\n *\n * @publicApi\n */\n@NgModule({\n  declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n  exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n  providers: [\n    {provide: NgLocalization, useClass: NgLocaleLocalization},\n  ],\n})\nexport class CommonModule {\n}\n\n/**\n * A module that contains the deprecated i18n pipes.\n *\n * @deprecated from v5\n * @publicApi\n */\n@NgModule({\n  declarations: [COMMON_DEPRECATED_I18N_PIPES],\n  exports: [COMMON_DEPRECATED_I18N_PIPES],\n  providers: [{provide: DEPRECATED_PLURAL_FN, useValue: getPluralCase}],\n})\nexport class DeprecatedI18NPipesModule {\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @publicApi\n */\nexport const DOCUMENT = new InjectionToken<Document>('DocumentToken');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const PLATFORM_BROWSER_ID = 'browser';\nexport const PLATFORM_SERVER_ID = 'server';\nexport const PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nexport const PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n\n/**\n * Returns whether a platform id represents a browser platform.\n * @publicApi\n */\nexport function isPlatformBrowser(platformId: Object): boolean {\n  return platformId === PLATFORM_BROWSER_ID;\n}\n\n/**\n * Returns whether a platform id represents a server platform.\n * @publicApi\n */\nexport function isPlatformServer(platformId: Object): boolean {\n  return platformId === PLATFORM_SERVER_ID;\n}\n\n/**\n * Returns whether a platform id represents a web worker app platform.\n * @publicApi\n */\nexport function isPlatformWorkerApp(platformId: Object): boolean {\n  return platformId === PLATFORM_WORKER_APP_ID;\n}\n\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * @publicApi\n */\nexport function isPlatformWorkerUi(platformId: Object): boolean {\n  return platformId === PLATFORM_WORKER_UI_ID;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('7.0.4');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {defineInjectable, inject} from '@angular/core';\n\nimport {DOCUMENT} from './dom_tokens';\n\n/**\n * Manages the scroll position.\n *\n * @publicApi\n */\nexport abstract class ViewportScroller {\n  // De-sugared tree-shakable injection\n  // See #23917\n  /** @nocollapse */\n  static ngInjectableDef = defineInjectable(\n      {providedIn: 'root', factory: () => new BrowserViewportScroller(inject(DOCUMENT), window)});\n\n  /**\n   * Configures the top offset used when scrolling to an anchor.\n   *\n   * When given a tuple with two number, the service will always use the numbers.\n   * When given a function, the service will invoke the function every time it restores scroll\n   * position.\n   */\n  abstract setOffset(offset: [number, number]|(() => [number, number])): void;\n\n  /**\n   * Returns the current scroll position.\n   */\n  abstract getScrollPosition(): [number, number];\n\n  /**\n   * Sets the scroll position.\n   */\n  abstract scrollToPosition(position: [number, number]): void;\n\n  /**\n   * Scrolls to the provided anchor.\n   */\n  abstract scrollToAnchor(anchor: string): void;\n\n  /**\n   *\n   * Disables automatic scroll restoration provided by the browser.\n   *\n   * See also [window.history.scrollRestoration\n   * info](https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration)\n   */\n  abstract setHistoryScrollRestoration(scrollRestoration: 'auto'|'manual'): void;\n}\n\n/**\n * Manages the scroll position.\n */\nexport class BrowserViewportScroller implements ViewportScroller {\n  private offset: () => [number, number] = () => [0, 0];\n\n  constructor(private document: any, private window: any) {}\n\n  /**\n   * Configures the top offset used when scrolling to an anchor.\n   *\n   * * When given a number, the service will always use the number.\n   * * When given a function, the service will invoke the function every time it restores scroll\n   * position.\n   */\n  setOffset(offset: [number, number]|(() => [number, number])): void {\n    if (Array.isArray(offset)) {\n      this.offset = () => offset;\n    } else {\n      this.offset = offset;\n    }\n  }\n\n  /**\n   * Returns the current scroll position.\n   */\n  getScrollPosition(): [number, number] {\n    if (this.supportScrollRestoration()) {\n      return [this.window.scrollX, this.window.scrollY];\n    } else {\n      return [0, 0];\n    }\n  }\n\n  /**\n   * Sets the scroll position.\n   */\n  scrollToPosition(position: [number, number]): void {\n    if (this.supportScrollRestoration()) {\n      this.window.scrollTo(position[0], position[1]);\n    }\n  }\n\n  /**\n   * Scrolls to the provided anchor.\n   */\n  scrollToAnchor(anchor: string): void {\n    if (this.supportScrollRestoration()) {\n      const elSelectedById = this.document.querySelector(`#${anchor}`);\n      if (elSelectedById) {\n        this.scrollToElement(elSelectedById);\n        return;\n      }\n      const elSelectedByName = this.document.querySelector(`[name='${anchor}']`);\n      if (elSelectedByName) {\n        this.scrollToElement(elSelectedByName);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Disables automatic scroll restoration provided by the browser.\n   */\n  setHistoryScrollRestoration(scrollRestoration: 'auto'|'manual'): void {\n    if (this.supportScrollRestoration()) {\n      const history = this.window.history;\n      if (history && history.scrollRestoration) {\n        history.scrollRestoration = scrollRestoration;\n      }\n    }\n  }\n\n  private scrollToElement(el: any): void {\n    const rect = el.getBoundingClientRect();\n    const left = rect.left + this.window.pageXOffset;\n    const top = rect.top + this.window.pageYOffset;\n    const offset = this.offset();\n    this.window.scrollTo(left - offset[0], top - offset[1]);\n  }\n\n  /**\n   * We only support scroll restoration when we can get a hold of window.\n   * This means that we do not support this behavior when running in a web worker.\n   *\n   * Lifting this restriction right now would require more changes in the dom adapter.\n   * Since webworkers aren't widely used, we will lift it once RouterScroller is\n   * battle-tested.\n   */\n  private supportScrollRestoration(): boolean {\n    try {\n      return !!this.window && !!this.window.scrollTo;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\n\n/**\n * Provides an empty implementation of the viewport scroller. This will\n * live in @angular/common as it will be used by both platform-server and platform-webworker.\n */\nexport class NullViewportScroller implements ViewportScroller {\n  /**\n   * Empty implementation\n   */\n  setOffset(offset: [number, number]|(() => [number, number])): void {}\n\n  /**\n   * Empty implementation\n   */\n  getScrollPosition(): [number, number] { return [0, 0]; }\n\n  /**\n   * Empty implementation\n   */\n  scrollToPosition(position: [number, number]): void {}\n\n  /**\n   * Empty implementation\n   */\n  scrollToAnchor(anchor: string): void {}\n\n  /**\n   * Empty implementation\n   */\n  setHistoryScrollRestoration(scrollRestoration: 'auto'|'manual'): void {}\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {COMMON_DIRECTIVES as Éµangular_packages_common_common_e} from './src/directives/index';\nexport {LocaleDataIndex as Éµangular_packages_common_common_c} from './src/i18n/locale_data';\nexport {findLocaleData as Éµangular_packages_common_common_d} from './src/i18n/locale_data_api';\nexport {DEPRECATED_PLURAL_FN as Éµangular_packages_common_common_a,getPluralCase as Éµangular_packages_common_common_b} from './src/i18n/localization';\nexport {COMMON_DEPRECATED_I18N_PIPES as Éµangular_packages_common_common_g} from './src/pipes/deprecated/index';\nexport {COMMON_PIPES as Éµangular_packages_common_common_f} from './src/pipes/index';"]}